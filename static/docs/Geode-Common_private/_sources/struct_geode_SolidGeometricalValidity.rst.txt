.. index:: pair: struct; geode::SolidGeometricalValidity
.. _doxid-structgeode_1_1_solid_geometrical_validity:

struct geode::SolidGeometricalValidity
======================================

.. toctree::
	:hidden:




.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <tetrahedral_solid_modifier_simulation.h>
	
	struct SolidGeometricalValidity
	{
		// fields
	
		bool :target:`is_geometrically_valid<doxid-structgeode_1_1_solid_geometrical_validity_1a563d8cb1b8c6da730540faf218280cca>` { true };
		std::vector<Tetrahedron> :target:`invalid_new_tetrahedra<doxid-structgeode_1_1_solid_geometrical_validity_1a8e39c6329e92f5977463544af1888c32>`;
		std::vector<index_t> :target:`invalid_tetrahedron_ids<doxid-structgeode_1_1_solid_geometrical_validity_1ab879c396064c5af9064674274f165371>`;

		// methods
	
		:target:`operator bool<doxid-structgeode_1_1_solid_geometrical_validity_1a9504c69830f14c6a1b76aa885a5a34cd>` () const;
	};

	// direct descendants

	struct :ref:`SolidCollapseEdgeValidity<doxid-structgeode_1_1_solid_collapse_edge_validity>`;
	struct :ref:`SolidMovePointValidity<doxid-structgeode_1_1_solid_move_point_validity>`;
	struct :ref:`SolidSplitEdgeValidity<doxid-structgeode_1_1_solid_split_edge_validity>`;
	struct :ref:`SolidSplitFacetValidity<doxid-structgeode_1_1_solid_split_facet_validity>`;
	struct :ref:`SolidSplitTetrahedronValidity<doxid-structgeode_1_1_solid_split_tetrahedron_validity>`;
	struct :ref:`SolidSwapEdgeValidity<doxid-structgeode_1_1_solid_swap_edge_validity>`;
	struct :ref:`SolidSwapFacetValidity<doxid-structgeode_1_1_solid_swap_facet_validity>`;
