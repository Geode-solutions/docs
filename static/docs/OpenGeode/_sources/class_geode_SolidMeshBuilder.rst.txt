.. index:: pair: class; geode::SolidMeshBuilder
.. _doxid-classgeode_1_1_solid_mesh_builder:

template class geode::SolidMeshBuilder
======================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Interface class to represent the builder of a :ref:`SolidMesh <doxid-classgeode_1_1_solid_mesh>` :ref:`More...<details-classgeode_1_1_solid_mesh_builder>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <solid_mesh_builder.h>
	
	template <index_t dimension>
	class SolidMeshBuilder: public :ref:`geode::VertexSetBuilder<doxid-classgeode_1_1_vertex_set_builder>`
	{
	public:
		// methods
	
		static std::unique_ptr<SolidMeshBuilder<dimension>> :ref:`create<doxid-classgeode_1_1_solid_mesh_builder_1ae4bf1f3889aa3198e1e4f178a2669643>`(:ref:`SolidMesh<doxid-classgeode_1_1_solid_mesh>`<dimension>& mesh);
		void :ref:`set_point<doxid-classgeode_1_1_solid_mesh_builder_1ac4f521e4a58819291ac7dbc5d9f3ecef>`(:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` vertex_id, :ref:`Point<doxid-classgeode_1_1_point>`<dimension> point);
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` :ref:`create_point<doxid-classgeode_1_1_solid_mesh_builder_1a87b47e801441813c7e14a6f7c6532f45>`(:ref:`Point<doxid-classgeode_1_1_point>`<dimension> point);
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` :ref:`create_polyhedron<doxid-classgeode_1_1_solid_mesh_builder_1ac29ae34b9f7105592542f7feb49476ac>`(absl::Span<const :ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`> vertices, absl::Span<const std::vector<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`>> facets);
		void :ref:`set_polyhedron_vertex<doxid-classgeode_1_1_solid_mesh_builder_1a2a671a534963827f8543fe5bcec949d5>`(const :ref:`PolyhedronVertex<doxid-structgeode_1_1_polyhedron_vertex>`& polyhedron_vertex, :ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` vertex_id);
		void :ref:`set_polyhedron_adjacent<doxid-classgeode_1_1_solid_mesh_builder_1a04bcc2fa5f0683ef300c3803ef2029cb>`(const :ref:`PolyhedronFacet<doxid-structgeode_1_1_polyhedron_facet>`& polyhedron_facet, :ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` adjacent_id);
		void :ref:`unset_polyhedron_adjacent<doxid-classgeode_1_1_solid_mesh_builder_1ad796770e14b37399078225c28176adef>`(const :ref:`PolyhedronFacet<doxid-structgeode_1_1_polyhedron_facet>`& polyhedron_facet);
		void :ref:`compute_polyhedron_adjacencies<doxid-classgeode_1_1_solid_mesh_builder_1a6c1e88b2e62239f95bfa8ac1a5ccd7cd>`();
		void :ref:`compute_polyhedron_adjacencies<doxid-classgeode_1_1_solid_mesh_builder_1a453601b728f5cee2ed4260152ad98a25>`(absl::Span<const :ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`> polyhedra_to_connect);
		std::vector<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`> :ref:`delete_polyhedra<doxid-classgeode_1_1_solid_mesh_builder_1a32f574612c6eccb0ca785a2901b9ea5f>`(const std::vector<bool>& to_delete);
		std::vector<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`> :ref:`delete_isolated_vertices<doxid-classgeode_1_1_solid_mesh_builder_1aeaf218f62a394d16e9f9d42ad91648a1>`();
		std::vector<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`> :ref:`delete_isolated_facets<doxid-classgeode_1_1_solid_mesh_builder_1abc852be15ef9f2dd79785c09e7452819>`();
		std::vector<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`> :ref:`delete_isolated_edges<doxid-classgeode_1_1_solid_mesh_builder_1a11d48ea535b4640b5e6656f58c14c466>`();
		void :ref:`associate_polyhedron_vertex_to_vertex<doxid-classgeode_1_1_solid_mesh_builder_1aa40541c7f2f810609b90037af4c0d968>`(const :ref:`PolyhedronVertex<doxid-structgeode_1_1_polyhedron_vertex>`& polyhedron_vertex, :ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` vertex_id);
		void :ref:`disassociate_polyhedron_vertex_to_vertex<doxid-classgeode_1_1_solid_mesh_builder_1ada24ba26ccc6c9e3dff028de0e37606a>`(:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` vertex_id);
	
		void :target:`copy<doxid-classgeode_1_1_solid_mesh_builder_1af79edca495dfb0bed0bbdaf464681950>`(
			const :ref:`SolidMesh<doxid-classgeode_1_1_solid_mesh>`<dimension>& solid_mesh,
			BuilderKey
			);
	
		void :target:`set_mesh<doxid-classgeode_1_1_solid_mesh_builder_1a9fe392711684b0c56b017077df8d1d45>`(
			:ref:`SolidMesh<doxid-classgeode_1_1_solid_mesh>`<dimension>& mesh,
			:ref:`MeshBuilderFactoryKey<doxid-classgeode_1_1_mesh_builder_factory_key>` key
			);
	};

	// direct descendants

	template <index_t dimension>
	class :ref:`PolyhedralSolidBuilder<doxid-classgeode_1_1_polyhedral_solid_builder>`;

	template <index_t dimension>
	class :ref:`TetrahedralSolidBuilder<doxid-classgeode_1_1_tetrahedral_solid_builder>`;

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` :ref:`create_vertex<doxid-classgeode_1_1_vertex_set_builder_1ad20a5799994288413a1f198dbe0a505d>`();
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` :ref:`create_vertices<doxid-classgeode_1_1_vertex_set_builder_1a61231a71fdad16ddb2b7e14ebc21a772>`(:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` nb);
		std::vector<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`> :ref:`delete_vertices<doxid-classgeode_1_1_vertex_set_builder_1a2f167c430554a70b6dd09587d2dbbcff>`(const std::vector<bool>& to_delete);
		void :ref:`set_mesh<doxid-classgeode_1_1_vertex_set_builder_1ae00c46d0983aef744f8eadba2f0e6fba>`(:ref:`VertexSet<doxid-classgeode_1_1_vertex_set>`& mesh, :ref:`MeshBuilderFactoryKey<doxid-classgeode_1_1_mesh_builder_factory_key>`);
		static std::unique_ptr<:ref:`VertexSetBuilder<doxid-classgeode_1_1_vertex_set_builder>`> :ref:`create<doxid-classgeode_1_1_vertex_set_builder_1a771651214baac8b1f85db964a73a4952>`(:ref:`VertexSet<doxid-classgeode_1_1_vertex_set>`& mesh);

.. _details-classgeode_1_1_solid_mesh_builder:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Interface class to represent the builder of a :ref:`SolidMesh <doxid-classgeode_1_1_solid_mesh>`

Methods
-------

.. index:: pair: function; create
.. _doxid-classgeode_1_1_solid_mesh_builder_1ae4bf1f3889aa3198e1e4f178a2669643:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static std::unique_ptr<SolidMeshBuilder<dimension>> create(:ref:`SolidMesh<doxid-classgeode_1_1_solid_mesh>`<dimension>& mesh)

Create the builder associated with a :ref:`SolidMesh <doxid-classgeode_1_1_solid_mesh>`.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- mesh

		- The :ref:`SolidMesh <doxid-classgeode_1_1_solid_mesh>` to build/modify

.. index:: pair: function; set_point
.. _doxid-classgeode_1_1_solid_mesh_builder_1ac4f521e4a58819291ac7dbc5d9f3ecef:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void set_point(:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` vertex_id, :ref:`Point<doxid-classgeode_1_1_point>`<dimension> point)

Set coordinates to a vertex. This vertex should be created before.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- vertex_id

		- The vertex, in [0, nb_vertices()-1].

	*
		- point

		- The vertex coordinates

.. index:: pair: function; create_point
.. _doxid-classgeode_1_1_solid_mesh_builder_1a87b47e801441813c7e14a6f7c6532f45:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` create_point(:ref:`Point<doxid-classgeode_1_1_point>`<dimension> point)

Create a new point with associated coordinates.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- point

		- The point to create



.. rubric:: Returns:

the index of the created point

.. index:: pair: function; create_polyhedron
.. _doxid-classgeode_1_1_solid_mesh_builder_1ac29ae34b9f7105592542f7feb49476ac:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` create_polyhedron(
		absl::Span<const :ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`> vertices,
		absl::Span<const std::vector<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`>> facets
		)

Create a new polyhedron from vertices and facets.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- vertices

		- The vertices defining the polyhedron to create

	*
		- facets

		- The list of ordered vertices defining all the facets of the polyhedron



.. rubric:: Returns:

the index of the created polyhedron

.. index:: pair: function; set_polyhedron_vertex
.. _doxid-classgeode_1_1_solid_mesh_builder_1a2a671a534963827f8543fe5bcec949d5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void set_polyhedron_vertex(const :ref:`PolyhedronVertex<doxid-structgeode_1_1_polyhedron_vertex>`& polyhedron_vertex, :ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` vertex_id)

Modify a polyhedron vertex.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- polyhedron_vertex

		- The index of the polyhedron vertex to modify

	*
		- vertex_id

		- Index of the mesh vertex to set as polyhedron vertex

.. index:: pair: function; set_polyhedron_adjacent
.. _doxid-classgeode_1_1_solid_mesh_builder_1a04bcc2fa5f0683ef300c3803ef2029cb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void set_polyhedron_adjacent(const :ref:`PolyhedronFacet<doxid-structgeode_1_1_polyhedron_facet>`& polyhedron_facet, :ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` adjacent_id)

Set a polyhedron adgjacent through a facet.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- polygon_facet

		- The index of the polygon facet

	*
		- adjacent_id

		- Index of the adjacent polyhedron

.. index:: pair: function; unset_polyhedron_adjacent
.. _doxid-classgeode_1_1_solid_mesh_builder_1ad796770e14b37399078225c28176adef:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void unset_polyhedron_adjacent(const :ref:`PolyhedronFacet<doxid-structgeode_1_1_polyhedron_facet>`& polyhedron_facet)

Unset a polyhedron adjacency through a facet.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- polygon_facet

		- The index of the polygon facet

.. index:: pair: function; compute_polyhedron_adjacencies
.. _doxid-classgeode_1_1_solid_mesh_builder_1a6c1e88b2e62239f95bfa8ac1a5ccd7cd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void compute_polyhedron_adjacencies()

Compute all the adjacencies between the solid polyhedra

.. index:: pair: function; compute_polyhedron_adjacencies
.. _doxid-classgeode_1_1_solid_mesh_builder_1a453601b728f5cee2ed4260152ad98a25:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void compute_polyhedron_adjacencies(absl::Span<const :ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`> polyhedra_to_connect)

Compute the adjacencies between the given solid polyhedra



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- polyhedra_to_connect

		- Set of polyhedra for which compute adjacencies

.. index:: pair: function; delete_polyhedra
.. _doxid-classgeode_1_1_solid_mesh_builder_1a32f574612c6eccb0ca785a2901b9ea5f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::vector<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`> delete_polyhedra(const std::vector<bool>& to_delete)

Delete a set of solid polyhedra



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- to_delete

		- :ref:`Vector <doxid-classgeode_1_1_vector>` of size solid_mesh_.nb_polyhedra(). If to_delete[i] is true the polyhedra of index i is deleted, else it is kept.



.. rubric:: Returns:

the mapping between old polyhedron indices to new ones. Deleted polyhedra new index is NO_ID

.. index:: pair: function; delete_isolated_vertices
.. _doxid-classgeode_1_1_solid_mesh_builder_1aeaf218f62a394d16e9f9d42ad91648a1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::vector<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`> delete_isolated_vertices()

Delete all the isolated vertices (not used as polyhedron vertices)



.. rubric:: Returns:

the mapping between old vertex indices to new ones. Deleted vertices new index is NO_ID

.. index:: pair: function; delete_isolated_facets
.. _doxid-classgeode_1_1_solid_mesh_builder_1abc852be15ef9f2dd79785c09e7452819:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::vector<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`> delete_isolated_facets()

Delete all the isolated facets (not used as polyhedron facets)



.. rubric:: Returns:

the mapping between old facet indices to new ones. Deleted facets new index is NO_ID

.. index:: pair: function; delete_isolated_edges
.. _doxid-classgeode_1_1_solid_mesh_builder_1a11d48ea535b4640b5e6656f58c14c466:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::vector<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`> delete_isolated_edges()

Delete all the isolated edges (not used as polyhedron edges)



.. rubric:: Returns:

the mapping between old edge indices to new ones. Deleted edges new index is NO_ID

.. index:: pair: function; associate_polyhedron_vertex_to_vertex
.. _doxid-classgeode_1_1_solid_mesh_builder_1aa40541c7f2f810609b90037af4c0d968:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void associate_polyhedron_vertex_to_vertex(
		const :ref:`PolyhedronVertex<doxid-structgeode_1_1_polyhedron_vertex>`& polyhedron_vertex,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` vertex_id
		)

Set a polyhedron vertex to a given vertex.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- polyhedron_vertex

		- :ref:`PolyhedronVertex <doxid-structgeode_1_1_polyhedron_vertex>` corresponding to the vertex.

	*
		- vertex_id

		- Index of the vertex.

.. index:: pair: function; disassociate_polyhedron_vertex_to_vertex
.. _doxid-classgeode_1_1_solid_mesh_builder_1ada24ba26ccc6c9e3dff028de0e37606a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void disassociate_polyhedron_vertex_to_vertex(:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` vertex_id)

Unset polyhedron vertex information to a given vertex.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- vertex_id

		- Index of the vertex.

