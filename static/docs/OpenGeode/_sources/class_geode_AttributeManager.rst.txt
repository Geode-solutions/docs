.. index:: pair: class; geode::AttributeManager
.. _doxid-classgeode_1_1_attribute_manager:

class geode::AttributeManager
=============================

.. toctree::
	:hidden:

Overview
~~~~~~~~

This class manages all its associated Attributes. :ref:`More...<details-classgeode_1_1_attribute_manager>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <attribute_manager.h>
	
	class AttributeManager
	{
	public:
		// methods
	
		template <typename T>
		std::shared_ptr<:ref:`ReadOnlyAttribute<doxid-classgeode_1_1_read_only_attribute>`<T>> :ref:`find_attribute<doxid-classgeode_1_1_attribute_manager_1aaba435916e40673d8432463c22c7dc5f>`(const std::string& name);
	
		template <template< typename > class Attribute, typename T, typename... Args>
		std::shared_ptr<Attribute<T>> :ref:`find_or_create_attribute<doxid-classgeode_1_1_attribute_manager_1a9724050b57c631ef96a741028e1df81b>`(
			const std::string& name,
			const Args&... args
			);
	
		void :ref:`resize<doxid-classgeode_1_1_attribute_manager_1ab78ec5f69d4a452ef59fb824a7a0e95c>`(:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` size);
		std::vector<std::string> :ref:`attribute_names<doxid-classgeode_1_1_attribute_manager_1a9331405f2fe8a2a3d66257b79d90e650>`() const;
		bool :ref:`attribute_exists<doxid-classgeode_1_1_attribute_manager_1a723fddb0b2f2d0fc7c7546be5cd64ac1>`(const std::string& name) const;
		void :ref:`delete_attribute<doxid-classgeode_1_1_attribute_manager_1a0b66879bc0bf9312a81fadfb8e2ea0d0>`(const std::string& name);
		std::string :ref:`attribute_type<doxid-classgeode_1_1_attribute_manager_1ad411fbf917b58ab82d8959218fd85463>`(const std::string& name) const;
		void :ref:`clear<doxid-classgeode_1_1_attribute_manager_1a009194a92dfd94b2e0ac4c397c5f9ad8>`();
		void :ref:`clear_attributes<doxid-classgeode_1_1_attribute_manager_1aa25870b7f9a775d641a23ee44e0fc7d0>`();
		void :ref:`delete_elements<doxid-classgeode_1_1_attribute_manager_1af39ef3210749c1a18a7bc26c3b2a38c7>`(const std::vector<bool>& to_delete);
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` :ref:`nb_elements<doxid-classgeode_1_1_attribute_manager_1a44da96b84e6d1a25159cee065cc4d073>`() const;
	
		template <typename Type, typename Serializer>
		static void :target:`register_attribute_type<doxid-classgeode_1_1_attribute_manager_1a1e567bda8fee0ef3a90c54c1dac37790>`(:ref:`PContext<doxid-namespacegeode_1a79da04720a9926e6212751b7e0d5b6c7>`& context);
	};
.. _details-classgeode_1_1_attribute_manager:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This class manages all its associated Attributes. Each Attribute is registered and can be retrieved by a given name.

Methods
-------

.. index:: pair: function; find_attribute
.. _doxid-classgeode_1_1_attribute_manager_1aaba435916e40673d8432463c22c7dc5f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	std::shared_ptr<:ref:`ReadOnlyAttribute<doxid-classgeode_1_1_read_only_attribute>`<T>> find_attribute(const std::string& name)

Recover the typed Attribute from the attribute name



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- name

		- The associated attribute name to look for

	*
		- T

		- The type to of the :ref:`ReadOnlyAttribute <doxid-classgeode_1_1_read_only_attribute>` element

	*
		- :ref:`OpenGeodeException <doxid-classgeode_1_1_open_geode_exception>`

		- if no Attribute found

.. index:: pair: function; find_or_create_attribute
.. _doxid-classgeode_1_1_attribute_manager_1a9724050b57c631ef96a741028e1df81b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <template< typename > class Attribute, typename T, typename... Args>
	std::shared_ptr<Attribute<T>> find_or_create_attribute(
		const std::string& name,
		const Args&... args
		)

Recover or create the attribute from the manager and the attribute name. If the recovered Attribute is not a of the same type than the attribute, it replaces it by the Attribute corresponding to the attribute.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- name

		- The associated attribute name to look for

	*
		- Attribute

		- The attribute type to look for, such as :ref:`ConstantAttribute <doxid-classgeode_1_1_constant_attribute>`

	*
		- T

		- The type of the Attribute element

	*
		- Args

		- The optional arguments to construct the Attribute

	*
		- :ref:`OpenGeodeException <doxid-classgeode_1_1_open_geode_exception>`

		- if the Attribute replacement failed

.. index:: pair: function; resize
.. _doxid-classgeode_1_1_attribute_manager_1ab78ec5f69d4a452ef59fb824a7a0e95c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void resize(:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` size)

Resize all the attributes to the given size



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- size

		- The new attribute size

.. index:: pair: function; attribute_names
.. _doxid-classgeode_1_1_attribute_manager_1a9331405f2fe8a2a3d66257b79d90e650:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::vector<std::string> attribute_names() const

Get all the associated attribute names

.. index:: pair: function; attribute_exists
.. _doxid-classgeode_1_1_attribute_manager_1a723fddb0b2f2d0fc7c7546be5cd64ac1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool attribute_exists(const std::string& name) const

Return true if an attribute matching the given name.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- name

		- The attribute name to use

.. index:: pair: function; delete_attribute
.. _doxid-classgeode_1_1_attribute_manager_1a0b66879bc0bf9312a81fadfb8e2ea0d0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void delete_attribute(const std::string& name)

Delete the attribute matching the given name. Do nothing if the name does not exist.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- name

		- The attribute name to delete

.. index:: pair: function; attribute_type
.. _doxid-classgeode_1_1_attribute_manager_1ad411fbf917b58ab82d8959218fd85463:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::string attribute_type(const std::string& name) const

Get the typeid name of the attribute type



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- name

		- The attribute name to use

.. index:: pair: function; clear
.. _doxid-classgeode_1_1_attribute_manager_1a009194a92dfd94b2e0ac4c397c5f9ad8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void clear()

Remove all the attributes in the manager

.. index:: pair: function; clear_attributes
.. _doxid-classgeode_1_1_attribute_manager_1aa25870b7f9a775d641a23ee44e0fc7d0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void clear_attributes()

Clear all the attribute content. This is equivalent to calling resize( 0 ).

.. index:: pair: function; delete_elements
.. _doxid-classgeode_1_1_attribute_manager_1af39ef3210749c1a18a7bc26c3b2a38c7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void delete_elements(const std::vector<bool>& to_delete)

Delete a set of attribute elements.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- to_delete

		- a vector of size :ref:`nb_elements() <doxid-classgeode_1_1_attribute_manager_1a44da96b84e6d1a25159cee065cc4d073>`. If to_delete[e] is true, then the element e will be destroyed.

.. index:: pair: function; nb_elements
.. _doxid-classgeode_1_1_attribute_manager_1a44da96b84e6d1a25159cee065cc4d073:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` nb_elements() const

Get the number of elements in each attribute

