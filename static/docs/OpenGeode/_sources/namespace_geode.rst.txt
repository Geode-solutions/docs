.. index:: pair: namespace; geode
.. _doxid-namespacegeode:

namespace geode
===============

.. toctree::
	:hidden:

	namespace_geode_detail.rst
	enum_geode_IntersectionType.rst
	enum_geode_Position.rst
	enum_geode_Side.rst
	struct_geode_AttributeLinearInterpolation.rst
	struct_geode_AttributeLinearInterpolationImpl.rst
	struct_geode_AttributeLinearInterpolationImpl-2.rst
	struct_geode_AttributeProperties.rst
	struct_geode_BRepComponentMeshEdges.rst
	struct_geode_BlockDefinition.rst
	struct_geode_BlockPolyhedraFacetVertices.rst
	struct_geode_BlockPolyhedronFacet.rst
	struct_geode_BoundaryDefinition.rst
	struct_geode_ComponentMeshVertex.rst
	struct_geode_ComponentTag.rst
	struct_geode_CornerDefinition.rst
	struct_geode_CorrectnessInfo.rst
	struct_geode_EdgeVertex.rst
	struct_geode_GenericAttributeConversion.rst
	struct_geode_GenericAttributeConversion-2.rst
	struct_geode_IntersectionResult.rst
	struct_geode_LineDefinition.rst
	struct_geode_MeshEdge.rst
	struct_geode_MeshElement.rst
	struct_geode_MeshImplTag.rst
	struct_geode_MeshPolygon.rst
	struct_geode_MeshTypeTag.rst
	struct_geode_MeshVertex.rst
	struct_geode_ModelComponentMeshEdges.rst
	struct_geode_PolygonEdge.rst
	struct_geode_PolygonVertex.rst
	struct_geode_PolyhedronFacet.rst
	struct_geode_PolyhedronFacetEdge.rst
	struct_geode_PolyhedronFacetVertex.rst
	struct_geode_PolyhedronVertex.rst
	struct_geode_SectionComponentMeshEdges.rst
	struct_geode_SidedSurface.rst
	struct_geode_SortedSurfaces.rst
	struct_geode_SurfaceDefinition.rst
	struct_geode_SurfacePolygonEdge.rst
	struct_geode_SurfacePolygonsEdgeVertices.rst
	struct_geode_uuid.rst
	class_geode_AABBTree.rst
	class_geode_AddComponents.rst
	class_geode_AddComponentsBuilders.rst
	class_geode_AttributeBase.rst
	class_geode_AttributeManager.rst
	class_geode_BRep.rst
	class_geode_BRepBuilder.rst
	class_geode_BRepInput.rst
	class_geode_BRepOutput.rst
	class_geode_BaseRange.rst
	class_geode_BeginEnd.rst
	class_geode_BijectiveMapping.rst
	class_geode_Block.rst
	class_geode_Blocks.rst
	class_geode_BlocksBuilder.rst
	class_geode_BoundingBox.rst
	class_geode_CachedValue.rst
	class_geode_Circle.rst
	class_geode_Component.rst
	class_geode_ComponentID.rst
	class_geode_ConsoleLoggerClient.rst
	class_geode_ConsoleProgressLoggerClient.rst
	class_geode_ConstantAttribute.rst
	class_geode_Corner.rst
	class_geode_Corners.rst
	class_geode_CornersBuilder.rst
	class_geode_DecrementOperator.rst
	class_geode_DefaultGrowable.rst
	class_geode_DistanceToEdge.rst
	class_geode_DistanceToTetrahedron.rst
	class_geode_DistanceToTriangle.rst
	class_geode_EdgedCurve.rst
	class_geode_EdgedCurveBuilder.rst
	class_geode_EdgedCurveInput.rst
	class_geode_EdgedCurveOutput.rst
	class_geode_EraserRange.rst
	class_geode_Factory.rst
	class_geode_GenericCircle.rst
	class_geode_GenericInfiniteLine.rst
	class_geode_GenericMapping.rst
	class_geode_GenericPlane.rst
	class_geode_GenericSegment.rst
	class_geode_GenericSphere.rst
	class_geode_GenericTetrahedron.rst
	class_geode_GenericTriangle.rst
	class_geode_Graph.rst
	class_geode_GraphBuilder.rst
	class_geode_GraphInput.rst
	class_geode_GraphOutput.rst
	class_geode_Grid.rst
	class_geode_GridBuilder.rst
	class_geode_Growable.rst
	class_geode_HybridSolid.rst
	class_geode_HybridSolidBuilder.rst
	class_geode_HybridSolidInput.rst
	class_geode_HybridSolidOutput.rst
	class_geode_IOFile.rst
	class_geode_Identifier.rst
	class_geode_IdentifierBuilder.rst
	class_geode_IncrementOperator.rst
	class_geode_InfiniteLine.rst
	class_geode_Input.rst
	class_geode_Library.rst
	class_geode_Line.rst
	class_geode_Lines.rst
	class_geode_LinesBuilder.rst
	class_geode_Logger.rst
	class_geode_LoggerClient.rst
	class_geode_LoggerManager.rst
	class_geode_MeshBuilderFactory.rst
	class_geode_MeshBuilderFactoryKey.rst
	class_geode_MeshFactory.rst
	class_geode_ModelBoundaries.rst
	class_geode_ModelBoundariesBuilder.rst
	class_geode_ModelBoundary.rst
	class_geode_ModelMapping.rst
	class_geode_NNSearch.rst
	class_geode_NamedType.rst
	class_geode_OpenGeodeBRepInput.rst
	class_geode_OpenGeodeBRepOutput.rst
	class_geode_OpenGeodeEdgedCurve.rst
	class_geode_OpenGeodeEdgedCurveBuilder.rst
	class_geode_OpenGeodeException.rst
	class_geode_OpenGeodeGraph.rst
	class_geode_OpenGeodeGraphBuilder.rst
	class_geode_OpenGeodeHybridSolid.rst
	class_geode_OpenGeodeHybridSolidBuilder.rst
	class_geode_OpenGeodePointSet.rst
	class_geode_OpenGeodePointSetBuilder.rst
	class_geode_OpenGeodePolygonalSurface.rst
	class_geode_OpenGeodePolygonalSurfaceBuilder.rst
	class_geode_OpenGeodePolyhedralSolid.rst
	class_geode_OpenGeodePolyhedralSolidBuilder.rst
	class_geode_OpenGeodeRegularGrid.rst
	class_geode_OpenGeodeRegularGrid-2.rst
	class_geode_OpenGeodeRegularGridBuilder.rst
	class_geode_OpenGeodeRegularGridBuilder-2.rst
	class_geode_OpenGeodeSectionInput.rst
	class_geode_OpenGeodeSectionOutput.rst
	class_geode_OpenGeodeTetrahedralSolid.rst
	class_geode_OpenGeodeTetrahedralSolidBuilder.rst
	class_geode_OpenGeodeTriangulatedSurface.rst
	class_geode_OpenGeodeTriangulatedSurfaceBuilder.rst
	class_geode_OpenGeodeVertexSet.rst
	class_geode_OpenGeodeVertexSetBuilder.rst
	class_geode_Output.rst
	class_geode_OwnerCircle.rst
	class_geode_OwnerInfiniteLine.rst
	class_geode_OwnerPlane.rst
	class_geode_OwnerSegment.rst
	class_geode_OwnerSphere.rst
	class_geode_OwnerTetrahedron.rst
	class_geode_OwnerTriangle.rst
	class_geode_PImpl.rst
	class_geode_PassKey.rst
	class_geode_Plane.rst
	class_geode_Point.rst
	class_geode_PointSet.rst
	class_geode_PointSetBuilder.rst
	class_geode_PointSetInput.rst
	class_geode_PointSetOutput.rst
	class_geode_PolygonalSurface.rst
	class_geode_PolygonalSurfaceBuilder.rst
	class_geode_PolygonalSurfaceInput.rst
	class_geode_PolygonalSurfaceOutput.rst
	class_geode_PolyhedralSolid.rst
	class_geode_PolyhedralSolidBuilder.rst
	class_geode_PolyhedralSolidInput.rst
	class_geode_PolyhedralSolidOutput.rst
	class_geode_ProgressLogger.rst
	class_geode_ProgressLoggerClient.rst
	class_geode_ProgressLoggerManager.rst
	class_geode_RayTracing3D.rst
	class_geode_ReadOnlyAttribute.rst
	class_geode_RegularGrid.rst
	class_geode_RegularGrid-2.rst
	class_geode_RegularGridBuilder.rst
	class_geode_RegularGridBuilder-2.rst
	class_geode_RegularGridInput.rst
	class_geode_RegularGridOutput.rst
	class_geode_RegularGridPointFunction.rst
	class_geode_RegularGridScalarFunction.rst
	class_geode_Relationships.rst
	class_geode_RelationshipsBuilder.rst
	class_geode_Section.rst
	class_geode_SectionBuilder.rst
	class_geode_SectionInput.rst
	class_geode_SectionOutput.rst
	class_geode_Segment.rst
	class_geode_SimplicialBRepCreator.rst
	class_geode_SimplicialSectionCreator.rst
	class_geode_Singleton.rst
	class_geode_SolidEdges.rst
	class_geode_SolidEdgesBuilder.rst
	class_geode_SolidFacets.rst
	class_geode_SolidFacetsBuilder.rst
	class_geode_SolidMesh.rst
	class_geode_SolidMeshBuilder.rst
	class_geode_SparseAttribute.rst
	class_geode_Sphere.rst
	class_geode_Surface.rst
	class_geode_SurfaceEdges.rst
	class_geode_SurfaceEdgesBuilder.rst
	class_geode_SurfaceMesh.rst
	class_geode_SurfaceMeshBuilder.rst
	class_geode_Surfaces.rst
	class_geode_SurfacesBuilder.rst
	class_geode_TIndices.rst
	class_geode_TRange.rst
	class_geode_TReverseRange.rst
	class_geode_TetrahedralSolid.rst
	class_geode_TetrahedralSolidBuilder.rst
	class_geode_TetrahedralSolidInput.rst
	class_geode_TetrahedralSolidOutput.rst
	class_geode_TetrahedralSolidPointFunction.rst
	class_geode_TetrahedralSolidScalarFunction.rst
	class_geode_Tetrahedron.rst
	class_geode_Timer.rst
	class_geode_Topology.rst
	class_geode_TopologyBuilder.rst
	class_geode_Triangle.rst
	class_geode_TriangulatedSurface.rst
	class_geode_TriangulatedSurfaceBuilder.rst
	class_geode_TriangulatedSurfaceInput.rst
	class_geode_TriangulatedSurfaceOutput.rst
	class_geode_TriangulatedSurfacePointFunction.rst
	class_geode_TriangulatedSurfaceScalarFunction.rst
	class_geode_UnzipFile.rst
	class_geode_VariableAttribute.rst
	class_geode_VariableAttribute-2.rst
	class_geode_Vector.rst
	class_geode_VertexIdentifier.rst
	class_geode_VertexIdentifierBuilder.rst
	class_geode_VertexSet.rst
	class_geode_VertexSetBuilder.rst
	class_geode_VertexSetInput.rst
	class_geode_VertexSetOutput.rst
	class_geode_ZipFile.rst

Overview
~~~~~~~~




.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	namespace geode {

	// namespaces

	namespace :ref:`geode::detail<doxid-namespacegeode_1_1detail>`;

	// typedefs

	typedef bitsery::ext::PolymorphicContext<bitsery::ext::StandardRTTI> :target:`PContext<doxid-namespacegeode_1a79da04720a9926e6212751b7e0d5b6c7>`;
	typedef std::tuple<:ref:`PContext<doxid-namespacegeode_1a79da04720a9926e6212751b7e0d5b6c7>`, bitsery::ext::PointerLinkingContext, bitsery::ext::InheritanceContext> :target:`TContext<doxid-namespacegeode_1ada1622a88b7254dc30cc9ed94fc94814>`;
	typedef bitsery::Serializer<bitsery::OutputBufferedStreamAdapter, :ref:`TContext<doxid-namespacegeode_1ada1622a88b7254dc30cc9ed94fc94814>`> :target:`Serializer<doxid-namespacegeode_1acde102fc3576cee8a5531f85902413bb>`;
	typedef bitsery::Deserializer<bitsery::InputStreamAdapter, :ref:`TContext<doxid-namespacegeode_1ada1622a88b7254dc30cc9ed94fc94814>`> :target:`Deserializer<doxid-namespacegeode_1a2090ae31c36f663e61f2af7d87cb5f44>`;
	typedef :ref:`TRange<doxid-classgeode_1_1_t_range>`<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`> :target:`Range<doxid-namespacegeode_1af2b42e3794d9eb6a1abf901029f56c5e>`;
	typedef :ref:`TRange<doxid-classgeode_1_1_t_range>`<:ref:`local_index_t<doxid-namespacegeode_1aa4af2b9c3c63eb304286e812ba69a9a9>`> :target:`LRange<doxid-namespacegeode_1ab5da71b86e46c42efa37d163a65b04fc>`;
	typedef :ref:`TReverseRange<doxid-classgeode_1_1_t_reverse_range>`<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`> :target:`ReverseRange<doxid-namespacegeode_1a80fac5bf1c3ce3f4f6556e86954c0ddc>`;
	typedef :ref:`TReverseRange<doxid-classgeode_1_1_t_reverse_range>`<:ref:`local_index_t<doxid-namespacegeode_1aa4af2b9c3c63eb304286e812ba69a9a9>`> :target:`LReverseRange<doxid-namespacegeode_1a5ab844024112f71b10da5bb373ad7f50>`;
	typedef :ref:`TIndices<doxid-classgeode_1_1_t_indices>`<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`> :target:`Indices<doxid-namespacegeode_1aaebb9dbe6e25893b15659ec4df809184>`;
	typedef :ref:`TIndices<doxid-classgeode_1_1_t_indices>`<:ref:`local_index_t<doxid-namespacegeode_1aa4af2b9c3c63eb304286e812ba69a9a9>`> :target:`LIndices<doxid-namespacegeode_1a368939a0e951366dbffeaf4276f9295a>`;
	typedef unsigned int :target:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`;
	typedef int :target:`signed_index_t<doxid-namespacegeode_1a82faef4b63f94932b7ced06209528cdd>`;
	typedef unsigned char :target:`local_index_t<doxid-namespacegeode_1aa4af2b9c3c63eb304286e812ba69a9a9>`;
	typedef std::reference_wrapper<const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>> :target:`RefPoint<doxid-namespacegeode_1a223a5ea637f84c9b765dcbe24e70b5d6>`;
	typedef :ref:`OwnerCircle<doxid-classgeode_1_1_owner_circle>` :target:`OwnerDisk<doxid-namespacegeode_1a023c4b06375c0b37686e7a8cc26784bf>`;
	typedef :ref:`Circle<doxid-classgeode_1_1_circle>` :target:`Disk<doxid-namespacegeode_1adc63fa26776ccf0a89a29753d625d51a>`;
	typedef :ref:`OwnerInfiniteLine<doxid-classgeode_1_1_owner_infinite_line>`<dimension> :target:`OwnerRay<doxid-namespacegeode_1a7d8a22b87f804685bcc14fd7086711b8>`;
	typedef :ref:`InfiniteLine<doxid-classgeode_1_1_infinite_line>`<dimension> :target:`Ray<doxid-namespacegeode_1a4a02bd9a3f32244e9da6f9ce982c2ff3>`;
	typedef :ref:`OwnerSphere<doxid-classgeode_1_1_owner_sphere>`<dimension> :target:`OwnerBall<doxid-namespacegeode_1a906c3fc39345cc7c489fee57b1316f9d>`;
	typedef :ref:`Sphere<doxid-classgeode_1_1_sphere>`<dimension> :target:`Ball<doxid-namespacegeode_1a5f85211114c18f5ec987940b9f2aac24>`;
	typedef :ref:`Side<doxid-namespacegeode_1a0805566e7d9eb8e31ef1d932837fdb1b>` :target:`Sign<doxid-namespacegeode_1a9aab5f18b488155fab8272238a18ee8d>`;
	typedef std::pair<:ref:`Position<doxid-namespacegeode_1a316ec3486ec794c86021f0fea71f54a7>`, :ref:`Position<doxid-namespacegeode_1a316ec3486ec794c86021f0fea71f54a7>`> :target:`SegmentSegmentIntersection<doxid-namespacegeode_1ad08f71e1c9db568dd62df0bf066813b1>`;
	typedef std::pair<:ref:`Position<doxid-namespacegeode_1a316ec3486ec794c86021f0fea71f54a7>`, :ref:`Position<doxid-namespacegeode_1a316ec3486ec794c86021f0fea71f54a7>`> :target:`SegmentTriangleIntersection<doxid-namespacegeode_1acbc58086feed61355d4235a09e6e6b80>`;
	typedef absl::InlinedVector<:ref:`EdgeVertex<doxid-structgeode_1_1_edge_vertex>`, 2> :target:`EdgesAroundVertex<doxid-namespacegeode_1aab3c9dc52d762219dcc9137475590210>`;
	typedef std::array<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`, dimension> :target:`GridCellIndices<doxid-namespacegeode_1aac3d6c58a0093f05712734c7f3365eb2>`;
	typedef std::array<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`, dimension> :target:`GridVertexIndices<doxid-namespacegeode_1a4b1e1d3c1f5c30c79a4ec9624d6d3f7e>`;
	typedef std::array<:ref:`GridVertexIndices<doxid-namespacegeode_1a4b1e1d3c1f5c30c79a4ec9624d6d3f7e>`<dimension>, 1<<dimension> :target:`GridCellVertices<doxid-namespacegeode_1a54586595e29e2768b3eb1084ace9afa8>`;
	typedef absl::InlinedVector<:ref:`GridCellIndices<doxid-namespacegeode_1aac3d6c58a0093f05712734c7f3365eb2>`<dimension>, 1<<dimension> :target:`GridCellsAroundVertex<doxid-namespacegeode_1a0403bdf67bf85805094b6e99bb52b9bd>`;
	typedef :ref:`NamedType<doxid-classgeode_1_1_named_type>`<std::string, :ref:`MeshImplTag<doxid-structgeode_1_1_mesh_impl_tag>`> :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`;
	typedef :ref:`NamedType<doxid-classgeode_1_1_named_type>`<std::string, :ref:`MeshTypeTag<doxid-structgeode_1_1_mesh_type_tag>`> :ref:`MeshType<doxid-namespacegeode_1a4a0dbbac82ed73238f90bb9b2e51db53>`;
	typedef absl::InlinedVector<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`, 4> :target:`PolyhedronFacetVertices<doxid-namespacegeode_1a6490f410ec95b55f5f14923a65000792>`;
	typedef absl::InlinedVector<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`, 4> :target:`PolyhedronVertices<doxid-namespacegeode_1a6af0e9097515c9070ccb0168e4f77dec>`;
	typedef absl::InlinedVector<:ref:`PolyhedronFacet<doxid-structgeode_1_1_polyhedron_facet>`, 4> :target:`PolyhedronFacets<doxid-namespacegeode_1a118116e866a37dbbadecebb92207436d>`;
	typedef :ref:`PolyhedronFacets<doxid-namespacegeode_1a118116e866a37dbbadecebb92207436d>` :target:`PolyhedronFacetsOnBorder<doxid-namespacegeode_1af2f63049603178fd6a0be3783c5487e0>`;
	typedef absl::InlinedVector<:ref:`PolyhedronVertex<doxid-structgeode_1_1_polyhedron_vertex>`, 20> :target:`PolyhedraAroundVertex<doxid-namespacegeode_1af2cce74521d6e23e0fc15f4666174436>`;
	typedef absl::InlinedVector<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`, 10> :target:`PolyhedraAroundEdge<doxid-namespacegeode_1aa50986e7408aba331844fe80d1ba983c>`;
	typedef absl::InlinedVector<:ref:`PolyhedronFacet<doxid-structgeode_1_1_polyhedron_facet>`, 2> :target:`PolyhedraAroundFacet<doxid-namespacegeode_1a9f8d0fbd287f5475017252ef10b8eabd>`;
	typedef absl::InlinedVector<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`, 3> :target:`PolygonVertices<doxid-namespacegeode_1a2296da755f7ef7140e07007e5d56d86d>`;
	typedef absl::InlinedVector<:ref:`PolygonEdge<doxid-structgeode_1_1_polygon_edge>`, 3> :target:`PolygonEdgesOnBorder<doxid-namespacegeode_1a67300fb765762517c4026ded480669fb>`;
	typedef absl::InlinedVector<:ref:`PolygonVertex<doxid-structgeode_1_1_polygon_vertex>`, 10> :target:`PolygonsAroundVertex<doxid-namespacegeode_1a405863c7baab80fbe2a2e3198fb297b8>`;
	typedef absl::InlinedVector<:ref:`PolygonEdge<doxid-structgeode_1_1_polygon_edge>`, 2> :target:`PolygonsAroundEdge<doxid-namespacegeode_1a4d69665d76ac0fef1daae0daaf011dbd>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`EdgedCurveInput<doxid-classgeode_1_1_edged_curve_input>`<dimension>, absl::string_view> :target:`EdgedCurveInputFactory<doxid-namespacegeode_1a3132f2678784f6cc58a8ba04bde4f294>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`EdgedCurveOutput<doxid-classgeode_1_1_edged_curve_output>`<dimension>, absl::string_view> :target:`EdgedCurveOutputFactory<doxid-namespacegeode_1ac9bf7b4fac39bda6247aa0bfe329aa1a>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`GraphInput<doxid-classgeode_1_1_graph_input>`, absl::string_view> :target:`GraphInputFactory<doxid-namespacegeode_1a681af9fa581b982028f34c5e30014d13>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`GraphOutput<doxid-classgeode_1_1_graph_output>`, absl::string_view> :target:`GraphOutputFactory<doxid-namespacegeode_1a6fa592b600bd810a00392ace855deb60>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`HybridSolidInput<doxid-classgeode_1_1_hybrid_solid_input>`<dimension>, absl::string_view> :target:`HybridSolidInputFactory<doxid-namespacegeode_1a2121e66228c18390466b68c307b50a31>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`HybridSolidOutput<doxid-classgeode_1_1_hybrid_solid_output>`<dimension>, absl::string_view> :target:`HybridSolidOutputFactory<doxid-namespacegeode_1ad51dcc0a6079d9852e0abe455c71fb37>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`PointSetInput<doxid-classgeode_1_1_point_set_input>`<dimension>, absl::string_view> :target:`PointSetInputFactory<doxid-namespacegeode_1a19d6ce313b24efabf13838f4f5287ee9>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`PointSetOutput<doxid-classgeode_1_1_point_set_output>`<dimension>, absl::string_view> :target:`PointSetOutputFactory<doxid-namespacegeode_1a1751ed19df14180fd2124f6f89a4d9be>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`PolygonalSurfaceInput<doxid-classgeode_1_1_polygonal_surface_input>`<dimension>, absl::string_view> :target:`PolygonalSurfaceInputFactory<doxid-namespacegeode_1af1559c1a86e00784fd33b8f65be4096f>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`PolygonalSurfaceOutput<doxid-classgeode_1_1_polygonal_surface_output>`<dimension>, absl::string_view> :target:`PolygonalSurfaceOutputFactory<doxid-namespacegeode_1aa7b91b05976d27b401dc76e1a17bbc80>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`PolyhedralSolidInput<doxid-classgeode_1_1_polyhedral_solid_input>`<dimension>, absl::string_view> :target:`PolyhedralSolidInputFactory<doxid-namespacegeode_1aef561345c67cf06c48c7a5db51f7a851>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`PolyhedralSolidOutput<doxid-classgeode_1_1_polyhedral_solid_output>`<dimension>, absl::string_view> :target:`PolyhedralSolidOutputFactory<doxid-namespacegeode_1a70eb72b6497e313231a7922008ab335e>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`RegularGridInput<doxid-classgeode_1_1_regular_grid_input>`<dimension>, absl::string_view> :target:`RegularGridInputFactory<doxid-namespacegeode_1a6fb817e5f6a812ece8cb8a81ec9886b8>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`RegularGridOutput<doxid-classgeode_1_1_regular_grid_output>`<dimension>, absl::string_view> :target:`RegularGridOutputFactory<doxid-namespacegeode_1a00078ebaf4f92ba66000ef2e4e72ffb8>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`TetrahedralSolidInput<doxid-classgeode_1_1_tetrahedral_solid_input>`<dimension>, absl::string_view> :target:`TetrahedralSolidInputFactory<doxid-namespacegeode_1a80dbf177176f3d16a840ebbe32bb08fb>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`TetrahedralSolidOutput<doxid-classgeode_1_1_tetrahedral_solid_output>`<dimension>, absl::string_view> :target:`TetrahedralSolidOutputFactory<doxid-namespacegeode_1a305186810a7dfc5b7301a3555ebc51f0>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`TriangulatedSurfaceInput<doxid-classgeode_1_1_triangulated_surface_input>`<dimension>, absl::string_view> :target:`TriangulatedSurfaceInputFactory<doxid-namespacegeode_1a7b069930d6cb2e2a3e430bae0b9bdead>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`TriangulatedSurfaceOutput<doxid-classgeode_1_1_triangulated_surface_output>`<dimension>, absl::string_view> :target:`TriangulatedSurfaceOutputFactory<doxid-namespacegeode_1a9388a24803a251c79b515a95dff5c8c1>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`VertexSetInput<doxid-classgeode_1_1_vertex_set_input>`, absl::string_view> :target:`VertexSetInputFactory<doxid-namespacegeode_1aaacd0a2e03c02adfa7c874d6ebc3d398>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`VertexSetOutput<doxid-classgeode_1_1_vertex_set_output>`, absl::string_view> :target:`VertexSetOutputFactory<doxid-namespacegeode_1a70ed4ecf1f67bc9d4861fee1cdeea87f>`;
	typedef absl::flat_hash_map<:ref:`ComponentID<doxid-classgeode_1_1_component_i_d>`, std::vector<std::pair<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`, :ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`>>> :target:`ComponentMeshVertexPairs<doxid-namespacegeode_1ab0cc9fad3b163b933d6a81b0135bad90>`;
	typedef :ref:`uuid<doxid-structgeode_1_1uuid>` :target:`uuid_from_conversion_attribute_type<doxid-namespacegeode_1acf1a636803ffb21a84003a8d351c9391>`;
	typedef :ref:`NamedType<doxid-classgeode_1_1_named_type>`<std::string, :ref:`ComponentTag<doxid-structgeode_1_1_component_tag>`> :target:`ComponentType<doxid-namespacegeode_1a21470130d8cd560c7be98c9e4207e526>`;
	typedef :ref:`ModelMapping<doxid-classgeode_1_1_model_mapping>`<:ref:`BijectiveMapping<doxid-classgeode_1_1_bijective_mapping>`<:ref:`uuid<doxid-structgeode_1_1uuid>`>> :target:`ModelCopyMapping<doxid-namespacegeode_1afc1226ecaedc88b75713a97ea1b34ce5>`;
	typedef :ref:`ModelMapping<doxid-classgeode_1_1_model_mapping>`<:ref:`GenericMapping<doxid-classgeode_1_1_generic_mapping>`<:ref:`uuid<doxid-structgeode_1_1uuid>`>> :target:`ModelGenericMapping<doxid-namespacegeode_1a8154ea011c27a259f94c1d270eb485ea>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`BRepInput<doxid-classgeode_1_1_b_rep_input>`, absl::string_view> :target:`BRepInputFactory<doxid-namespacegeode_1abbbb675b09fc7e49c7b084c42b13381b>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`BRepOutput<doxid-classgeode_1_1_b_rep_output>`, absl::string_view> :target:`BRepOutputFactory<doxid-namespacegeode_1a1d436fcf971249d3ef7594bd5555e1c2>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`SectionInput<doxid-classgeode_1_1_section_input>`, absl::string_view> :target:`SectionInputFactory<doxid-namespacegeode_1ae3c0024aa2dc13ab9f2624748b1de561>`;
	typedef :ref:`Factory<doxid-classgeode_1_1_factory>`<std::string, :ref:`SectionOutput<doxid-classgeode_1_1_section_output>`, absl::string_view> :target:`SectionOutputFactory<doxid-namespacegeode_1a0177cee9589356fa00cc284226b4e3fc>`;

	// enums

	enum :ref:`IntersectionType<doxid-namespacegeode_1a9f15c2c020c07607391e3dd6a6ce8075>`;
	enum :ref:`Position<doxid-namespacegeode_1a316ec3486ec794c86021f0fea71f54a7>`;
	enum :ref:`Side<doxid-namespacegeode_1a0805566e7d9eb8e31ef1d932837fdb1b>`;

	// structs

	struct :ref:`AttributeLinearInterpolation<doxid-structgeode_1_1_attribute_linear_interpolation>`;

	template <index_t dimension>
	struct :ref:`AttributeLinearInterpolationImpl<Point<dimension>><doxid-structgeode_1_1_attribute_linear_interpolation_impl_3_01_point_3_01dimension_01_4_01_4>`;

	template <typename AttributeType>
	struct :ref:`AttributeLinearInterpolationImpl<doxid-structgeode_1_1_attribute_linear_interpolation_impl>`;

	struct :ref:`AttributeProperties<doxid-structgeode_1_1_attribute_properties>`;
	struct :ref:`BRepComponentMeshEdges<doxid-structgeode_1_1_b_rep_component_mesh_edges>`;
	struct :ref:`BlockDefinition<doxid-structgeode_1_1_block_definition>`;
	struct :ref:`BlockPolyhedraFacetVertices<doxid-structgeode_1_1_block_polyhedra_facet_vertices>`;
	struct :ref:`BlockPolyhedronFacet<doxid-structgeode_1_1_block_polyhedron_facet>`;
	struct :ref:`BoundaryDefinition<doxid-structgeode_1_1_boundary_definition>`;
	struct :ref:`ComponentMeshVertex<doxid-structgeode_1_1_component_mesh_vertex>`;
	struct :ref:`ComponentTag<doxid-structgeode_1_1_component_tag>`;
	struct :ref:`CornerDefinition<doxid-structgeode_1_1_corner_definition>`;

	template <typename Intersection>
	struct :ref:`CorrectnessInfo<doxid-structgeode_1_1_correctness_info>`;

	struct :ref:`EdgeVertex<doxid-structgeode_1_1_edge_vertex>`;

	template <index_t dimension>
	struct :ref:`GenericAttributeConversion<Point<dimension>><doxid-structgeode_1_1_generic_attribute_conversion_3_01_point_3_01dimension_01_4_01_4>`;

	template <typename AttributeType>
	struct :ref:`GenericAttributeConversion<doxid-structgeode_1_1_generic_attribute_conversion>`;

	template <typename Intersection>
	struct :ref:`IntersectionResult<doxid-structgeode_1_1_intersection_result>`;

	struct :ref:`LineDefinition<doxid-structgeode_1_1_line_definition>`;
	struct :ref:`MeshEdge<doxid-structgeode_1_1_mesh_edge>`;
	struct :ref:`MeshElement<doxid-structgeode_1_1_mesh_element>`;
	struct :ref:`MeshImplTag<doxid-structgeode_1_1_mesh_impl_tag>`;
	struct :ref:`MeshPolygon<doxid-structgeode_1_1_mesh_polygon>`;
	struct :ref:`MeshTypeTag<doxid-structgeode_1_1_mesh_type_tag>`;
	struct :ref:`MeshVertex<doxid-structgeode_1_1_mesh_vertex>`;
	struct :ref:`ModelComponentMeshEdges<doxid-structgeode_1_1_model_component_mesh_edges>`;
	struct :ref:`PolygonEdge<doxid-structgeode_1_1_polygon_edge>`;
	struct :ref:`PolygonVertex<doxid-structgeode_1_1_polygon_vertex>`;
	struct :ref:`PolyhedronFacet<doxid-structgeode_1_1_polyhedron_facet>`;
	struct :ref:`PolyhedronFacetEdge<doxid-structgeode_1_1_polyhedron_facet_edge>`;
	struct :ref:`PolyhedronFacetVertex<doxid-structgeode_1_1_polyhedron_facet_vertex>`;
	struct :ref:`PolyhedronVertex<doxid-structgeode_1_1_polyhedron_vertex>`;
	struct :ref:`SectionComponentMeshEdges<doxid-structgeode_1_1_section_component_mesh_edges>`;
	struct :ref:`SidedSurface<doxid-structgeode_1_1_sided_surface>`;
	struct :ref:`SortedSurfaces<doxid-structgeode_1_1_sorted_surfaces>`;
	struct :ref:`SurfaceDefinition<doxid-structgeode_1_1_surface_definition>`;
	struct :ref:`SurfacePolygonEdge<doxid-structgeode_1_1_surface_polygon_edge>`;
	struct :ref:`SurfacePolygonsEdgeVertices<doxid-structgeode_1_1_surface_polygons_edge_vertices>`;
	struct :ref:`uuid<doxid-structgeode_1_1uuid>`;

	// classes

	template <index_t dimension>
	class :ref:`AABBTree<doxid-classgeode_1_1_a_a_b_b_tree>`;

	template <index_t dimension, template<index_t> class... Components>
	class :ref:`AddComponents<doxid-classgeode_1_1_add_components>`;

	template <index_t dimension, template<index_t> class... Components>
	class :ref:`AddComponentsBuilders<doxid-classgeode_1_1_add_components_builders>`;

	class :ref:`AttributeBase<doxid-classgeode_1_1_attribute_base>`;
	class :ref:`AttributeManager<doxid-classgeode_1_1_attribute_manager>`;
	class :ref:`BRep<doxid-classgeode_1_1_b_rep>`;
	class :ref:`BRepBuilder<doxid-classgeode_1_1_b_rep_builder>`;
	class :ref:`BRepInput<doxid-classgeode_1_1_b_rep_input>`;
	class :ref:`BRepOutput<doxid-classgeode_1_1_b_rep_output>`;

	template <
		typename Type,
		template<typename> class NextOperator = IncrementOperator
		>
	class :ref:`BaseRange<doxid-classgeode_1_1_base_range>`;

	template <typename Type>
	class :ref:`BeginEnd<doxid-classgeode_1_1_begin_end>`;

	template <typename T1, typename T2 = T1>
	class :ref:`BijectiveMapping<doxid-classgeode_1_1_bijective_mapping>`;

	template <index_t dimension>
	class :ref:`Block<doxid-classgeode_1_1_block>`;

	template <index_t dimension>
	class :ref:`Blocks<doxid-classgeode_1_1_blocks>`;

	template <index_t dimension>
	class :ref:`BlocksBuilder<doxid-classgeode_1_1_blocks_builder>`;

	template <index_t dimension>
	class :ref:`BoundingBox<doxid-classgeode_1_1_bounding_box>`;

	template <typename ReturnType>
	class :ref:`CachedValue<doxid-classgeode_1_1_cached_value>`;

	class :ref:`Circle<doxid-classgeode_1_1_circle>`;

	template <index_t dimension>
	class :ref:`Component<doxid-classgeode_1_1_component>`;

	class :ref:`ComponentID<doxid-classgeode_1_1_component_i_d>`;
	class :ref:`ConsoleLoggerClient<doxid-classgeode_1_1_console_logger_client>`;
	class :ref:`ConsoleProgressLoggerClient<doxid-classgeode_1_1_console_progress_logger_client>`;

	template <typename T>
	class :ref:`ConstantAttribute<doxid-classgeode_1_1_constant_attribute>`;

	template <index_t dimension>
	class :ref:`Corner<doxid-classgeode_1_1_corner>`;

	template <index_t dimension>
	class :ref:`Corners<doxid-classgeode_1_1_corners>`;

	template <index_t dimension>
	class :ref:`CornersBuilder<doxid-classgeode_1_1_corners_builder>`;

	template <typename Type>
	class :ref:`DecrementOperator<doxid-classgeode_1_1_decrement_operator>`;

	template <typename Archive, typename T>
	class :ref:`DefaultGrowable<doxid-classgeode_1_1_default_growable>`;

	template <index_t dimension>
	class :ref:`DistanceToEdge<doxid-classgeode_1_1_distance_to_edge>`;

	template <index_t dimension>
	class :ref:`DistanceToTetrahedron<doxid-classgeode_1_1_distance_to_tetrahedron>`;

	template <index_t dimension>
	class :ref:`DistanceToTriangle<doxid-classgeode_1_1_distance_to_triangle>`;

	template <index_t dimension>
	class :ref:`EdgedCurve<doxid-classgeode_1_1_edged_curve>`;

	template <index_t dimension>
	class :ref:`EdgedCurveBuilder<doxid-classgeode_1_1_edged_curve_builder>`;

	template <index_t dimension>
	class :ref:`EdgedCurveInput<doxid-classgeode_1_1_edged_curve_input>`;

	template <index_t dimension>
	class :ref:`EdgedCurveOutput<doxid-classgeode_1_1_edged_curve_output>`;

	template <typename Type>
	class :ref:`EraserRange<doxid-classgeode_1_1_eraser_range>`;

	template <typename Key, typename BaseClass, typename... Args>
	class :ref:`Factory<doxid-classgeode_1_1_factory>`;

	template <typename PointType>
	class :ref:`GenericCircle<doxid-classgeode_1_1_generic_circle>`;

	template <typename PointType, index_t dimension>
	class :ref:`GenericInfiniteLine<doxid-classgeode_1_1_generic_infinite_line>`;

	template <typename T1, typename T2 = T1>
	class :ref:`GenericMapping<doxid-classgeode_1_1_generic_mapping>`;

	template <typename PointType>
	class :ref:`GenericPlane<doxid-classgeode_1_1_generic_plane>`;

	template <typename PointType, index_t dimension>
	class :ref:`GenericSegment<doxid-classgeode_1_1_generic_segment>`;

	template <typename PointType, index_t dimension>
	class :ref:`GenericSphere<doxid-classgeode_1_1_generic_sphere>`;

	template <typename PointType>
	class :ref:`GenericTetrahedron<doxid-classgeode_1_1_generic_tetrahedron>`;

	template <typename PointType, index_t dimension>
	class :ref:`GenericTriangle<doxid-classgeode_1_1_generic_triangle>`;

	class :ref:`Graph<doxid-classgeode_1_1_graph>`;
	class :ref:`GraphBuilder<doxid-classgeode_1_1_graph_builder>`;
	class :ref:`GraphInput<doxid-classgeode_1_1_graph_input>`;
	class :ref:`GraphOutput<doxid-classgeode_1_1_graph_output>`;

	template <index_t dimension>
	class :ref:`Grid<doxid-classgeode_1_1_grid>`;

	template <index_t dimension>
	class :ref:`GridBuilder<doxid-classgeode_1_1_grid_builder>`;

	template <typename Archive, typename T>
	class :ref:`Growable<doxid-classgeode_1_1_growable>`;

	template <index_t dimension>
	class :ref:`HybridSolid<doxid-classgeode_1_1_hybrid_solid>`;

	template <index_t dimension>
	class :ref:`HybridSolidBuilder<doxid-classgeode_1_1_hybrid_solid_builder>`;

	template <index_t dimension>
	class :ref:`HybridSolidInput<doxid-classgeode_1_1_hybrid_solid_input>`;

	template <index_t dimension>
	class :ref:`HybridSolidOutput<doxid-classgeode_1_1_hybrid_solid_output>`;

	class :ref:`IOFile<doxid-classgeode_1_1_i_o_file>`;
	class :ref:`Identifier<doxid-classgeode_1_1_identifier>`;
	class :ref:`IdentifierBuilder<doxid-classgeode_1_1_identifier_builder>`;

	template <typename Type>
	class :ref:`IncrementOperator<doxid-classgeode_1_1_increment_operator>`;

	template <index_t dimension>
	class :ref:`InfiniteLine<doxid-classgeode_1_1_infinite_line>`;

	template <typename Mesh, typename... Args>
	class :ref:`Input<doxid-classgeode_1_1_input>`;

	class :ref:`Library<doxid-classgeode_1_1_library>`;

	template <index_t dimension>
	class :ref:`Line<doxid-classgeode_1_1_line>`;

	template <index_t dimension>
	class :ref:`Lines<doxid-classgeode_1_1_lines>`;

	template <index_t dimension>
	class :ref:`LinesBuilder<doxid-classgeode_1_1_lines_builder>`;

	class :ref:`Logger<doxid-classgeode_1_1_logger>`;
	class :ref:`LoggerClient<doxid-classgeode_1_1_logger_client>`;
	class :ref:`LoggerManager<doxid-classgeode_1_1_logger_manager>`;
	class :ref:`MeshBuilderFactory<doxid-classgeode_1_1_mesh_builder_factory>`;
	class :ref:`MeshBuilderFactoryKey<doxid-classgeode_1_1_mesh_builder_factory_key>`;
	class :ref:`MeshFactory<doxid-classgeode_1_1_mesh_factory>`;

	template <index_t dimension>
	class :ref:`ModelBoundaries<doxid-classgeode_1_1_model_boundaries>`;

	template <index_t dimension>
	class :ref:`ModelBoundariesBuilder<doxid-classgeode_1_1_model_boundaries_builder>`;

	template <index_t dimension>
	class :ref:`ModelBoundary<doxid-classgeode_1_1_model_boundary>`;

	template <typename MappingType>
	class :ref:`ModelMapping<doxid-classgeode_1_1_model_mapping>`;

	template <index_t dimension>
	class :ref:`NNSearch<doxid-classgeode_1_1_n_n_search>`;

	template <typename Type, typename Tag>
	class :ref:`NamedType<doxid-classgeode_1_1_named_type>`;

	class :ref:`OpenGeodeBRepInput<doxid-classgeode_1_1_open_geode_b_rep_input>`;
	class :ref:`OpenGeodeBRepOutput<doxid-classgeode_1_1_open_geode_b_rep_output>`;

	template <index_t dimension>
	class :ref:`OpenGeodeEdgedCurve<doxid-classgeode_1_1_open_geode_edged_curve>`;

	template <index_t dimension>
	class :ref:`OpenGeodeEdgedCurveBuilder<doxid-classgeode_1_1_open_geode_edged_curve_builder>`;

	class :ref:`OpenGeodeException<doxid-classgeode_1_1_open_geode_exception>`;
	class :ref:`OpenGeodeGraph<doxid-classgeode_1_1_open_geode_graph>`;
	class :ref:`OpenGeodeGraphBuilder<doxid-classgeode_1_1_open_geode_graph_builder>`;

	template <index_t dimension>
	class :ref:`OpenGeodeHybridSolid<doxid-classgeode_1_1_open_geode_hybrid_solid>`;

	template <index_t dimension>
	class :ref:`OpenGeodeHybridSolidBuilder<doxid-classgeode_1_1_open_geode_hybrid_solid_builder>`;

	template <index_t dimension>
	class :ref:`OpenGeodePointSet<doxid-classgeode_1_1_open_geode_point_set>`;

	template <index_t dimension>
	class :ref:`OpenGeodePointSetBuilder<doxid-classgeode_1_1_open_geode_point_set_builder>`;

	template <index_t dimension>
	class :ref:`OpenGeodePolygonalSurface<doxid-classgeode_1_1_open_geode_polygonal_surface>`;

	template <index_t dimension>
	class :ref:`OpenGeodePolygonalSurfaceBuilder<doxid-classgeode_1_1_open_geode_polygonal_surface_builder>`;

	template <index_t dimension>
	class :ref:`OpenGeodePolyhedralSolid<doxid-classgeode_1_1_open_geode_polyhedral_solid>`;

	template <index_t dimension>
	class :ref:`OpenGeodePolyhedralSolidBuilder<doxid-classgeode_1_1_open_geode_polyhedral_solid_builder>`;

	template <>
	class :ref:`OpenGeodeRegularGrid<2><doxid-classgeode_1_1_open_geode_regular_grid_3_012_01_4>`;

	template <>
	class :ref:`OpenGeodeRegularGrid<3><doxid-classgeode_1_1_open_geode_regular_grid_3_013_01_4>`;

	template <>
	class :ref:`OpenGeodeRegularGridBuilder<2><doxid-classgeode_1_1_open_geode_regular_grid_builder_3_012_01_4>`;

	template <>
	class :ref:`OpenGeodeRegularGridBuilder<3><doxid-classgeode_1_1_open_geode_regular_grid_builder_3_013_01_4>`;

	class :ref:`OpenGeodeSectionInput<doxid-classgeode_1_1_open_geode_section_input>`;
	class :ref:`OpenGeodeSectionOutput<doxid-classgeode_1_1_open_geode_section_output>`;

	template <index_t dimension>
	class :ref:`OpenGeodeTetrahedralSolid<doxid-classgeode_1_1_open_geode_tetrahedral_solid>`;

	template <index_t dimension>
	class :ref:`OpenGeodeTetrahedralSolidBuilder<doxid-classgeode_1_1_open_geode_tetrahedral_solid_builder>`;

	template <index_t dimension>
	class :ref:`OpenGeodeTriangulatedSurface<doxid-classgeode_1_1_open_geode_triangulated_surface>`;

	template <index_t dimension>
	class :ref:`OpenGeodeTriangulatedSurfaceBuilder<doxid-classgeode_1_1_open_geode_triangulated_surface_builder>`;

	class :ref:`OpenGeodeVertexSet<doxid-classgeode_1_1_open_geode_vertex_set>`;
	class :ref:`OpenGeodeVertexSetBuilder<doxid-classgeode_1_1_open_geode_vertex_set_builder>`;

	template <typename Mesh>
	class :ref:`Output<doxid-classgeode_1_1_output>`;

	class :ref:`OwnerCircle<doxid-classgeode_1_1_owner_circle>`;

	template <index_t dimension>
	class :ref:`OwnerInfiniteLine<doxid-classgeode_1_1_owner_infinite_line>`;

	class :ref:`OwnerPlane<doxid-classgeode_1_1_owner_plane>`;

	template <index_t dimension>
	class :ref:`OwnerSegment<doxid-classgeode_1_1_owner_segment>`;

	template <index_t dimension>
	class :ref:`OwnerSphere<doxid-classgeode_1_1_owner_sphere>`;

	class :ref:`OwnerTetrahedron<doxid-classgeode_1_1_owner_tetrahedron>`;

	template <index_t dimension>
	class :ref:`OwnerTriangle<doxid-classgeode_1_1_owner_triangle>`;

	template <typename T>
	class :ref:`PImpl<doxid-classgeode_1_1_p_impl>`;

	template <typename T>
	class :ref:`PassKey<doxid-classgeode_1_1_pass_key>`;

	class :ref:`Plane<doxid-classgeode_1_1_plane>`;

	template <index_t dimension>
	class :ref:`Point<doxid-classgeode_1_1_point>`;

	template <index_t dimension>
	class :ref:`PointSet<doxid-classgeode_1_1_point_set>`;

	template <index_t dimension>
	class :ref:`PointSetBuilder<doxid-classgeode_1_1_point_set_builder>`;

	template <index_t dimension>
	class :ref:`PointSetInput<doxid-classgeode_1_1_point_set_input>`;

	template <index_t dimension>
	class :ref:`PointSetOutput<doxid-classgeode_1_1_point_set_output>`;

	template <index_t dimension>
	class :ref:`PolygonalSurface<doxid-classgeode_1_1_polygonal_surface>`;

	template <index_t dimension>
	class :ref:`PolygonalSurfaceBuilder<doxid-classgeode_1_1_polygonal_surface_builder>`;

	template <index_t dimension>
	class :ref:`PolygonalSurfaceInput<doxid-classgeode_1_1_polygonal_surface_input>`;

	template <index_t dimension>
	class :ref:`PolygonalSurfaceOutput<doxid-classgeode_1_1_polygonal_surface_output>`;

	template <index_t dimension>
	class :ref:`PolyhedralSolid<doxid-classgeode_1_1_polyhedral_solid>`;

	template <index_t dimension>
	class :ref:`PolyhedralSolidBuilder<doxid-classgeode_1_1_polyhedral_solid_builder>`;

	template <index_t dimension>
	class :ref:`PolyhedralSolidInput<doxid-classgeode_1_1_polyhedral_solid_input>`;

	template <index_t dimension>
	class :ref:`PolyhedralSolidOutput<doxid-classgeode_1_1_polyhedral_solid_output>`;

	class :ref:`ProgressLogger<doxid-classgeode_1_1_progress_logger>`;
	class :ref:`ProgressLoggerClient<doxid-classgeode_1_1_progress_logger_client>`;
	class :ref:`ProgressLoggerManager<doxid-classgeode_1_1_progress_logger_manager>`;
	class :ref:`RayTracing3D<doxid-classgeode_1_1_ray_tracing3_d>`;

	template <typename T>
	class :ref:`ReadOnlyAttribute<doxid-classgeode_1_1_read_only_attribute>`;

	template <>
	class :ref:`RegularGrid<2><doxid-classgeode_1_1_regular_grid_3_012_01_4>`;

	template <>
	class :ref:`RegularGrid<3><doxid-classgeode_1_1_regular_grid_3_013_01_4>`;

	template <>
	class :ref:`RegularGridBuilder<2><doxid-classgeode_1_1_regular_grid_builder_3_012_01_4>`;

	template <>
	class :ref:`RegularGridBuilder<3><doxid-classgeode_1_1_regular_grid_builder_3_013_01_4>`;

	template <index_t dimension>
	class :ref:`RegularGridInput<doxid-classgeode_1_1_regular_grid_input>`;

	template <index_t dimension>
	class :ref:`RegularGridOutput<doxid-classgeode_1_1_regular_grid_output>`;

	template <index_t dimension>
	class :ref:`RegularGridPointFunction<doxid-classgeode_1_1_regular_grid_point_function>`;

	template <index_t dimension>
	class :ref:`RegularGridScalarFunction<doxid-classgeode_1_1_regular_grid_scalar_function>`;

	class :ref:`Relationships<doxid-classgeode_1_1_relationships>`;
	class :ref:`RelationshipsBuilder<doxid-classgeode_1_1_relationships_builder>`;
	class :ref:`Section<doxid-classgeode_1_1_section>`;
	class :ref:`SectionBuilder<doxid-classgeode_1_1_section_builder>`;
	class :ref:`SectionInput<doxid-classgeode_1_1_section_input>`;
	class :ref:`SectionOutput<doxid-classgeode_1_1_section_output>`;

	template <index_t dimension>
	class :ref:`Segment<doxid-classgeode_1_1_segment>`;

	class :ref:`SimplicialBRepCreator<doxid-classgeode_1_1_simplicial_b_rep_creator>`;
	class :ref:`SimplicialSectionCreator<doxid-classgeode_1_1_simplicial_section_creator>`;
	class :ref:`Singleton<doxid-classgeode_1_1_singleton>`;

	template <index_t dimension>
	class :ref:`SolidEdges<doxid-classgeode_1_1_solid_edges>`;

	template <index_t dimension>
	class :ref:`SolidEdgesBuilder<doxid-classgeode_1_1_solid_edges_builder>`;

	template <index_t dimension>
	class :ref:`SolidFacets<doxid-classgeode_1_1_solid_facets>`;

	template <index_t dimension>
	class :ref:`SolidFacetsBuilder<doxid-classgeode_1_1_solid_facets_builder>`;

	template <index_t dimension>
	class :ref:`SolidMesh<doxid-classgeode_1_1_solid_mesh>`;

	template <index_t dimension>
	class :ref:`SolidMeshBuilder<doxid-classgeode_1_1_solid_mesh_builder>`;

	template <typename T>
	class :ref:`SparseAttribute<doxid-classgeode_1_1_sparse_attribute>`;

	template <index_t dimension>
	class :ref:`Sphere<doxid-classgeode_1_1_sphere>`;

	template <index_t dimension>
	class :ref:`Surface<doxid-classgeode_1_1_surface>`;

	template <index_t dimension>
	class :ref:`SurfaceEdges<doxid-classgeode_1_1_surface_edges>`;

	template <index_t dimension>
	class :ref:`SurfaceEdgesBuilder<doxid-classgeode_1_1_surface_edges_builder>`;

	template <index_t dimension>
	class :ref:`SurfaceMesh<doxid-classgeode_1_1_surface_mesh>`;

	template <index_t dimension>
	class :ref:`SurfaceMeshBuilder<doxid-classgeode_1_1_surface_mesh_builder>`;

	template <index_t dimension>
	class :ref:`Surfaces<doxid-classgeode_1_1_surfaces>`;

	template <index_t dimension>
	class :ref:`SurfacesBuilder<doxid-classgeode_1_1_surfaces_builder>`;

	template <typename Type>
	class :ref:`TIndices<doxid-classgeode_1_1_t_indices>`;

	template <typename Type>
	class :ref:`TRange<doxid-classgeode_1_1_t_range>`;

	template <typename Type>
	class :ref:`TReverseRange<doxid-classgeode_1_1_t_reverse_range>`;

	template <index_t dimension>
	class :ref:`TetrahedralSolid<doxid-classgeode_1_1_tetrahedral_solid>`;

	template <index_t dimension>
	class :ref:`TetrahedralSolidBuilder<doxid-classgeode_1_1_tetrahedral_solid_builder>`;

	template <index_t dimension>
	class :ref:`TetrahedralSolidInput<doxid-classgeode_1_1_tetrahedral_solid_input>`;

	template <index_t dimension>
	class :ref:`TetrahedralSolidOutput<doxid-classgeode_1_1_tetrahedral_solid_output>`;

	template <index_t dimension>
	class :ref:`TetrahedralSolidPointFunction<doxid-classgeode_1_1_tetrahedral_solid_point_function>`;

	template <index_t dimension>
	class :ref:`TetrahedralSolidScalarFunction<doxid-classgeode_1_1_tetrahedral_solid_scalar_function>`;

	class :ref:`Tetrahedron<doxid-classgeode_1_1_tetrahedron>`;
	class :ref:`Timer<doxid-classgeode_1_1_timer>`;
	class :ref:`Topology<doxid-classgeode_1_1_topology>`;
	class :ref:`TopologyBuilder<doxid-classgeode_1_1_topology_builder>`;

	template <index_t dimension>
	class :ref:`Triangle<doxid-classgeode_1_1_triangle>`;

	template <index_t dimension>
	class :ref:`TriangulatedSurface<doxid-classgeode_1_1_triangulated_surface>`;

	template <index_t dimension>
	class :ref:`TriangulatedSurfaceBuilder<doxid-classgeode_1_1_triangulated_surface_builder>`;

	template <index_t dimension>
	class :ref:`TriangulatedSurfaceInput<doxid-classgeode_1_1_triangulated_surface_input>`;

	template <index_t dimension>
	class :ref:`TriangulatedSurfaceOutput<doxid-classgeode_1_1_triangulated_surface_output>`;

	template <index_t dimension>
	class :ref:`TriangulatedSurfacePointFunction<doxid-classgeode_1_1_triangulated_surface_point_function>`;

	template <index_t dimension>
	class :ref:`TriangulatedSurfaceScalarFunction<doxid-classgeode_1_1_triangulated_surface_scalar_function>`;

	class :ref:`UnzipFile<doxid-classgeode_1_1_unzip_file>`;

	template <typename T>
	class :ref:`VariableAttribute<doxid-classgeode_1_1_variable_attribute>`;

	template <>
	class :ref:`VariableAttribute<bool><doxid-classgeode_1_1_variable_attribute_3_01bool_01_4>`;

	template <index_t dimension>
	class :ref:`Vector<doxid-classgeode_1_1_vector>`;

	class :ref:`VertexIdentifier<doxid-classgeode_1_1_vertex_identifier>`;
	class :ref:`VertexIdentifierBuilder<doxid-classgeode_1_1_vertex_identifier_builder>`;
	class :ref:`VertexSet<doxid-classgeode_1_1_vertex_set>`;
	class :ref:`VertexSetBuilder<doxid-classgeode_1_1_vertex_set_builder>`;
	class :ref:`VertexSetInput<doxid-classgeode_1_1_vertex_set_input>`;
	class :ref:`VertexSetOutput<doxid-classgeode_1_1_vertex_set_output>`;
	class :ref:`ZipFile<doxid-classgeode_1_1_zip_file>`;

	// global variables

	static constexpr double :target:`global_epsilon<doxid-namespacegeode_1ad0b6fd0e0919965c35e9ddfa40a1f348>` { 1E-6 };
	static constexpr :ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` :ref:`NO_ID<doxid-namespacegeode_1a454319bfde41726e71f499e4e16322b3>` = :ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`(-1);
	static constexpr :ref:`local_index_t<doxid-namespacegeode_1aa4af2b9c3c63eb304286e812ba69a9a9>` :target:`NO_LID<doxid-namespacegeode_1a0bb1a49fb70c62b71374aeff91a8fb11>` = :ref:`local_index_t<doxid-namespacegeode_1aa4af2b9c3c63eb304286e812ba69a9a9>`(-1);
	static constexpr auto :target:`uuid_from_conversion_attribute_name<doxid-namespacegeode_1a904052a9ccedabc1fb657c3b811cdb75>` =         "uuid_from_conversion";

	// global functions

	template <typename T>
	:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` :target:`delete_vector_elements<doxid-namespacegeode_1a3b4f2a586d91f0691c6e640a0abd1a8a>`(
		const std::vector<bool>& to_delete,
		std::vector<T>& values
		);

	template <typename T>
	std::vector<T> :target:`extract_vector_elements<doxid-namespacegeode_1ab68ae84b2adb41524da91dd5daa553cc>`(
		const std::vector<bool>& to_keep,
		const std::vector<T>& in_values
		);

	template <typename Container>
	void :target:`sort_unique<doxid-namespacegeode_1a04f4dfe13f837a543eb430e7e3b737ae>`(Container& in);

	void opengeode_basic_api :target:`geode_assertion_failed<doxid-namespacegeode_1aa4b4c6702e24e006b51f727d6c309c30>`(
		absl::string_view condition,
		absl::string_view message,
		absl::string_view file,
		int line
		);

	int opengeode_basic_api :ref:`geode_lippincott<doxid-namespacegeode_1a0d6f934054bb20a7b43ff330dca7d363>`();
	:target:`IMPLICIT_ATTRIBUTE_LINEAR_INTERPOLATION<doxid-namespacegeode_1af4996f210d9fb27190699984a933fd17>`(float);
	:target:`IMPLICIT_ATTRIBUTE_LINEAR_INTERPOLATION<doxid-namespacegeode_1a70b45d032cb29bb76d8626e9cabec3cb>`(double);
	:target:`IMPLICIT_GENERIC_ATTRIBUTE_CONVERSION<doxid-namespacegeode_1a54c603b2d16adf2f5031334a98e528bf>`(bool);
	:target:`IMPLICIT_GENERIC_ATTRIBUTE_CONVERSION<doxid-namespacegeode_1a22128fee88dd065547c291a5b6cc120c>`(int);
	:target:`IMPLICIT_GENERIC_ATTRIBUTE_CONVERSION<doxid-namespacegeode_1a9844da4a83f3093fcc8c77a5d0219ef9>`(unsigned int);
	:target:`IMPLICIT_GENERIC_ATTRIBUTE_CONVERSION<doxid-namespacegeode_1ab99035acc811564161f94c59b0551d4c>`(float);
	:target:`IMPLICIT_GENERIC_ATTRIBUTE_CONVERSION<doxid-namespacegeode_1af3f8b74262365844a60b7cefa0932d4c>`(double);
	:target:`IMPLICIT_ARRAY_GENERIC_ATTRIBUTE_CONVERSION<doxid-namespacegeode_1ada7044d4e9acaee12ce44075e69c106a>`(bool);
	:target:`IMPLICIT_ARRAY_GENERIC_ATTRIBUTE_CONVERSION<doxid-namespacegeode_1ae11093115d66e84d47151f7d6a728384>`(int);
	:target:`IMPLICIT_ARRAY_GENERIC_ATTRIBUTE_CONVERSION<doxid-namespacegeode_1a40d80e343065e2725a95566b43737862>`(unsigned int);
	:target:`IMPLICIT_ARRAY_GENERIC_ATTRIBUTE_CONVERSION<doxid-namespacegeode_1aede7909f908fa9a32bed44025771aa60>`(float);
	:target:`IMPLICIT_ARRAY_GENERIC_ATTRIBUTE_CONVERSION<doxid-namespacegeode_1acc3ac2ce16a71db86a9a521219a0363f>`(double);
	void opengeode_basic_api :ref:`register_basic_serialize_pcontext<doxid-namespacegeode_1abf3517d752f9c05bbb40e02825f61243>`(:ref:`PContext<doxid-namespacegeode_1a79da04720a9926e6212751b7e0d5b6c7>`& context);
	void opengeode_basic_api :ref:`register_basic_deserialize_pcontext<doxid-namespacegeode_1a4971b040e31d95abe4053f71d315b4d7>`(:ref:`PContext<doxid-namespacegeode_1a79da04720a9926e6212751b7e0d5b6c7>`& context);
	std::string opengeode_basic_api :target:`filename_with_extension<doxid-namespacegeode_1a00deaeb8544d7b897c2eeb80260c6bc6>`(absl::string_view path);
	std::string opengeode_basic_api :target:`filename_without_extension<doxid-namespacegeode_1a9368b64fa9978d1188bab4c3ce416fde>`(absl::string_view path);
	std::string opengeode_basic_api :target:`filepath_without_extension<doxid-namespacegeode_1aedd97cf95ccd0818defedbd18b3bc1cb>`(absl::string_view path);
	:target:`OPENGEODE_LIBRARY<doxid-namespacegeode_1a243e78e6a7219c043fb30dc4a798d930>`(opengeode_basic_api, OpenGeodeBasic);

	template <typename Container>
	void :target:`permute<doxid-namespacegeode_1a12681ad1ca2cf850c4014577c273e5fb>`(
		Container& data,
		absl::Span<const :ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`> permutation
		);

	std::vector<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`> opengeode_basic_api :target:`old2new_permutation<doxid-namespacegeode_1ab1356e215313d6b14a021c9a6b1c01cd>`(absl::Span<const :ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`> permutation);
	std::vector<absl::string_view> opengeode_basic_api :target:`string_split<doxid-namespacegeode_1a91e63f7358ed38f8a5248922fbf8fdad>`(absl::string_view string);
	:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` opengeode_basic_api :target:`string_to_index<doxid-namespacegeode_1a44d4220b8fc40e0248339f379efe6de6>`(absl::string_view string);
	int opengeode_basic_api :target:`string_to_int<doxid-namespacegeode_1af1e95803c9c42a9078f520ab4945324c>`(absl::string_view string);
	float opengeode_basic_api :target:`string_to_float<doxid-namespacegeode_1a93bdf495a836f82f4fee0eea8bfd9ae2>`(absl::string_view string);
	double opengeode_basic_api :target:`string_to_double<doxid-namespacegeode_1ac444eab03e4359a671cf47bd89e02754>`(absl::string_view string);
	constexpr unsigned char :target:`operator""_uc<doxid-namespacegeode_1a9190d15ac9b68969b470a72c3c379b99>` (unsigned long long arg);
	std::string :target:`to_string<doxid-namespacegeode_1a6ee93ebf942d8596cd314e424b79a128>`(absl::string_view view);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a704add8ff33f82fa87b376794c8183d1>`(:ref:`AABBTree<doxid-classgeode_1_1_a_a_b_b_tree>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1afb6e6b42596c062c9d8764d858209433>`(:ref:`Point<doxid-classgeode_1_1_point>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a713615f1e1f632a857fbbda376b9b832>`(:ref:`Segment<doxid-classgeode_1_1_segment>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a3fbc1fb49f0ca7c4ea4744e735440007>`(:ref:`Triangle<doxid-classgeode_1_1_triangle>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1a3dfa90e12c4f46df6d4d4c73cc499ab6>`(:ref:`Point<doxid-classgeode_1_1_point>`);

	std::array<double, 4> opengeode_geometry_api :ref:`tetrahedron_barycentric_coordinates<doxid-namespacegeode_1aaf9ea7d9541c84295cd5035b215d03d0>`(
		const Point3D& point,
		const :ref:`Tetrahedron<doxid-classgeode_1_1_tetrahedron>`& tetra
		);

	template <index_t dimension>
	std::array<double, 3> :ref:`triangle_barycentric_coordinates<doxid-namespacegeode_1ac777b102ddf86dd83a97f0df569aa315>`(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`Triangle<doxid-classgeode_1_1_triangle>`<dimension>& triangle
		);

	template <index_t dimension>
	std::array<double, 2> :ref:`segment_barycentric_coordinates<doxid-namespacegeode_1a31a7b32940d4db933c477fecec72d7c3>`(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`Segment<doxid-classgeode_1_1_segment>`<dimension>& segment
		);

	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1aacfc981f6de337f0559278ccad9101e0>`(:ref:`RefPoint<doxid-namespacegeode_1a223a5ea637f84c9b765dcbe24e70b5d6>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1aeca72f8ebd4bcdafdbbf6d2192939fb1>`(:ref:`OwnerInfiniteLine<doxid-classgeode_1_1_owner_infinite_line>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1af576e4f3df4c4713a10c5a5e2842e20a>`(:ref:`OwnerSegment<doxid-classgeode_1_1_owner_segment>`);
	:target:`ALIAS_1D_AND_2D_AND_3D<doxid-namespacegeode_1aa5a87a78fe8a7aac75a08cfca02c7cce>`(:ref:`OwnerInfiniteLine<doxid-classgeode_1_1_owner_infinite_line>`);
	:target:`ALIAS_1D_AND_2D_AND_3D<doxid-namespacegeode_1adee3f5b6404028f81f0c5a3d20d83a10>`(:ref:`InfiniteLine<doxid-classgeode_1_1_infinite_line>`);
	:target:`ALIAS_1D_AND_2D_AND_3D<doxid-namespacegeode_1ab55f25b88963e8ab70b35e318cb30b28>`(:ref:`OwnerSegment<doxid-classgeode_1_1_owner_segment>`);
	:target:`ALIAS_1D_AND_2D_AND_3D<doxid-namespacegeode_1a0796c77a7e943e3ad0e1848dafc42814>`(:ref:`Segment<doxid-classgeode_1_1_segment>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1afd24b32e35c77b2b7d28e6e402681ff3>`(:ref:`OwnerSphere<doxid-classgeode_1_1_owner_sphere>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1abea6b522f3e44b741b8107092efcbd0b>`(:ref:`OwnerSphere<doxid-classgeode_1_1_owner_sphere>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a2ef1614f38ff6bbfa27ffe769235c4ee>`(:ref:`Sphere<doxid-classgeode_1_1_sphere>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a39927e08ed2d6703a8dbfd17781e7a19>`(:ref:`OwnerTriangle<doxid-classgeode_1_1_owner_triangle>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1abb453314061448e9d6ed044da60d6cb6>`(:ref:`OwnerTriangle<doxid-classgeode_1_1_owner_triangle>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a6bd5b8618c1a9a6ff0f6c60bb98fe807>`(:ref:`Triangle<doxid-classgeode_1_1_triangle>`);
	void opengeode_geometry_api :ref:`register_geometry_serialize_pcontext<doxid-namespacegeode_1a3a8183171407a05faea9c1edfcc12d6f>`(:ref:`PContext<doxid-namespacegeode_1a79da04720a9926e6212751b7e0d5b6c7>`& context);
	void opengeode_geometry_api :ref:`register_geometry_deserialize_pcontext<doxid-namespacegeode_1a21eee3ab8ab2f094ad300c9755cd6a94>`(:ref:`PContext<doxid-namespacegeode_1a79da04720a9926e6212751b7e0d5b6c7>`& context);
	:target:`ALIAS_1D_AND_2D_AND_3D<doxid-namespacegeode_1a2a3a96558ff0144c829168764fb2264a>`(:ref:`BoundingBox<doxid-classgeode_1_1_bounding_box>`);
	:target:`OPENGEODE_LIBRARY<doxid-namespacegeode_1a246f0bb471c47f488831765149625f85>`(opengeode_geometry_api, OpenGeodeGeometry);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1afdb46be0cc0cf92e9c480d0f4af7ede7>`(:ref:`InfiniteLine<doxid-classgeode_1_1_infinite_line>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a73b98a5519467f090fd3b8dd6a9eb008>`(:ref:`Sphere<doxid-classgeode_1_1_sphere>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1ab9498c535a0152c93f4aad66e9e8a67c>`(:ref:`Point<doxid-classgeode_1_1_point>`);
	:target:`ALIAS_2D<doxid-namespacegeode_1a8ec76900496f8c6e59d65c6ad941af27>`(:ref:`InfiniteLine<doxid-classgeode_1_1_infinite_line>`);

	template <index_t dimension>
	double :ref:`point_point_distance<doxid-namespacegeode_1a4580257fb6522eceb29536b03fb1c21a>`(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point0,
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point1
		);

	template <index_t dimension>
	std::tuple<double, :ref:`Point<doxid-classgeode_1_1_point>`<dimension>> :ref:`point_segment_distance<doxid-namespacegeode_1aa93b0c934f3fb83dd110e44bedfd5a30>`(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`Segment<doxid-classgeode_1_1_segment>`<dimension>& segment
		);

	template <index_t dimension>
	std::tuple<double, :ref:`Point<doxid-classgeode_1_1_point>`<dimension>, :ref:`Point<doxid-classgeode_1_1_point>`<dimension>> :ref:`segment_segment_distance<doxid-namespacegeode_1a74f738f4982f62937cd9640b8e5236f0>`(
		const :ref:`Segment<doxid-classgeode_1_1_segment>`<dimension>& segment0,
		const :ref:`Segment<doxid-classgeode_1_1_segment>`<dimension>& segment1
		);

	template <index_t dimension>
	std::tuple<double, :ref:`Point<doxid-classgeode_1_1_point>`<dimension>> :ref:`point_line_distance<doxid-namespacegeode_1a0152cc4808d761c36b5a7f3d95a85644>`(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`InfiniteLine<doxid-classgeode_1_1_infinite_line>`<dimension>& line
		);

	std::tuple<double, Point2D> opengeode_geometry_api :ref:`point_line_signed_distance<doxid-namespacegeode_1a75d0260bbbaced72944408a98c21b06f>`(
		const Point2D& point,
		const InfiniteLine2D& line
		);

	template <index_t dimension>
	std::tuple<double, :ref:`Point<doxid-classgeode_1_1_point>`<dimension>> :ref:`point_triangle_distance<doxid-namespacegeode_1a330049f15e84cc2f0d868038057142ec>`(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`Triangle<doxid-classgeode_1_1_triangle>`<dimension>& triangle
		);

	std::tuple<double, Point3D> :ref:`point_triangle_signed_distance<doxid-namespacegeode_1adde4afe0dd3cc2809cdd33d777602d21>`(
		const Point3D& point,
		const Triangle3D& triangle
		);

	std::tuple<double, Point3D> opengeode_geometry_api :ref:`point_tetrahedron_distance<doxid-namespacegeode_1af009487e469e3c804555c5542334205e>`(
		const Point3D& point,
		const :ref:`Tetrahedron<doxid-classgeode_1_1_tetrahedron>`& tetra
		);

	std::tuple<double, Point3D> opengeode_geometry_api :ref:`point_plane_distance<doxid-namespacegeode_1a51e4913dfa9e0460508a63d03bee9241>`(
		const Point3D& point,
		const :ref:`Plane<doxid-classgeode_1_1_plane>`& plane
		);

	std::tuple<double, Point3D> opengeode_geometry_api :ref:`point_plane_signed_distance<doxid-namespacegeode_1a4e3aa1f40ed1f1c1d11dd39240155949>`(
		const Point3D& point,
		const :ref:`Plane<doxid-classgeode_1_1_plane>`& plane
		);

	template <index_t dimension>
	std::tuple<double, :ref:`Point<doxid-classgeode_1_1_point>`<dimension>> :ref:`point_sphere_distance<doxid-namespacegeode_1a0f501c5dbc2326ec774ef23df0304192>`(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`Sphere<doxid-classgeode_1_1_sphere>`<dimension>& sphere
		);

	template <index_t dimension>
	std::tuple<double, :ref:`Point<doxid-classgeode_1_1_point>`<dimension>> :ref:`point_sphere_signed_distance<doxid-namespacegeode_1a8c3f73b578501a0fea39ac5ff90c0ab6>`(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`Sphere<doxid-classgeode_1_1_sphere>`<dimension>& sphere
		);

	template <index_t dimension>
	std::tuple<double, :ref:`Point<doxid-classgeode_1_1_point>`<dimension>> :ref:`point_ball_distance<doxid-namespacegeode_1a669070168188e8e7388c893431858478>`(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`Ball<doxid-namespacegeode_1a5f85211114c18f5ec987940b9f2aac24>`<dimension>& sphere
		);

	std::tuple<double, Point3D> opengeode_geometry_api :ref:`point_circle_distance<doxid-namespacegeode_1abf9b58beecf7ff892fdf6d61abc6b159>`(
		const Point3D& point,
		const :ref:`Circle<doxid-classgeode_1_1_circle>`& circle
		);

	std::tuple<double, Point3D> opengeode_geometry_api :ref:`point_circle_signed_distance<doxid-namespacegeode_1a886d2b7f7076e9913b4e357e1f1f6dc2>`(
		const Point3D& point,
		const :ref:`Circle<doxid-classgeode_1_1_circle>`& circle
		);

	std::tuple<double, Point3D> opengeode_geometry_api :ref:`point_disk_distance<doxid-namespacegeode_1a8f557d275dd00fc33ece3bd7b18d0b0b>`(
		const Point3D& point,
		const :ref:`Disk<doxid-namespacegeode_1adc63fa26776ccf0a89a29753d625d51a>`& disk
		);

	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a46c93d7de8cb42c63334569e28c385bd>`(:ref:`InfiniteLine<doxid-classgeode_1_1_infinite_line>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1ad391ccfd3ec3b37beae6bcc7c210f915>`(:ref:`Segment<doxid-classgeode_1_1_segment>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1aaf755b9136ab518d12e2fa75dd8bdd12>`(:ref:`Triangle<doxid-classgeode_1_1_triangle>`);

	:ref:`IntersectionResult<doxid-structgeode_1_1_intersection_result>`<Point3D> opengeode_geometry_api :ref:`line_plane_intersection<doxid-namespacegeode_1aee987f4530e82f40e183d62793329588>`(
		const InfiniteLine3D& line,
		const :ref:`Plane<doxid-classgeode_1_1_plane>`& plane
		);

	template <index_t dimension>
	:ref:`IntersectionResult<doxid-structgeode_1_1_intersection_result>`<absl::InlinedVector<:ref:`Point<doxid-classgeode_1_1_point>`<dimension>, 2>> :ref:`line_sphere_intersection<doxid-namespacegeode_1aa1614736eca38ee7ade9cf48c445a838>`(
		const :ref:`InfiniteLine<doxid-classgeode_1_1_infinite_line>`<dimension>& line,
		const :ref:`Sphere<doxid-classgeode_1_1_sphere>`<dimension>& sphere
		);

	template <index_t dimension>
	:ref:`IntersectionResult<doxid-structgeode_1_1_intersection_result>`<absl::InlinedVector<:ref:`Point<doxid-classgeode_1_1_point>`<dimension>, 2>> :ref:`segment_sphere_intersection<doxid-namespacegeode_1a5d4565bc53220aad033ce4b621bedbcc>`(
		const :ref:`Segment<doxid-classgeode_1_1_segment>`<dimension>& segment,
		const :ref:`Sphere<doxid-classgeode_1_1_sphere>`<dimension>& sphere
		);

	:ref:`IntersectionResult<doxid-structgeode_1_1_intersection_result>`<Point3D> opengeode_geometry_api :ref:`segment_plane_intersection<doxid-namespacegeode_1a87e9a7624c8ef017f1ab5b15233098be>`(
		const Segment3D& segment,
		const :ref:`Plane<doxid-classgeode_1_1_plane>`& plane
		);

	:ref:`IntersectionResult<doxid-structgeode_1_1_intersection_result>`<Point3D> opengeode_geometry_api :ref:`segment_triangle_intersection<doxid-namespacegeode_1ab75f1881bceca236f77e47d62b9dcc01>`(
		const Segment3D& segment,
		const Triangle3D& triangle
		);

	:ref:`IntersectionResult<doxid-structgeode_1_1_intersection_result>`<Point3D> opengeode_geometry_api :ref:`line_triangle_intersection<doxid-namespacegeode_1a553db6531b4df84999c7160b5a161a40>`(
		const InfiniteLine3D& line,
		const Triangle3D& triangle
		);

	:ref:`IntersectionResult<doxid-structgeode_1_1_intersection_result>`<Point2D> opengeode_geometry_api :ref:`line_line_intersection<doxid-namespacegeode_1a2e36b8d57c8b213b02396aec98e90c5e>`(
		const InfiniteLine2D& line0,
		const InfiniteLine2D& line1
		);

	:ref:`IntersectionResult<doxid-structgeode_1_1_intersection_result>`<Point2D> opengeode_geometry_api :ref:`segment_segment_intersection<doxid-namespacegeode_1af9801e4f75f5a7e32528a6102ddbf456>`(
		const Segment2D& segment0,
		const Segment2D& segment1
		);

	:ref:`IntersectionResult<doxid-structgeode_1_1_intersection_result>`<Point2D> opengeode_geometry_api :ref:`segment_line_intersection<doxid-namespacegeode_1a6f5a9e0a2767316f0df3b282d12bcb34>`(
		const Segment2D& segment,
		const InfiniteLine2D& line
		);

	:ref:`SegmentSegmentIntersection<doxid-namespacegeode_1ad08f71e1c9db568dd62df0bf066813b1>` opengeode_geometry_api :ref:`segment_segment_intersection_detection<doxid-namespacegeode_1a460dcb7ba62a6607f4d51a9619d0ba2a>`(
		const Segment2D& segment0,
		const Segment2D& segment1
		);

	:ref:`SegmentSegmentIntersection<doxid-namespacegeode_1ad08f71e1c9db568dd62df0bf066813b1>` opengeode_geometry_api :ref:`colinear_segment_segment_intersection_detection<doxid-namespacegeode_1a507fd4800d9a28ff1575e03903976c32>`(
		const Segment2D& segment0,
		const Segment2D& segment1
		);

	:ref:`Position<doxid-namespacegeode_1a316ec3486ec794c86021f0fea71f54a7>` opengeode_geometry_api :ref:`segment_line_intersection_detection<doxid-namespacegeode_1ab9b4edaece4e32bed2821b6a5d2c26f3>`(
		const Segment2D& segment,
		const InfiniteLine2D& line
		);

	:ref:`Position<doxid-namespacegeode_1a316ec3486ec794c86021f0fea71f54a7>` opengeode_geometry_api :ref:`line_triangle_intersection_detection<doxid-namespacegeode_1a0a53a86927336a530d5b109194cbc3bd>`(
		const InfiniteLine3D& line,
		const Triangle3D& triangle
		);

	:ref:`SegmentTriangleIntersection<doxid-namespacegeode_1acbc58086feed61355d4235a09e6e6b80>` opengeode_geometry_api :ref:`segment_triangle_intersection_detection<doxid-namespacegeode_1a6afb8c58f82cb8c5620f7b96253f2cab>`(
		const Segment3D& segment,
		const Triangle3D& triangle
		);

	:ref:`Position<doxid-namespacegeode_1a316ec3486ec794c86021f0fea71f54a7>` opengeode_geometry_api :ref:`segment_plane_intersection_detection<doxid-namespacegeode_1a464461ff0fdeb761109f414f5c1685cd>`(
		const Segment3D& segment,
		const :ref:`Plane<doxid-classgeode_1_1_plane>`& plane
		);

	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a8aa2b23c4d6223ad5baa9bd94971837a>`(:ref:`Vector<doxid-classgeode_1_1_vector>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1a9040936b048d9dc9c295e26f746624ab>`(:ref:`Vector<doxid-classgeode_1_1_vector>`);

	template <index_t dimension>
	double :ref:`triangle_area<doxid-namespacegeode_1ac9bae29e562e6285b6377475738e08bc>`(const :ref:`Triangle<doxid-classgeode_1_1_triangle>`<dimension>& triangle);

	double opengeode_geometry_api :ref:`triangle_signed_area<doxid-namespacegeode_1a7bcf51b8e17c92dc052b3c62c8abd1ab>`(const Triangle2D& triangle);

	double opengeode_geometry_api :ref:`triangle_signed_area<doxid-namespacegeode_1a0c0bcc660d0424ace824fa79dd83139f>`(
		const Triangle3D& triangle,
		const Vector3D& direction
		);

	double opengeode_geometry_api :ref:`tetrahedron_signed_volume<doxid-namespacegeode_1a404927c1ae97f58099aaa973eccf6632>`(const :ref:`Tetrahedron<doxid-classgeode_1_1_tetrahedron>`& tetra);
	double opengeode_geometry_api :ref:`tetrahedron_volume<doxid-namespacegeode_1a34045fd27d75a59e694a57686e35eaf0>`(const :ref:`Tetrahedron<doxid-classgeode_1_1_tetrahedron>`& tetra);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1ae9a3218d8a8d01e07d5fe03060e8b7e5>`(:ref:`NNSearch<doxid-classgeode_1_1_n_n_search>`);
	:target:`ALIAS_2D<doxid-namespacegeode_1a08bdfe9994f732c45460e93dd950194d>`(:ref:`Vector<doxid-classgeode_1_1_vector>`);
	Vector2D opengeode_geometry_api :ref:`perpendicular<doxid-namespacegeode_1abf7d35d6f59c66989de52f35d6c6cae0>`(const Vector2D& v);

	double opengeode_geometry_api :ref:`dot_perpendicular<doxid-namespacegeode_1a86b4ac219780962e02ecaf1becde9633>`(
		const Vector2D& v0,
		const Vector2D& v1
		);

	:target:`ALIAS_1D_AND_2D_AND_3D<doxid-namespacegeode_1acb6e366b7d5e98cec7512044374355dd>`(:ref:`Point<doxid-classgeode_1_1_point>`);

	template <index_t dimension>
	std::vector<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`> :target:`lexicographic_mapping<doxid-namespacegeode_1a101892b33abd3a845f795edaeb9dd6a6>`(absl::Span<const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>> points);

	template <index_t dimension>
	std::vector<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`> :target:`morton_mapping<doxid-namespacegeode_1a91ddfca0b4b6a35644648c236b8d815d>`(absl::Span<const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>> points);

	:ref:`Side<doxid-namespacegeode_1a0805566e7d9eb8e31ef1d932837fdb1b>` opengeode_geometry_api :ref:`point_side_to_segment<doxid-namespacegeode_1a9dbc950e6ecafb4bf2d5336e5621e2b5>`(
		const Point2D& point,
		const Segment2D& segment
		);

	:ref:`Side<doxid-namespacegeode_1a0805566e7d9eb8e31ef1d932837fdb1b>` opengeode_geometry_api :ref:`point_side_to_line<doxid-namespacegeode_1a7bc64f6f20d2fc038571be279c7a72d7>`(
		const Point2D& point,
		const InfiniteLine2D& line
		);

	:ref:`Side<doxid-namespacegeode_1a0805566e7d9eb8e31ef1d932837fdb1b>` opengeode_geometry_api :ref:`point_side_to_plane<doxid-namespacegeode_1a1328f2ee832d2888551b89a5ce9d1db5>`(
		const Point3D& point,
		const :ref:`Plane<doxid-classgeode_1_1_plane>`& plane
		);

	:ref:`Side<doxid-namespacegeode_1a0805566e7d9eb8e31ef1d932837fdb1b>` opengeode_geometry_api :ref:`point_side_to_triangle<doxid-namespacegeode_1a86df49e62eca418b9f4a99666fba60b1>`(
		const Point3D& point,
		const Triangle3D& triangle
		);

	template <index_t dimension>
	:ref:`Position<doxid-namespacegeode_1a316ec3486ec794c86021f0fea71f54a7>` :ref:`point_segment_position<doxid-namespacegeode_1a8e59e9b66e1c5c4167e62abee2b3bf2e>`(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`Segment<doxid-classgeode_1_1_segment>`<dimension>& segment
		);

	template <index_t dimension>
	:ref:`Position<doxid-namespacegeode_1a316ec3486ec794c86021f0fea71f54a7>` :ref:`point_triangle_position<doxid-namespacegeode_1ada03d7b63f307fc70de42337fd7d681d>`(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`Triangle<doxid-classgeode_1_1_triangle>`<dimension>& triangle
		);

	:ref:`Position<doxid-namespacegeode_1a316ec3486ec794c86021f0fea71f54a7>` opengeode_geometry_api :ref:`point_tetrahedron_position<doxid-namespacegeode_1ac421783d2a4e52e55fa78d489e98c7df>`(
		const Point3D& point,
		const :ref:`Tetrahedron<doxid-classgeode_1_1_tetrahedron>`& tetra
		);

	template <index_t dimension>
	:ref:`Point<doxid-classgeode_1_1_point>`<dimension> :ref:`point_segment_projection<doxid-namespacegeode_1a25b6b03e0454dc3a0c3b7816febec9ca>`(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`Segment<doxid-classgeode_1_1_segment>`<dimension>& segment
		);

	template <index_t dimension>
	:ref:`Point<doxid-classgeode_1_1_point>`<dimension> :ref:`point_line_projection<doxid-namespacegeode_1afb3cdab999cf5c78c24663bdee4d224d>`(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`InfiniteLine<doxid-classgeode_1_1_infinite_line>`<dimension>& line
		);

	template <index_t dimension>
	:ref:`Point<doxid-classgeode_1_1_point>`<dimension> :ref:`point_triangle_projection<doxid-namespacegeode_1a3a26f982ece1cac2c9a2b7ec4f4667bf>`(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`Triangle<doxid-classgeode_1_1_triangle>`<dimension>& triangle
		);

	Point3D opengeode_geometry_api :ref:`point_plane_projection<doxid-namespacegeode_1a628b5744673a048807e8e3c71a97863c>`(
		const Point3D& point,
		const :ref:`Plane<doxid-classgeode_1_1_plane>`& plane
		);

	absl::FixedArray<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`> opengeode_geometry_api :target:`radial_sort<doxid-namespacegeode_1aeb10a49d5fb11aba1f0ace4dcd7fa6b5>`(
		const Segment3D& segment,
		absl::Span<const Point3D> points
		);

	Point3D opengeode_geometry_api :ref:`rotate<doxid-namespacegeode_1a7d29de54b64ca62f8e8b794ae0202f74>`(
		const Point3D& point,
		const Vector3D& axis,
		double angle
		);

	:ref:`Sign<doxid-namespacegeode_1a0805566e7d9eb8e31ef1d932837fdb1b>` opengeode_geometry_api :ref:`tetrahedron_volume_sign<doxid-namespacegeode_1ae8800d3c5c55212cf5ba5891153211c2>`(const :ref:`Tetrahedron<doxid-classgeode_1_1_tetrahedron>`& tetra);
	:ref:`Sign<doxid-namespacegeode_1a0805566e7d9eb8e31ef1d932837fdb1b>` opengeode_geometry_api :ref:`triangle_area_sign<doxid-namespacegeode_1a2d52fe60961fc54438647002602740e4>`(const Triangle2D& triangle);

	:ref:`Sign<doxid-namespacegeode_1a0805566e7d9eb8e31ef1d932837fdb1b>` opengeode_geometry_api :ref:`triangle_area_sign<doxid-namespacegeode_1a5133c379fc646064c9aeb986d21551a5>`(
		const Triangle3D& triangle,
		:ref:`local_index_t<doxid-namespacegeode_1aa4af2b9c3c63eb304286e812ba69a9a9>` axis
		);

	:target:`ALIAS_1D_AND_2D_AND_3D<doxid-namespacegeode_1a4cfe0d1d3550fe989f11f72256d754ce>`(:ref:`Vector<doxid-classgeode_1_1_vector>`);
	void opengeode_mesh_api :target:`register_geode_builder<doxid-namespacegeode_1a618a67e60c63449f834b7f8fe67808e0>`();
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1ab37389a784cc08889088d057d6745c8e>`(:ref:`EdgedCurve<doxid-classgeode_1_1_edged_curve>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a25875b8f6532ca2e4fd9254c80be7aaf>`(:ref:`EdgedCurveBuilder<doxid-classgeode_1_1_edged_curve_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1ae7ad36948deefa4fe158f9e929cae4d5>`(:ref:`OpenGeodeEdgedCurve<doxid-classgeode_1_1_open_geode_edged_curve>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a1a6f282161b666b5ad2548ae1367a13a>`(:ref:`OpenGeodeEdgedCurveBuilder<doxid-classgeode_1_1_open_geode_edged_curve_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a2eac4941a89e5129710dc9fed92cefa4>`(:ref:`OpenGeodeHybridSolid<doxid-classgeode_1_1_open_geode_hybrid_solid>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1af7fef224a5877c2a2ff950f8c1409421>`(:ref:`OpenGeodeHybridSolidBuilder<doxid-classgeode_1_1_open_geode_hybrid_solid_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a8252b03e21a42a1833384e1b6ddd2fd7>`(:ref:`OpenGeodePointSet<doxid-classgeode_1_1_open_geode_point_set>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1adb3e0d666830c5126e5e1e46ab16fbec>`(:ref:`OpenGeodePointSetBuilder<doxid-classgeode_1_1_open_geode_point_set_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1aeeb83da836913b87d1e5ede6369da218>`(:ref:`OpenGeodePolygonalSurface<doxid-classgeode_1_1_open_geode_polygonal_surface>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a91957a1cc3d14a4a636629fe9ca144bc>`(:ref:`OpenGeodePolygonalSurfaceBuilder<doxid-classgeode_1_1_open_geode_polygonal_surface_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a76e24d44df63eb951357b9207b036de0>`(:ref:`OpenGeodePolyhedralSolid<doxid-classgeode_1_1_open_geode_polyhedral_solid>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1a1f39a726c59608ea125c7ff31b57961b>`(:ref:`OpenGeodePolyhedralSolidBuilder<doxid-classgeode_1_1_open_geode_polyhedral_solid_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a42d0f88fe4fe61a63a8821e41c604193>`(OpenGeodeRegularGrid);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1afc99f62c3b81188d11ae42d276b050f4>`(OpenGeodeRegularGridBuilder);
	:target:`ALIAS_3D<doxid-namespacegeode_1a919f4e30fac34c456a75509531a58f1b>`(OpenGeodeRegularGridBuilder);
	:target:`ALIAS_2D<doxid-namespacegeode_1a5351014cf91dd9442487d85e2142ceba>`(OpenGeodeRegularGridBuilder);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a704a4f75c8f617150f673af0d182e42f>`(:ref:`OpenGeodeTetrahedralSolid<doxid-classgeode_1_1_open_geode_tetrahedral_solid>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1a5d76de73ac3b9f41e76ba78ae062363a>`(:ref:`OpenGeodeTetrahedralSolidBuilder<doxid-classgeode_1_1_open_geode_tetrahedral_solid_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1adbd85d0226bd7cecafa7630498fe8389>`(:ref:`OpenGeodeTriangulatedSurface<doxid-classgeode_1_1_open_geode_triangulated_surface>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a5234a7b55489aa84a4f6a5f9f8429993>`(:ref:`OpenGeodeTriangulatedSurfaceBuilder<doxid-classgeode_1_1_open_geode_triangulated_surface_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1aec45feff83bfe89a3608ad215c769920>`(:ref:`Grid<doxid-classgeode_1_1_grid>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1aa9578845c3fe3e883c456631eb638991>`(:ref:`GridBuilder<doxid-classgeode_1_1_grid_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a1da5adee14f91deff17a0b855b2c8e84>`(:ref:`HybridSolid<doxid-classgeode_1_1_hybrid_solid>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1a2182e5d2fc2bcb1a0dd4f1ef38fb0806>`(:ref:`HybridSolidBuilder<doxid-classgeode_1_1_hybrid_solid_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a55897b30a3ff5e25684f4268a974caad>`(:ref:`PointSet<doxid-classgeode_1_1_point_set>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a26bc8c2703a42415e402bbb51bd8aed5>`(:ref:`PointSetBuilder<doxid-classgeode_1_1_point_set_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1aa326268026b80210a023b9d2edec059d>`(:ref:`PolygonalSurface<doxid-classgeode_1_1_polygonal_surface>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a2769c7b504e7fefeb75abfcbb3ba8a7c>`(:ref:`PolygonalSurfaceBuilder<doxid-classgeode_1_1_polygonal_surface_builder>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1adc471ee93a9ccfd5ff001e3d4fa0a3e2>`(:ref:`PolyhedralSolidBuilder<doxid-classgeode_1_1_polyhedral_solid_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1aca4385eb3d676a070003e6270f6472ab>`(RegularGrid);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a7d211ec998d73c144e216a691d74484e>`(RegularGridBuilder);
	:target:`ALIAS_3D<doxid-namespacegeode_1a701f6897a4e87db11377f9081ccaa3cf>`(RegularGrid);
	:target:`ALIAS_3D<doxid-namespacegeode_1a9a3b63cfd939f8643cfe6d8674e917bc>`(RegularGridBuilder);
	:target:`ALIAS_2D<doxid-namespacegeode_1a4bd02aabaf2cf4d25e7f1471d6f5f682>`(:ref:`Point<doxid-classgeode_1_1_point>`);
	:target:`ALIAS_2D<doxid-namespacegeode_1adaf39f90e9bc108a983f1600fb5f37d1>`(RegularGrid);
	:target:`ALIAS_2D<doxid-namespacegeode_1aa6735c18f98aae0f4e9af202a902b5bb>`(RegularGridBuilder);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a8a7d3b56ede8584b86aacd34f9406b10>`(:ref:`SolidMeshBuilder<doxid-classgeode_1_1_solid_mesh_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a9d53aa81c96e72b60443232e70ecb56e>`(:ref:`SolidEdges<doxid-classgeode_1_1_solid_edges>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1adb80b0375986d7e6fba1fd8cdacfb91b>`(:ref:`SolidEdgesBuilder<doxid-classgeode_1_1_solid_edges_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1aea10f1e52539e47c02860e1d249eaefc>`(:ref:`SolidEdgesBuilder<doxid-classgeode_1_1_solid_edges_builder>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1a723a49c552154e039e98cf3e5928a3d6>`(:ref:`SolidFacetsBuilder<doxid-classgeode_1_1_solid_facets_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a966e61ea4fa8ee73f2dcffbb3813496a>`(:ref:`SolidFacetsBuilder<doxid-classgeode_1_1_solid_facets_builder>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1a98ba9276158785b41affd84db1d2f6f7>`(:ref:`SolidMeshBuilder<doxid-classgeode_1_1_solid_mesh_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a8d32d54426edeaad7cfe32bbf73441b4>`(:ref:`SurfaceMeshBuilder<doxid-classgeode_1_1_surface_mesh_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a0ed06c418aa07e326b15c4f88463a415>`(:ref:`SurfaceEdges<doxid-classgeode_1_1_surface_edges>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a6a92fe492d0925603ec23f1230e44540>`(:ref:`SurfaceEdgesBuilder<doxid-classgeode_1_1_surface_edges_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1aa9eca13715aca2567523b81021cda51a>`(:ref:`SurfaceMesh<doxid-classgeode_1_1_surface_mesh>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1aa0de7495eb3035f752608b7dde881368>`(:ref:`SurfaceEdgesBuilder<doxid-classgeode_1_1_surface_edges_builder>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1ab4d4d8985175a9631086ea3a7bf8f61d>`(:ref:`SurfaceMeshBuilder<doxid-classgeode_1_1_surface_mesh_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a3b691d4711522d638d7d8f1b087e597a>`(:ref:`TetrahedralSolid<doxid-classgeode_1_1_tetrahedral_solid>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1af14e4907bb3d08e5cc6822c283db8b65>`(:ref:`TetrahedralSolidBuilder<doxid-classgeode_1_1_tetrahedral_solid_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1aca0fde735cff4e277ede564650324fd0>`(:ref:`TriangulatedSurface<doxid-classgeode_1_1_triangulated_surface>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a5f77df444726f93a1df8e868ba125aa3>`(:ref:`TriangulatedSurfaceBuilder<doxid-classgeode_1_1_triangulated_surface_builder>`);
	:target:`OPENGEODE_LIBRARY<doxid-namespacegeode_1a88ead4fd5cb58782b06304e368357135>`(opengeode_mesh_api, OpenGeodeMesh);
	void opengeode_mesh_api :ref:`register_mesh_serialize_pcontext<doxid-namespacegeode_1aa05925dcfcae1d0f42d06f0f9a8dfb8a>`(:ref:`PContext<doxid-namespacegeode_1a79da04720a9926e6212751b7e0d5b6c7>`& context);
	void opengeode_mesh_api :ref:`register_mesh_deserialize_pcontext<doxid-namespacegeode_1ad554073e01b714099ca0e253bdeee8e3>`(:ref:`PContext<doxid-namespacegeode_1a79da04720a9926e6212751b7e0d5b6c7>`& context);
	void opengeode_mesh_api :target:`register_geode_mesh<doxid-namespacegeode_1adce51211caa99c2211735c26faf6323e>`();
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a48dc7dc04a72af2e68092c3d4b4696ab>`(:ref:`BoundingBox<doxid-classgeode_1_1_bounding_box>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1abca05657b8eb6a446c79a4e841068fcf>`(:ref:`EdgedCurveBuilder<doxid-classgeode_1_1_edged_curve_builder>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a80ee0d83f9eb471e3d0a3066c343cb42>`(:ref:`EdgedCurve<doxid-classgeode_1_1_edged_curve>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a10bca5e5d2bdb673816feac3d71aab17>`(:ref:`OpenGeodeEdgedCurveBuilder<doxid-classgeode_1_1_open_geode_edged_curve_builder>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a4b4a327bb4bd20e0d3f9a8dd02dfd2f5>`(:ref:`OpenGeodeEdgedCurve<doxid-classgeode_1_1_open_geode_edged_curve>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a9425186c3f7735902f08a0ac204aefba>`(:ref:`OpenGeodeHybridSolidBuilder<doxid-classgeode_1_1_open_geode_hybrid_solid_builder>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1ad3a58dbaac7c9c3cb15d5223ff1f9b91>`(:ref:`OpenGeodeHybridSolid<doxid-classgeode_1_1_open_geode_hybrid_solid>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a659fc30ac32b4f89b76a5c926bd3d459>`(:ref:`OpenGeodePointSetBuilder<doxid-classgeode_1_1_open_geode_point_set_builder>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1ae07cdbfe711c5f8f66983868a5e34f1e>`(:ref:`OpenGeodePointSet<doxid-classgeode_1_1_open_geode_point_set>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1ad80387a97d060455522a423a5e06e6fc>`(:ref:`OpenGeodePolygonalSurfaceBuilder<doxid-classgeode_1_1_open_geode_polygonal_surface_builder>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a8fc0f6ae7897df8fe33a4da0fc2f99ae>`(:ref:`OpenGeodePolygonalSurface<doxid-classgeode_1_1_open_geode_polygonal_surface>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1ae1e4e0286f289f2b782ad00f78e643fb>`(:ref:`OpenGeodePolyhedralSolidBuilder<doxid-classgeode_1_1_open_geode_polyhedral_solid_builder>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1a065e621efee92fa2cc150a78df20dcd2>`(:ref:`OpenGeodePolyhedralSolid<doxid-classgeode_1_1_open_geode_polyhedral_solid>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1a16a42c7e39b2fc2b5dfab1ecd313b32d>`(OpenGeodeRegularGrid);
	:target:`ALIAS_2D<doxid-namespacegeode_1a3d64bedcd6a10ada69fa1b75643359b0>`(OpenGeodeRegularGrid);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a994c42a96abfb955727679c1791bf07a>`(:ref:`OpenGeodeTetrahedralSolidBuilder<doxid-classgeode_1_1_open_geode_tetrahedral_solid_builder>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1a1a155ae4d12c72e621175834fe9f1bf5>`(:ref:`OpenGeodeTetrahedralSolid<doxid-classgeode_1_1_open_geode_tetrahedral_solid>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a397ee7f2b69d05f9e9ab91cf0b6c391d>`(:ref:`OpenGeodeTriangulatedSurfaceBuilder<doxid-classgeode_1_1_open_geode_triangulated_surface_builder>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1afeb3d280ffcd275ef0148dceffda7eb8>`(:ref:`OpenGeodeTriangulatedSurface<doxid-classgeode_1_1_open_geode_triangulated_surface>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a66de9cc465de1ecbe09f56cc26820b8f>`(:ref:`GridBuilder<doxid-classgeode_1_1_grid_builder>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a49cc1447b6c8a594f43a98d2dbbf4f5f>`(:ref:`GridCellIndices<doxid-namespacegeode_1aac3d6c58a0093f05712734c7f3365eb2>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a0e3742c782734c041e4bd3c61d8a7741>`(:ref:`GridCellVertices<doxid-namespacegeode_1a54586595e29e2768b3eb1084ace9afa8>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a8456dc1d050943a29fe06026a07c0e87>`(:ref:`GridCellsAroundVertex<doxid-namespacegeode_1a0403bdf67bf85805094b6e99bb52b9bd>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a7811fa3e946852b9ee881b44a272de81>`(:ref:`Grid<doxid-classgeode_1_1_grid>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1af4f182876ad2706cfd67cfa0a7ff23b4>`(:ref:`HybridSolidBuilder<doxid-classgeode_1_1_hybrid_solid_builder>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1ad1e677b7ca1b4a9e3461a5ab070e8b42>`(:ref:`HybridSolid<doxid-classgeode_1_1_hybrid_solid>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a11058d89bacb297358eb8a8a8a29490c>`(:ref:`PointSet<doxid-classgeode_1_1_point_set>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a34993c9c8235be7221449c93152372f7>`(:ref:`PolygonalSurfaceBuilder<doxid-classgeode_1_1_polygonal_surface_builder>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a69bca61d0800722900c8332a1452e3c8>`(:ref:`Vector<doxid-classgeode_1_1_vector>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a36eeebddb61f6b3acc7e4711bb6bbeb4>`(:ref:`PolygonalSurface<doxid-classgeode_1_1_polygonal_surface>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1adbe8da17f64cdaec081f07b2acc91fbe>`(:ref:`PolyhedralSolidBuilder<doxid-classgeode_1_1_polyhedral_solid_builder>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1ae3a0efd7d2b1a538c139321616df2007>`(:ref:`PolyhedralSolid<doxid-classgeode_1_1_polyhedral_solid>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1ad28cbab7eb31a152c58dcd693b4c046e>`(:ref:`SolidEdges<doxid-classgeode_1_1_solid_edges>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1af2c105ceeccb7ccf5f0cf0c085264268>`(:ref:`SolidFacets<doxid-classgeode_1_1_solid_facets>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a9dcd689e2898db560ce9cd6f8436006a>`(:ref:`SolidFacets<doxid-classgeode_1_1_solid_facets>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1a3b78e29335d938bae6153ff18f271541>`(:ref:`SolidMesh<doxid-classgeode_1_1_solid_mesh>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a1c6dd7cae76a885ab1af263c8bb58c32>`(:ref:`SurfaceEdges<doxid-classgeode_1_1_surface_edges>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a7986437714612066a303580285ecf217>`(:ref:`SurfaceMesh<doxid-classgeode_1_1_surface_mesh>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1ae9dc6097b7f8cfa25fc265176e3c5aa9>`(:ref:`TetrahedralSolidBuilder<doxid-classgeode_1_1_tetrahedral_solid_builder>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1a80b5a064401aa01835668d57032444e2>`(:ref:`TetrahedralSolid<doxid-classgeode_1_1_tetrahedral_solid>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a4b6e0eef43419c522c8afdef30e0c045>`(:ref:`TriangulatedSurfaceBuilder<doxid-classgeode_1_1_triangulated_surface_builder>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1ac5ecef06abef60896357a8eb77586520>`(:ref:`TriangulatedSurface<doxid-classgeode_1_1_triangulated_surface>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a0895a17483512f1e7888d150089db0e2>`(:ref:`AABBTree<doxid-classgeode_1_1_a_a_b_b_tree>`);

	template <index_t dimension>
	:ref:`AABBTree<doxid-classgeode_1_1_a_a_b_b_tree>`<dimension> :target:`create_aabb_tree<doxid-namespacegeode_1a0d28522356eb132aec3133d2b376f40a>`(const :ref:`EdgedCurve<doxid-classgeode_1_1_edged_curve>`<dimension>& mesh);

	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a8ac5cec34b9c5986e0c83548aeb19f2d>`(:ref:`SolidMesh<doxid-classgeode_1_1_solid_mesh>`);

	template <index_t dimension>
	:ref:`AABBTree<doxid-classgeode_1_1_a_a_b_b_tree>`<dimension> :target:`create_aabb_tree<doxid-namespacegeode_1ac9dd68d53cd385d28fa2dd6a52a97be6>`(const :ref:`SolidMesh<doxid-classgeode_1_1_solid_mesh>`<dimension>& mesh);

	:target:`ALIAS_3D<doxid-namespacegeode_1a3441eec525b1a811e86a28146e4abcc6>`(:ref:`DistanceToTetrahedron<doxid-classgeode_1_1_distance_to_tetrahedron>`);

	template <index_t dimension>
	:ref:`AABBTree<doxid-classgeode_1_1_a_a_b_b_tree>`<dimension> :target:`create_aabb_tree<doxid-namespacegeode_1ab8ef3e331d6a87e8d072ae4e7d473eaa>`(const :ref:`SurfaceMesh<doxid-classgeode_1_1_surface_mesh>`<dimension>& mesh);

	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a09e5e2ee9a47e15d877cc2593aad4911>`(:ref:`DistanceToTriangle<doxid-classgeode_1_1_distance_to_triangle>`);

	std::unique_ptr<EdgedCurve2D> opengeode_mesh_api :target:`convert_edged_curve3d_into_2d<doxid-namespacegeode_1a52516a411d967f77ceabd6321636527c>`(
		const EdgedCurve3D& curve3d,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` axis_to_remove
		);

	std::unique_ptr<EdgedCurve3D> opengeode_mesh_api :target:`convert_edged_curve2d_into_3d<doxid-namespacegeode_1a87c5224d3f946cfc5d9c5065e71a8a1a>`(
		const EdgedCurve2D& curve2d,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` axis_to_add
		);

	std::unique_ptr<PointSet2D> opengeode_mesh_api :target:`convert_point_set3d_into_2d<doxid-namespacegeode_1accdfbecc41b0345f70d8f72fa01ba2b8>`(
		const PointSet3D& point_set3d,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` axis_to_remove
		);

	std::unique_ptr<PointSet3D> opengeode_mesh_api :target:`convert_point_set2d_into_3d<doxid-namespacegeode_1aaea8596332fd0deeb3f87519d961a2dd>`(
		const PointSet2D& point_set2d,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` axis_to_add
		);

	absl::optional<std::unique_ptr<TetrahedralSolid3D>> opengeode_mesh_api :target:`convert_solid_mesh_into_tetrahedral_solid<doxid-namespacegeode_1ad88abdc0180700dd94d4dc05d56f4149>`(const SolidMesh3D& solid);

	template <index_t dimension>
	std::unique_ptr<:ref:`PolygonalSurface<doxid-classgeode_1_1_polygonal_surface>`<dimension>> :target:`convert_surface_mesh_into_polygonal_surface<doxid-namespacegeode_1a1f9318896e50084939d8cfb251b1f1bd>`(const :ref:`SurfaceMesh<doxid-classgeode_1_1_surface_mesh>`<dimension>& surface);

	template <index_t dimension>
	absl::optional<std::unique_ptr<:ref:`TriangulatedSurface<doxid-classgeode_1_1_triangulated_surface>`<dimension>>> :target:`convert_surface_mesh_into_triangulated_surface<doxid-namespacegeode_1ae33b5150d1f10a917e6025e1e83de2eb>`(const :ref:`SurfaceMesh<doxid-classgeode_1_1_surface_mesh>`<dimension>& surface);

	template <index_t dimension>
	void :target:`triangulate_surface_mesh<doxid-namespacegeode_1ad29fa84c1540c2d42eb6046050f9e89f>`(:ref:`SurfaceMesh<doxid-classgeode_1_1_surface_mesh>`<dimension>& surface);

	template <index_t dimension>
	void :target:`triangulate_surface_mesh<doxid-namespacegeode_1a28c3db55c0a7c5f6625be5059a560de5>`(
		const :ref:`SurfaceMesh<doxid-classgeode_1_1_surface_mesh>`<dimension>& surface,
		:ref:`SurfaceMeshBuilder<doxid-classgeode_1_1_surface_mesh_builder>`<dimension>& builder
		);

	std::unique_ptr<SurfaceMesh3D> opengeode_mesh_api :target:`convert_surface_mesh2d_into_3d<doxid-namespacegeode_1a56918db2e4c39715e296df3f1719e3bc>`(
		const SurfaceMesh2D& surface2d,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` axis_to_add
		);

	std::unique_ptr<SurfaceMesh2D> opengeode_mesh_api :target:`convert_surface_mesh3d_into_2d<doxid-namespacegeode_1a8a62b99144d9a5f2f99fb4f611c8a889>`(
		const SurfaceMesh3D& surface3d,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` axis_to_remove
		);

	std::unique_ptr<PolygonalSurface3D> opengeode_mesh_api :target:`convert_polygonal_surface2d_into_3d<doxid-namespacegeode_1a09c44c3f7154784ab7f08a9746c4ef40>`(
		const PolygonalSurface2D& surface2d,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` axis_to_add
		);

	std::unique_ptr<PolygonalSurface2D> opengeode_mesh_api :target:`convert_polygonal_surface3d_into_2d<doxid-namespacegeode_1a891d5b78dde887b3c43e33d3430dd8a8>`(
		const PolygonalSurface3D& surface3d,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` axis_to_remove
		);

	std::unique_ptr<TriangulatedSurface3D> opengeode_mesh_api :target:`convert_triangulated_surface2d_into_3d<doxid-namespacegeode_1ae9e66a5c1a0dad20e8bcfafd712eb125>`(
		const TriangulatedSurface2D& surface2d,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` axis_to_add
		);

	std::unique_ptr<TriangulatedSurface2D> opengeode_mesh_api :target:`convert_triangulated_surface3d_into_2d<doxid-namespacegeode_1ac06058e4a6318dc0efec26defe7b716f>`(
		const TriangulatedSurface3D& surface3d,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` axis_to_remove
		);

	template <index_t dimension>
	std::unique_ptr<:ref:`SurfaceMesh<doxid-classgeode_1_1_surface_mesh>`<dimension>> :target:`merge_surface_mesh<doxid-namespacegeode_1a42bbac6585bd93d1b5efd8d3a7df2e89>`(const :ref:`SurfaceMesh<doxid-classgeode_1_1_surface_mesh>`<dimension>& surface);

	template <index_t dimension>
	std::unique_ptr<:ref:`SurfaceMesh<doxid-classgeode_1_1_surface_mesh>`<dimension>> :target:`merge_surface_meshes<doxid-namespacegeode_1afdb0662672f33a008eac14437a46f0b6>`(const std::vector<std::reference_wrapper<const :ref:`SurfaceMesh<doxid-classgeode_1_1_surface_mesh>`<dimension>>>& surfaces);

	template <
		template<index_t> class Mesh,
		template<index_t> class MeshBuilder,
		index_t dimension
		>
	void :target:`translate_mesh<doxid-namespacegeode_1aadf5811c018d1dcd98bb06afeb6c179b>`(
		Mesh<dimension>& mesh,
		MeshBuilder<dimension>& builder,
		const :ref:`Vector<doxid-classgeode_1_1_vector>`<dimension>& translation
		);

	template <
		template<index_t> class Mesh,
		template<index_t> class MeshBuilder,
		index_t dimension
		>
	void :target:`rescale_mesh<doxid-namespacegeode_1af8ca69d2d7b39bc07b6077a3fcbfcf0d>`(
		Mesh<dimension>& mesh,
		MeshBuilder<dimension>& builder,
		const std::array<double, dimension>& scale
		);

	:target:`ALIAS_3D<doxid-namespacegeode_1af40a127c86216f0ba2c8d1276fe61644>`(:ref:`TriangulatedSurface<doxid-classgeode_1_1_triangulated_surface>`);

	double opengeode_mesh_api :target:`hausdorff_distance<doxid-namespacegeode_1afed8936a3a77492a730d655e73f035a7>`(
		const TriangulatedSurface3D& mesh_A,
		const TriangulatedSurface3D& mesh_B
		);

	template <template<index_t> class Mesh, index_t dimension>
	:ref:`NNSearch<doxid-classgeode_1_1_n_n_search>`<dimension> :target:`create_nn_search<doxid-namespacegeode_1abeee5ff5c5a7319611e59fe60ff6f740>`(const Mesh<dimension>& mesh);

	template <index_t dimension>
	std::vector<:ref:`GridCellIndices<doxid-namespacegeode_1aac3d6c58a0093f05712734c7f3365eb2>`<dimension>> :target:`rasterize_segment<doxid-namespacegeode_1ae7018f2c9fa69cbb05d9ea118dfcc50b>`(
		const RegularGrid<dimension>& grid,
		const :ref:`Segment<doxid-classgeode_1_1_segment>`<dimension>& segment
		);

	template <index_t dimension>
	std::vector<:ref:`GridCellIndices<doxid-namespacegeode_1aac3d6c58a0093f05712734c7f3365eb2>`<dimension>> :target:`conservative_rasterize_segment<doxid-namespacegeode_1a2b2e666fcae22d4792c740ffb6b0c1b5>`(
		const RegularGrid<dimension>& grid,
		const :ref:`Segment<doxid-classgeode_1_1_segment>`<dimension>& segment
		);

	template <index_t dimension>
	std::vector<:ref:`GridCellIndices<doxid-namespacegeode_1aac3d6c58a0093f05712734c7f3365eb2>`<dimension>> :target:`rasterize_triangle<doxid-namespacegeode_1a46432925e3e78e4bf041790a33c12bfc>`(
		const RegularGrid<dimension>& grid,
		const :ref:`Triangle<doxid-classgeode_1_1_triangle>`<dimension>& triangle
		);

	:target:`ALIAS_3D<doxid-namespacegeode_1a8494fd593c0c13b77aa7c916bb8662e2>`(:ref:`SurfaceMesh<doxid-classgeode_1_1_surface_mesh>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1aa6ddcbb624385f54bdcf1dc8a027289d>`(:ref:`RegularGridPointFunction<doxid-classgeode_1_1_regular_grid_point_function>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1aa3a77cddd3bb34d4120f88f3d36be399>`(:ref:`RegularGridScalarFunction<doxid-classgeode_1_1_regular_grid_scalar_function>`);

	template <index_t dimension>
	void :target:`repair_polygon_orientations<doxid-namespacegeode_1a2077af68232ea9abbbace5eae9be71d8>`(:ref:`SurfaceMesh<doxid-classgeode_1_1_surface_mesh>`<dimension>& mesh);

	:target:`ALIAS_3D<doxid-namespacegeode_1a209df05cd0d3171410d26d91193060d3>`(:ref:`TetrahedralSolidPointFunction<doxid-classgeode_1_1_tetrahedral_solid_point_function>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1ae9e0d03be26ef934e9a89f9b9c00f2d7>`(:ref:`TetrahedralSolidScalarFunction<doxid-classgeode_1_1_tetrahedral_solid_scalar_function>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1aef902bbda79f83001a5929441d727794>`(:ref:`TriangulatedSurfacePointFunction<doxid-classgeode_1_1_triangulated_surface_point_function>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1ad2eae98e11416498c4ba21d2db0c9030>`(:ref:`TriangulatedSurfaceScalarFunction<doxid-classgeode_1_1_triangulated_surface_scalar_function>`);
	:target:`BITSERY_INPUT_MESH_DIMENSION<doxid-namespacegeode_1a2b924df3f51c8cba73c920c33e613352>`(:ref:`EdgedCurve<doxid-classgeode_1_1_edged_curve>`);
	:target:`BITSERY_OUTPUT_MESH_DIMENSION<doxid-namespacegeode_1aa9bc004f80438dfdb47b55329b548805>`(:ref:`EdgedCurve<doxid-classgeode_1_1_edged_curve>`);
	:target:`BITSERY_INPUT_MESH_NO_DIMENSION<doxid-namespacegeode_1a6b8dac0b909b7c5eb4db841a6117bd0f>`(:ref:`Graph<doxid-classgeode_1_1_graph>`);
	:target:`BITSERY_OUTPUT_MESH_NO_DIMENSION<doxid-namespacegeode_1a6ee30d99771a42eefaac649d4fb0c4d6>`(:ref:`Graph<doxid-classgeode_1_1_graph>`);
	:target:`BITSERY_INPUT_MESH_DIMENSION<doxid-namespacegeode_1ade26ecdd0a847c3e94fd0be14c048af9>`(:ref:`HybridSolid<doxid-classgeode_1_1_hybrid_solid>`);
	:target:`BITSERY_OUTPUT_MESH_DIMENSION<doxid-namespacegeode_1ada304607cd49e4b332f3067b7013f368>`(:ref:`HybridSolid<doxid-classgeode_1_1_hybrid_solid>`);
	:target:`BITSERY_INPUT_MESH_DIMENSION<doxid-namespacegeode_1a5ee7a0e67251d51d2a41892d5e0558d2>`(:ref:`PointSet<doxid-classgeode_1_1_point_set>`);
	:target:`BITSERY_OUTPUT_MESH_DIMENSION<doxid-namespacegeode_1aec69f9763c807240649836e2ccda71ee>`(:ref:`PointSet<doxid-classgeode_1_1_point_set>`);
	:target:`BITSERY_INPUT_MESH_DIMENSION<doxid-namespacegeode_1a409d10b0bfd6abbee0e2d2a600e4c150>`(:ref:`PolygonalSurface<doxid-classgeode_1_1_polygonal_surface>`);
	:target:`BITSERY_OUTPUT_MESH_DIMENSION<doxid-namespacegeode_1a49cf1b2f5f7a1e3cae6319b9e9396e43>`(:ref:`PolygonalSurface<doxid-classgeode_1_1_polygonal_surface>`);
	:target:`BITSERY_INPUT_MESH_DIMENSION<doxid-namespacegeode_1af16989ab9befa5e2a3d3551802a20afd>`(:ref:`PolyhedralSolid<doxid-classgeode_1_1_polyhedral_solid>`);
	:target:`BITSERY_OUTPUT_MESH_DIMENSION<doxid-namespacegeode_1a929fc6ebddb2dd41979506177bc5663c>`(:ref:`PolyhedralSolid<doxid-classgeode_1_1_polyhedral_solid>`);
	:target:`BITSERY_INPUT_MESH_DIMENSION<doxid-namespacegeode_1aa0effc99073600455b00dbfbc70e5ce9>`(RegularGrid);
	:target:`BITSERY_OUTPUT_MESH_DIMENSION<doxid-namespacegeode_1a12d0428830aa6b308405c1622759df83>`(RegularGrid);
	:target:`BITSERY_INPUT_MESH_DIMENSION<doxid-namespacegeode_1a828b8fcd92371a82d1e2482e9b71d623>`(:ref:`TetrahedralSolid<doxid-classgeode_1_1_tetrahedral_solid>`);
	:target:`BITSERY_OUTPUT_MESH_DIMENSION<doxid-namespacegeode_1a3d50acb5776571f3ab75818a381007b5>`(:ref:`TetrahedralSolid<doxid-classgeode_1_1_tetrahedral_solid>`);
	:target:`BITSERY_INPUT_MESH_DIMENSION<doxid-namespacegeode_1a112d6f77a8a63172f901bf937f318f5a>`(:ref:`TriangulatedSurface<doxid-classgeode_1_1_triangulated_surface>`);
	:target:`BITSERY_OUTPUT_MESH_DIMENSION<doxid-namespacegeode_1a9c44cf8a4b7aa7997b158b116ef8b2ba>`(:ref:`TriangulatedSurface<doxid-classgeode_1_1_triangulated_surface>`);
	:target:`BITSERY_INPUT_MESH_NO_DIMENSION<doxid-namespacegeode_1a05e741718e5d8675d01eaf4933c7a2a9>`(:ref:`VertexSet<doxid-classgeode_1_1_vertex_set>`);
	:target:`BITSERY_OUTPUT_MESH_NO_DIMENSION<doxid-namespacegeode_1aa8fd1925635f74f12031ea8e0d3eb98e>`(:ref:`VertexSet<doxid-classgeode_1_1_vertex_set>`);
	void opengeode_mesh_api :target:`register_geode_mesh_input<doxid-namespacegeode_1a949b3510b269f4536e069d3dc5f90be5>`();
	void opengeode_mesh_api :target:`register_geode_mesh_output<doxid-namespacegeode_1a073be32b66edf4bb62cf111b7833b67c>`();

	template <index_t dimension>
	std::unique_ptr<:ref:`EdgedCurve<doxid-classgeode_1_1_edged_curve>`<dimension>> :ref:`load_edged_curve<doxid-namespacegeode_1aa7842b652ce91298cb5af68de7348148>`(
		const :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`& impl,
		absl::string_view filename
		);

	template <index_t dimension>
	std::unique_ptr<:ref:`EdgedCurve<doxid-classgeode_1_1_edged_curve>`<dimension>> :ref:`load_edged_curve<doxid-namespacegeode_1ae0ac6f74f5a4eca322a13409eed48561>`(absl::string_view filename);

	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a94018066b3cdeb1ed0fac77be9069602>`(:ref:`EdgedCurveInputFactory<doxid-namespacegeode_1a3132f2678784f6cc58a8ba04bde4f294>`);

	template <index_t dimension>
	void :ref:`save_edged_curve<doxid-namespacegeode_1aba7ac11907d0a58ea7fc245965cd8b63>`(
		const :ref:`EdgedCurve<doxid-classgeode_1_1_edged_curve>`<dimension>& edged_curve,
		absl::string_view filename
		);

	std::unique_ptr<:ref:`Graph<doxid-classgeode_1_1_graph>`> opengeode_mesh_api :ref:`load_graph<doxid-namespacegeode_1aade7384ff1a5237cd20ad03e7bb36db3>`(
		const :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`& impl,
		absl::string_view filename
		);

	std::unique_ptr<:ref:`Graph<doxid-classgeode_1_1_graph>`> opengeode_mesh_api :ref:`load_graph<doxid-namespacegeode_1a90ea541741fdf3169e5e67c31b51648f>`(absl::string_view filename);

	void opengeode_mesh_api :ref:`save_graph<doxid-namespacegeode_1a7bfdf4be37e5f3d64db9c16d8a4c5a23>`(
		const :ref:`Graph<doxid-classgeode_1_1_graph>`& graph,
		absl::string_view filename
		);

	template <index_t dimension>
	std::unique_ptr<:ref:`HybridSolid<doxid-classgeode_1_1_hybrid_solid>`<dimension>> :ref:`load_hybrid_solid<doxid-namespacegeode_1a88d3b49d086cb5cbff847101dbbd98c1>`(
		const :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`& impl,
		absl::string_view filename
		);

	template <index_t dimension>
	std::unique_ptr<:ref:`HybridSolid<doxid-classgeode_1_1_hybrid_solid>`<dimension>> :ref:`load_hybrid_solid<doxid-namespacegeode_1a6be4f5843d0a729a7385d523471ed6b9>`(absl::string_view filename);

	:target:`ALIAS_3D<doxid-namespacegeode_1a538bb1f70017d299f05fb5e294cb4fd5>`(:ref:`HybridSolidInputFactory<doxid-namespacegeode_1a2121e66228c18390466b68c307b50a31>`);

	template <index_t dimension>
	void :ref:`save_hybrid_solid<doxid-namespacegeode_1af75d6f3d6e6dae0feef877910944ea74>`(
		const :ref:`HybridSolid<doxid-classgeode_1_1_hybrid_solid>`<dimension>& hybrid_solid,
		absl::string_view filename
		);

	absl::string_view opengeode_mesh_api :target:`extension_from_filename<doxid-namespacegeode_1a8b7fdb6caef0b4f201c81f17455f299d>`(absl::string_view filename);

	template <index_t dimension>
	std::unique_ptr<:ref:`PointSet<doxid-classgeode_1_1_point_set>`<dimension>> :ref:`load_point_set<doxid-namespacegeode_1aa4ae84c454aa519617fcae8cc910a892>`(
		const :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`& impl,
		absl::string_view filename
		);

	template <index_t dimension>
	std::unique_ptr<:ref:`PointSet<doxid-classgeode_1_1_point_set>`<dimension>> :ref:`load_point_set<doxid-namespacegeode_1a896fe5023e9476ab90920a265bd9ad23>`(absl::string_view filename);

	template <index_t dimension>
	void :ref:`save_point_set<doxid-namespacegeode_1abfd3fc09c7d0b0ad37241beac4fe7eb5>`(
		const :ref:`PointSet<doxid-classgeode_1_1_point_set>`<dimension>& point_set,
		absl::string_view filename
		);

	template <index_t dimension>
	std::unique_ptr<:ref:`PolygonalSurface<doxid-classgeode_1_1_polygonal_surface>`<dimension>> :ref:`load_polygonal_surface<doxid-namespacegeode_1a9f525be3a6117cea2ae87c4bfa59ca38>`(
		const :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`& impl,
		absl::string_view filename
		);

	template <index_t dimension>
	std::unique_ptr<:ref:`PolygonalSurface<doxid-classgeode_1_1_polygonal_surface>`<dimension>> :ref:`load_polygonal_surface<doxid-namespacegeode_1ad9542d68d1e1ad3db59aad9b478b1e06>`(absl::string_view filename);

	template <index_t dimension>
	void :ref:`save_polygonal_surface<doxid-namespacegeode_1af4ba3331fa0355d15f855fc1fd77b737>`(
		const :ref:`PolygonalSurface<doxid-classgeode_1_1_polygonal_surface>`<dimension>& polygonal_surface,
		absl::string_view filename
		);

	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a1e8e55e5371b72b9963704762267ff26>`(:ref:`PolyhedralSolid<doxid-classgeode_1_1_polyhedral_solid>`);

	template <index_t dimension>
	std::unique_ptr<:ref:`PolyhedralSolid<doxid-classgeode_1_1_polyhedral_solid>`<dimension>> :ref:`load_polyhedral_solid<doxid-namespacegeode_1a176fda392f50036143ecdeb1bfa12d16>`(
		const :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`& impl,
		absl::string_view filename
		);

	template <index_t dimension>
	std::unique_ptr<:ref:`PolyhedralSolid<doxid-classgeode_1_1_polyhedral_solid>`<dimension>> :ref:`load_polyhedral_solid<doxid-namespacegeode_1a82056bc821eca46dfd66810f500eebdb>`(absl::string_view filename);

	template <index_t dimension>
	void :ref:`save_polyhedral_solid<doxid-namespacegeode_1a21ca1aff84553e8332fd172dc651a521>`(
		const :ref:`PolyhedralSolid<doxid-classgeode_1_1_polyhedral_solid>`<dimension>& polyhedral_solid,
		absl::string_view filename
		);

	template <index_t dimension>
	std::unique_ptr<RegularGrid<dimension>> :ref:`load_regular_grid<doxid-namespacegeode_1a54883c0d0f11a6d8377f9a7d2f6a581f>`(
		const :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`& impl,
		absl::string_view filename
		);

	template <index_t dimension>
	std::unique_ptr<RegularGrid<dimension>> :ref:`load_regular_grid<doxid-namespacegeode_1afcf1d96c3b37241ad459bc855980cc4a>`(absl::string_view filename);

	template <index_t dimension>
	void :ref:`save_regular_grid<doxid-namespacegeode_1ad51a801008d7bedde89b06be6cfaa992>`(
		const RegularGrid<dimension>& regular_grid,
		absl::string_view filename
		);

	template <index_t dimension>
	std::unique_ptr<:ref:`TetrahedralSolid<doxid-classgeode_1_1_tetrahedral_solid>`<dimension>> :ref:`load_tetrahedral_solid<doxid-namespacegeode_1a14a941221d7d7185843588ef1796198e>`(
		const :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`& impl,
		absl::string_view filename
		);

	template <index_t dimension>
	std::unique_ptr<:ref:`TetrahedralSolid<doxid-classgeode_1_1_tetrahedral_solid>`<dimension>> :ref:`load_tetrahedral_solid<doxid-namespacegeode_1a2e8813a261d4d7884f67f6e3e1497986>`(absl::string_view filename);

	template <index_t dimension>
	void :ref:`save_tetrahedral_solid<doxid-namespacegeode_1a46ada7c17eacb9951ed8577a12f3a852>`(
		const :ref:`TetrahedralSolid<doxid-classgeode_1_1_tetrahedral_solid>`<dimension>& tetrahedral_solid,
		absl::string_view filename
		);

	template <index_t dimension>
	std::unique_ptr<:ref:`TriangulatedSurface<doxid-classgeode_1_1_triangulated_surface>`<dimension>> :ref:`load_triangulated_surface<doxid-namespacegeode_1a29dc01620754b28942d24f7427943e78>`(
		const :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`& impl,
		absl::string_view filename
		);

	template <index_t dimension>
	std::unique_ptr<:ref:`TriangulatedSurface<doxid-classgeode_1_1_triangulated_surface>`<dimension>> :ref:`load_triangulated_surface<doxid-namespacegeode_1a0aa2012312b150d9250b853482f223ef>`(absl::string_view filename);

	template <index_t dimension>
	void :ref:`save_triangulated_surface<doxid-namespacegeode_1aa80f5521075381d4ead39f194ac373e4>`(
		const :ref:`TriangulatedSurface<doxid-classgeode_1_1_triangulated_surface>`<dimension>& triangulated_surface,
		absl::string_view filename
		);

	std::unique_ptr<:ref:`VertexSet<doxid-classgeode_1_1_vertex_set>`> opengeode_mesh_api :ref:`load_vertex_set<doxid-namespacegeode_1a5b07f31ac96c4395bf09489f4f125720>`(
		const :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`& impl,
		absl::string_view filename
		);

	std::unique_ptr<:ref:`VertexSet<doxid-classgeode_1_1_vertex_set>`> opengeode_mesh_api :ref:`load_vertex_set<doxid-namespacegeode_1a7e0090ed0a8517172d5ec8f1f9cf83b7>`(absl::string_view filename);

	void opengeode_mesh_api :ref:`save_vertex_set<doxid-namespacegeode_1a94cc8bcb32cd71b66c2d6cb320e40921>`(
		const :ref:`VertexSet<doxid-classgeode_1_1_vertex_set>`& vertex_set,
		absl::string_view filename
		);

	:target:`OPENGEODE_LIBRARY<doxid-namespacegeode_1a3f23d1498e36ec1781d2f7b79c7f96bd>`(opengeode_model_api, OpenGeodeModel);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a995b8f5f0b0ac39cbe7af64fd0506205>`(:ref:`Block<doxid-classgeode_1_1_block>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a74a13005266ccc48f0d9545d28c09dcb>`(:ref:`Surface<doxid-classgeode_1_1_surface>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a9dd3655e0b4d0e1d23b6d3a8fd68c87b>`(:ref:`Line<doxid-classgeode_1_1_line>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1a0418407296b015103c7578c9c9c9a737>`(:ref:`Block<doxid-classgeode_1_1_block>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a4d748ee15a67c155610511b287f76076>`(:ref:`Surface<doxid-classgeode_1_1_surface>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1ac6239276672cd8de5886d7d1a651d910>`(:ref:`Line<doxid-classgeode_1_1_line>`);

	std::array<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`, 2> opengeode_model_api :target:`edge_unique_vertices<doxid-namespacegeode_1a877457c5e390ff23e5c8515a17353b03>`(
		const :ref:`Section<doxid-classgeode_1_1_section>`& section,
		const Line2D& line,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` edge
		);

	std::array<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`, 2> opengeode_model_api :target:`edge_unique_vertices<doxid-namespacegeode_1aaf9be6826a9307c106cddbb48e861169>`(
		const :ref:`Section<doxid-classgeode_1_1_section>`& section,
		const Surface2D& surface,
		const :ref:`PolygonEdge<doxid-structgeode_1_1_polygon_edge>`& edge
		);

	std::array<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`, 2> opengeode_model_api :target:`edge_unique_vertices<doxid-namespacegeode_1a88c3883d02703f5cac25674be3e5c9ad>`(
		const :ref:`BRep<doxid-classgeode_1_1_b_rep>`& brep,
		const Line3D& line,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` edge
		);

	std::array<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`, 2> opengeode_model_api :target:`edge_unique_vertices<doxid-namespacegeode_1aeb5b031821093d603d52f78a26bcf59e>`(
		const :ref:`BRep<doxid-classgeode_1_1_b_rep>`& brep,
		const Surface3D& surface,
		const :ref:`PolygonEdge<doxid-structgeode_1_1_polygon_edge>`& edge
		);

	std::array<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`, 2> opengeode_model_api :target:`edge_unique_vertices<doxid-namespacegeode_1aff243f1fed4caa8eca64bc25b1a4dad2>`(
		const :ref:`BRep<doxid-classgeode_1_1_b_rep>`& brep,
		const Block3D& block,
		const :ref:`PolyhedronFacetEdge<doxid-structgeode_1_1_polyhedron_facet_edge>`& edge
		);

	:ref:`SectionComponentMeshEdges<doxid-structgeode_1_1_section_component_mesh_edges>` opengeode_model_api :target:`component_mesh_edges<doxid-namespacegeode_1a952509ca967518137ca7d8dd214634ab>`(
		const :ref:`Section<doxid-classgeode_1_1_section>`& section,
		const Line2D& line,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` edge
		);

	:ref:`SectionComponentMeshEdges<doxid-structgeode_1_1_section_component_mesh_edges>` opengeode_model_api :target:`component_mesh_edges<doxid-namespacegeode_1abecd56dd19b48dd439473201b278cf62>`(
		const :ref:`Section<doxid-classgeode_1_1_section>`& section,
		const Surface2D& surface,
		const :ref:`PolygonEdge<doxid-structgeode_1_1_polygon_edge>`& edge
		);

	:ref:`BRepComponentMeshEdges<doxid-structgeode_1_1_b_rep_component_mesh_edges>` opengeode_model_api :target:`component_mesh_edges<doxid-namespacegeode_1a2e3129429f115e4cd27fb0c970506547>`(
		const :ref:`BRep<doxid-classgeode_1_1_b_rep>`& brep,
		const Line3D& line,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` edge
		);

	:ref:`BRepComponentMeshEdges<doxid-structgeode_1_1_b_rep_component_mesh_edges>` opengeode_model_api :target:`component_mesh_edges<doxid-namespacegeode_1ad983e38e3f6d4c9e12155e9b11e90634>`(
		const :ref:`BRep<doxid-classgeode_1_1_b_rep>`& brep,
		const Surface3D& surface,
		const :ref:`PolygonEdge<doxid-structgeode_1_1_polygon_edge>`& edge
		);

	:ref:`BRepComponentMeshEdges<doxid-structgeode_1_1_b_rep_component_mesh_edges>` opengeode_model_api :target:`component_mesh_edges<doxid-namespacegeode_1a6a085f4befbdecbb270a6672d7d6394a>`(
		const :ref:`BRep<doxid-classgeode_1_1_b_rep>`& brep,
		const Block3D& block,
		const :ref:`PolyhedronFacetEdge<doxid-structgeode_1_1_polyhedron_facet_edge>`& edge
		);

	:ref:`PolygonVertices<doxid-namespacegeode_1a2296da755f7ef7140e07007e5d56d86d>` opengeode_model_api :target:`polygon_unique_vertices<doxid-namespacegeode_1a92f920078ed865f0dd1ed72498579220>`(
		const :ref:`BRep<doxid-classgeode_1_1_b_rep>`& model,
		const Surface3D& surface,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` polygon_id
		);

	:ref:`PolyhedraAroundFacet<doxid-namespacegeode_1a9f8d0fbd287f5475017252ef10b8eabd>` opengeode_model_api :target:`block_mesh_polyhedra_from_surface_polygon<doxid-namespacegeode_1a2c3acbdbbe8872f610673608126db256>`(
		const :ref:`BRep<doxid-classgeode_1_1_b_rep>`& model,
		const Block3D& block,
		const Surface3D& surface,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` polygon_id
		);

	absl::InlinedVector<:ref:`BlockPolyhedronFacet<doxid-structgeode_1_1_block_polyhedron_facet>`, 2> opengeode_model_api :target:`block_vertices_from_surface_polygon<doxid-namespacegeode_1ad1e2d09b41c461df6c02d11ade9889f5>`(
		const :ref:`BRep<doxid-classgeode_1_1_b_rep>`& model,
		const Block3D& block,
		const Surface3D& surface,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` polygon_id
		);

	:ref:`BlockPolyhedraFacetVertices<doxid-structgeode_1_1_block_polyhedra_facet_vertices>` opengeode_model_api :target:`oriented_block_vertices_from_surface_polygon<doxid-namespacegeode_1a1ddd9f0dce63c42b56c3af37c5ceaf6f>`(
		const :ref:`BRep<doxid-classgeode_1_1_b_rep>`& model,
		const Block3D& block,
		const Surface3D& surface,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` polygon_id
		);

	absl::InlinedVector<:ref:`SurfacePolygonEdge<doxid-structgeode_1_1_surface_polygon_edge>`, 2> opengeode_model_api :target:`surface_vertices_from_line_edge<doxid-namespacegeode_1a54529ba606326d6e33379813b26cad57>`(
		const :ref:`BRep<doxid-classgeode_1_1_b_rep>`& model,
		const Surface3D& surface,
		const Line3D& line,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` edge_id
		);

	:ref:`SurfacePolygonsEdgeVertices<doxid-structgeode_1_1_surface_polygons_edge_vertices>` opengeode_model_api :target:`oriented_surface_vertices_from_line_edge<doxid-namespacegeode_1af98738c84cf81a9ff970a9b49e7bbeda>`(
		const :ref:`BRep<doxid-classgeode_1_1_b_rep>`& model,
		const Surface3D& surface,
		const Line3D& line,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` edge_id
		);

	absl::InlinedVector<:ref:`SurfacePolygonEdge<doxid-structgeode_1_1_surface_polygon_edge>`, 2> opengeode_model_api :target:`surface_vertices_from_line_edge<doxid-namespacegeode_1ad99a972deab845b3dd2140afecfc9cb5>`(
		const :ref:`Section<doxid-classgeode_1_1_section>`& model,
		const Surface2D& surface,
		const Line2D& line,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` edge_id
		);

	:ref:`SurfacePolygonsEdgeVertices<doxid-structgeode_1_1_surface_polygons_edge_vertices>` opengeode_model_api :target:`oriented_surface_vertices_from_line_edge<doxid-namespacegeode_1ab48bf115e63d4129cde6800e0330f643>`(
		const :ref:`Section<doxid-classgeode_1_1_section>`& model,
		const Surface2D& surface,
		const Line2D& line,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` edge_id
		);

	:ref:`ComponentMeshVertexPairs<doxid-namespacegeode_1ab0cc9fad3b163b933d6a81b0135bad90>` opengeode_model_api :target:`component_mesh_vertex_pairs<doxid-namespacegeode_1af295c87a0e76867650850a2ec720d5cf>`(
		absl::Span<const :ref:`ComponentMeshVertex<doxid-structgeode_1_1_component_mesh_vertex>`> unique_vertices0,
		absl::Span<const :ref:`ComponentMeshVertex<doxid-structgeode_1_1_component_mesh_vertex>`> unique_vertices1
		);

	std::tuple<:ref:`Section<doxid-classgeode_1_1_section>`, :ref:`ModelCopyMapping<doxid-namespacegeode_1afc1226ecaedc88b75713a97ea1b34ce5>`> opengeode_model_api :target:`convert_brep_into_section<doxid-namespacegeode_1a2471e7d3579352477ff8618417c848ce>`(
		const :ref:`BRep<doxid-classgeode_1_1_b_rep>`& brep,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` axis_to_remove
		);

	std::tuple<:ref:`BRep<doxid-classgeode_1_1_b_rep>`, :ref:`ModelCopyMapping<doxid-namespacegeode_1afc1226ecaedc88b75713a97ea1b34ce5>`> opengeode_model_api :target:`convert_section_into_brep<doxid-namespacegeode_1a928178fac168a9f86e82aa9e8333538f>`(
		const :ref:`Section<doxid-classgeode_1_1_section>`& section,
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` axis_to_add
		);

	void opengeode_model_api :target:`convert_surface_meshes_into_triangulated_surfaces<doxid-namespacegeode_1a36c5dede7d04df0ccda26ff36e23ddab>`(:ref:`BRep<doxid-classgeode_1_1_b_rep>`& brep);
	void opengeode_model_api :target:`convert_surface_meshes_into_triangulated_surfaces<doxid-namespacegeode_1a56ebff95719334e0394bf1a20957d59d>`(:ref:`Section<doxid-classgeode_1_1_section>`& section);
	void opengeode_model_api :target:`convert_block_meshes_into_tetrahedral_solids<doxid-namespacegeode_1a50185e6f94e236ed316b6c14fc5f8688>`(:ref:`BRep<doxid-classgeode_1_1_b_rep>`& brep);
	void opengeode_model_api :target:`triangulate_surface_meshes<doxid-namespacegeode_1a250abe68306f3ff924e11ca40db2e0ed>`(:ref:`BRep<doxid-classgeode_1_1_b_rep>`& brep);
	void opengeode_model_api :target:`triangulate_surface_meshes<doxid-namespacegeode_1a0bd6c1db09b0798ca9530ed601b1c445>`(:ref:`Section<doxid-classgeode_1_1_section>`& section);
	std::unique_ptr<EdgedCurve2D> opengeode_model_api :target:`convert_section_into_curve<doxid-namespacegeode_1a4169c588c51660f2599927c68509f2d1>`(const :ref:`Section<doxid-classgeode_1_1_section>`& section);

	template <typename SurfaceType = SurfaceMesh2D>
	std::unique_ptr<SurfaceType> :target:`convert_section_into_surface<doxid-namespacegeode_1a62ff50b24a1547ae88aa435d6e87a7be>`(const :ref:`Section<doxid-classgeode_1_1_section>`& section);

	template <typename SurfaceType = SurfaceMesh2D>
	std::tuple<std::unique_ptr<EdgedCurve2D>, std::unique_ptr<SurfaceType>> :target:`convert_section_into_curve_and_surface<doxid-namespacegeode_1a9821c2ade605d3d6163143d22a5b8c6b>`(const :ref:`Section<doxid-classgeode_1_1_section>`& section);

	std::unique_ptr<EdgedCurve3D> opengeode_model_api :target:`convert_brep_into_curve<doxid-namespacegeode_1adc4d1eb9312a9b88a5ae9985a568a4bb>`(const :ref:`BRep<doxid-classgeode_1_1_b_rep>`& brep);

	template <typename SurfaceType = SurfaceMesh3D>
	std::unique_ptr<SurfaceType> :target:`convert_brep_into_surface<doxid-namespacegeode_1a768625f254e1db6d39cf81abb492bbd6>`(const :ref:`BRep<doxid-classgeode_1_1_b_rep>`& brep);

	template <typename SolidType = SolidMesh3D>
	std::unique_ptr<SolidType> :target:`convert_brep_into_solid<doxid-namespacegeode_1af91913455eac5d7e8c7f775842b7a22f>`(const :ref:`BRep<doxid-classgeode_1_1_b_rep>`& brep);

	template <typename SurfaceType = SurfaceMesh3D>
	std::tuple<std::unique_ptr<EdgedCurve3D>, std::unique_ptr<SurfaceType>> :target:`convert_brep_into_curve_and_surface<doxid-namespacegeode_1adde8715193b38d3f9840b4595a6ce0d1>`(const :ref:`BRep<doxid-classgeode_1_1_b_rep>`& brep);

	template <typename SurfaceType = SurfaceMesh3D, typename SolidType = SolidMesh3D>
	std::tuple<std::unique_ptr<SurfaceType>, std::unique_ptr<SolidType>> :target:`convert_brep_into_surface_and_solid<doxid-namespacegeode_1ab1bb8b480fcc5ac4a1f1c90cd304e1c3>`(const :ref:`BRep<doxid-classgeode_1_1_b_rep>`& brep);

	template <typename SurfaceType = SurfaceMesh3D, typename SolidType = SolidMesh3D>
	std::tuple<std::unique_ptr<EdgedCurve3D>, std::unique_ptr<SurfaceType>, std::unique_ptr<SolidType>> :target:`convert_brep_into_curve_and_surface_and_solid<doxid-namespacegeode_1a8770ad336e271b27011b7d3a2e48a052>`(const :ref:`BRep<doxid-classgeode_1_1_b_rep>`& brep);

	void opengeode_model_api :target:`filter_brep_components_with_regards_to_blocks<doxid-namespacegeode_1a53b909cb9eddd023eb488546551e1e6c>`(:ref:`BRep<doxid-classgeode_1_1_b_rep>`& brep);
	void opengeode_model_api :target:`filter_section_components_with_regards_to_surfaces<doxid-namespacegeode_1acfea5e8ddbea49332a7b5861ef8d6d23>`(:ref:`Section<doxid-classgeode_1_1_section>`& section);
	:target:`ALIAS_3D<doxid-namespacegeode_1a4efa1c27af37ca80b792b5290f406968>`(:ref:`Line<doxid-classgeode_1_1_line>`);

	:ref:`SortedSurfaces<doxid-structgeode_1_1_sorted_surfaces>` opengeode_model_api :target:`surface_radial_sort<doxid-namespacegeode_1aa649f1f8bc78ca4f92490f706388f0f8>`(
		const :ref:`BRep<doxid-classgeode_1_1_b_rep>`& brep,
		const Line3D& line
		);

	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a6454289fb6bd960ae468b483e350c107>`(:ref:`Blocks<doxid-classgeode_1_1_blocks>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a829aef1a1c5495a494fc2fc55b4922c3>`(:ref:`BlocksBuilder<doxid-classgeode_1_1_blocks_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a8df2fe4dbae5eba91b79d7ae631ec4d4>`(:ref:`Corner<doxid-classgeode_1_1_corner>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a1556e82ba6f8ca420842d36c71b753c8>`(:ref:`Corners<doxid-classgeode_1_1_corners>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1afe2cb7fe1eafd07074f05210001c506e>`(:ref:`PointSetBuilder<doxid-classgeode_1_1_point_set_builder>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a477e2e30c5e9a2612031cad57d21a71e>`(:ref:`CornersBuilder<doxid-classgeode_1_1_corners_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a08c813e4a0386ec5defa48f29b3b8be8>`(:ref:`Lines<doxid-classgeode_1_1_lines>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a49256c599e3b6c2e13b5bbeb6f93e946>`(:ref:`LinesBuilder<doxid-classgeode_1_1_lines_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1adfe06b449c29c0b866287265480983b6>`(:ref:`ModelBoundary<doxid-classgeode_1_1_model_boundary>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a06fb4ff70ca4bc8bfc1d3bbbbafe4c41>`(:ref:`ModelBoundaries<doxid-classgeode_1_1_model_boundaries>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a4ef99e73252b7698d7a36d245e58fdb7>`(:ref:`ModelBoundariesBuilder<doxid-classgeode_1_1_model_boundaries_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a701cd07c3aa14dbd1eb555c6d9609877>`(:ref:`Surfaces<doxid-classgeode_1_1_surfaces>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a23936b5eccb3419e0e600463dd61697b>`(:ref:`SurfacesBuilder<doxid-classgeode_1_1_surfaces_builder>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a8eef40e70c015b73c734a579c3194c6c>`(:ref:`Component<doxid-classgeode_1_1_component>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1ae03f5815dfc1dad309f8455049f6d8bb>`(:ref:`Component<doxid-classgeode_1_1_component>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1ada18ea486a897882e87a2f0668b8f076>`(:ref:`Corner<doxid-classgeode_1_1_corner>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a38876b60f9fe8dfc966683d13dd02067>`(:ref:`ModelBoundary<doxid-classgeode_1_1_model_boundary>`);
	void opengeode_model_api :ref:`register_model_serialize_pcontext<doxid-namespacegeode_1af2e947f37b4bf38da42682b7326b643e>`(:ref:`PContext<doxid-namespacegeode_1a79da04720a9926e6212751b7e0d5b6c7>`& context);
	void opengeode_model_api :ref:`register_model_deserialize_pcontext<doxid-namespacegeode_1a3a37e49676aa52fa069edf58ad2e0c3b>`(:ref:`PContext<doxid-namespacegeode_1a79da04720a9926e6212751b7e0d5b6c7>`& context);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1af4e185edc44981509c48c4d2ea82153d>`(:ref:`BlocksBuilder<doxid-classgeode_1_1_blocks_builder>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1a5091a3b4d8e4a11f530289e855f498b3>`(:ref:`Blocks<doxid-classgeode_1_1_blocks>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1abfa53b34466a1f46037ea954d5eb6170>`(:ref:`CornersBuilder<doxid-classgeode_1_1_corners_builder>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1ae840773a184f7856567f01b5ebc29853>`(:ref:`Corners<doxid-classgeode_1_1_corners>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a3bf689c222e130aa604ba0b9ae464e0c>`(:ref:`LinesBuilder<doxid-classgeode_1_1_lines_builder>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1aedf065b7d3222c843f7eafb329b45dec>`(:ref:`Lines<doxid-classgeode_1_1_lines>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a5eafa9e637165289908aba4a9e0d0045>`(:ref:`ModelBoundariesBuilder<doxid-classgeode_1_1_model_boundaries_builder>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1a1536e0a40ff424ce42b28d217d49461b>`(:ref:`ModelBoundaries<doxid-classgeode_1_1_model_boundaries>`);
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1ae158570ed0cd81daf9e7241e6b16ba29>`(:ref:`SurfacesBuilder<doxid-classgeode_1_1_surfaces_builder>`);
	:target:`ALIAS_2D_AND_3D<doxid-namespacegeode_1ac13224561e8b05e61b8dd0a988d90270>`(:ref:`Surfaces<doxid-classgeode_1_1_surfaces>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1a00d59edb267adf404ca6e1ee957187be>`(:ref:`Corner<doxid-classgeode_1_1_corner>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1ac3422b630458dde4bc69498508c56e4e>`(:ref:`EdgedCurve<doxid-classgeode_1_1_edged_curve>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1a3f3c5cdeee9a9389ffd9f740f987e982>`(:ref:`PointSet<doxid-classgeode_1_1_point_set>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1ad7f92bfbd6bbf7f00bda29135ac01367>`(:ref:`ModelBoundary<doxid-classgeode_1_1_model_boundary>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1a5f0825f02564723bd52f856a1ae100c9>`(:ref:`Surface<doxid-classgeode_1_1_surface>`);
	:target:`ALIAS_2D<doxid-namespacegeode_1a5cfa2b7765eb0c1e52445038d29a7317>`(:ref:`Corner<doxid-classgeode_1_1_corner>`);
	:target:`ALIAS_2D<doxid-namespacegeode_1aae4bea6f137a47558d5d46c1f90525b8>`(:ref:`EdgedCurve<doxid-classgeode_1_1_edged_curve>`);
	:target:`ALIAS_2D<doxid-namespacegeode_1a191f5017151d819329bd22601e529e17>`(:ref:`PointSet<doxid-classgeode_1_1_point_set>`);
	:target:`ALIAS_2D<doxid-namespacegeode_1a85b04296d2e759083127ceaf2a792264>`(:ref:`Line<doxid-classgeode_1_1_line>`);
	:target:`ALIAS_2D<doxid-namespacegeode_1a764b37be83e42f8680a9cb1c0ce3e2b1>`(:ref:`ModelBoundary<doxid-classgeode_1_1_model_boundary>`);
	:target:`ALIAS_2D<doxid-namespacegeode_1a96755a4b4b643ca905a8a29e0a07543b>`(:ref:`Surface<doxid-classgeode_1_1_surface>`);
	:target:`ALIAS_2D<doxid-namespacegeode_1a775f43c93e557302fbaa359aa0af2f19>`(:ref:`SurfaceMesh<doxid-classgeode_1_1_surface_mesh>`);
	:target:`ALIAS_3D<doxid-namespacegeode_1a8a382e1e4248b0928d1850b52116b05c>`(:ref:`BoundingBox<doxid-classgeode_1_1_bounding_box>`);
	:target:`ALIAS_2D<doxid-namespacegeode_1a138f53359f6b0ed97828265b627ab688>`(:ref:`BoundingBox<doxid-classgeode_1_1_bounding_box>`);
	:ref:`BRep<doxid-classgeode_1_1_b_rep>` opengeode_model_api :ref:`load_brep<doxid-namespacegeode_1aa6aae08635ec147db4348b2aa375b46d>`(absl::string_view filename);
	void opengeode_model_api :ref:`save_brep<doxid-namespacegeode_1a5740f1154ca1ae97b38be95bdf0caa3c>`(const :ref:`BRep<doxid-classgeode_1_1_b_rep>`& brep, absl::string_view filename);
	:ref:`Section<doxid-classgeode_1_1_section>` opengeode_model_api :ref:`load_section<doxid-namespacegeode_1a14fe29f519ee8cf81b5b9e7f651c203e>`(absl::string_view filename);

	void opengeode_model_api :ref:`save_section<doxid-namespacegeode_1ae92f24302459ce1748811758a5f24f96>`(
		const :ref:`Section<doxid-classgeode_1_1_section>`& section,
		absl::string_view filename
		);

	} // namespace geode
.. _details-namespacegeode:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~



Typedefs
--------

.. index:: pair: typedef; MeshImpl
.. _doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef :ref:`NamedType<doxid-classgeode_1_1_named_type>`<std::string, :ref:`MeshImplTag<doxid-structgeode_1_1_mesh_impl_tag>`> MeshImpl

Strong type for a mesh data structure

.. index:: pair: typedef; MeshType
.. _doxid-namespacegeode_1a4a0dbbac82ed73238f90bb9b2e51db53:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef :ref:`NamedType<doxid-classgeode_1_1_named_type>`<std::string, :ref:`MeshTypeTag<doxid-structgeode_1_1_mesh_type_tag>`> MeshType

Strong type for a mesh type

Global Variables
----------------

.. index:: pair: variable; NO_ID
.. _doxid-namespacegeode_1a454319bfde41726e71f499e4e16322b3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static constexpr :ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` NO_ID = :ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`(-1)

Value used for a invalid index.

Global Functions
----------------

.. index:: pair: function; geode_lippincott
.. _doxid-namespacegeode_1a0d6f934054bb20a7b43ff330dca7d363:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int opengeode_basic_api geode_lippincott()

Try to catch several exception types. Always return 1.

.. index:: pair: function; register_basic_serialize_pcontext
.. _doxid-namespacegeode_1abf3517d752f9c05bbb40e02825f61243:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void opengeode_basic_api register_basic_serialize_pcontext(:ref:`PContext<doxid-namespacegeode_1a79da04720a9926e6212751b7e0d5b6c7>`& context)

Register all the information needed by Bitsery to serialize the objects in the basic library. The context can be used only once per archive.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- context

		- The context where to register this information.

.. index:: pair: function; register_basic_deserialize_pcontext
.. _doxid-namespacegeode_1a4971b040e31d95abe4053f71d315b4d7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void opengeode_basic_api register_basic_deserialize_pcontext(:ref:`PContext<doxid-namespacegeode_1a79da04720a9926e6212751b7e0d5b6c7>`& context)

Register all the information needed by Bitsery to deserialize the objects in the basic library. The context can be used only once per archive.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- context

		- The context where to register this information.

.. index:: pair: function; tetrahedron_barycentric_coordinates
.. _doxid-namespacegeode_1aaf9ea7d9541c84295cd5035b215d03d0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::array<double, 4> opengeode_geometry_api tetrahedron_barycentric_coordinates(
		const Point3D& point,
		const :ref:`Tetrahedron<doxid-classgeode_1_1_tetrahedron>`& tetra
		)

Compute the barycentric coordinates of a point with regards to a tetra.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- point

		- the query point.

	*
		- tetra

		- the tetra.



.. rubric:: Returns:

an array containing the parametric coordinates corresponding to the tetra vertices.

.. index:: pair: function; triangle_barycentric_coordinates
.. _doxid-namespacegeode_1ac777b102ddf86dd83a97f0df569aa315:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::array<double, 3> triangle_barycentric_coordinates(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`Triangle<doxid-classgeode_1_1_triangle>`<dimension>& triangle
		)

Compute barycentric coordinates of a point with regards to a triangle.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- point

		- the query point.

	*
		- triangle

		- the triangle.



.. rubric:: Returns:

an array containing the parametric coordinates corresponding to the triangle vertices.

.. index:: pair: function; segment_barycentric_coordinates
.. _doxid-namespacegeode_1a31a7b32940d4db933c477fecec72d7c3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::array<double, 2> segment_barycentric_coordinates(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`Segment<doxid-classgeode_1_1_segment>`<dimension>& segment
		)

Compute barycentric coordinates of a point with regards to a segment.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- point

		- the query point.

	*
		- segment

		- the segment.



.. rubric:: Returns:

an array containing the parametric coordinates corresponding to the segment vertices.

.. index:: pair: function; register_geometry_serialize_pcontext
.. _doxid-namespacegeode_1a3a8183171407a05faea9c1edfcc12d6f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void opengeode_geometry_api register_geometry_serialize_pcontext(:ref:`PContext<doxid-namespacegeode_1a79da04720a9926e6212751b7e0d5b6c7>`& context)

Register all the information needed by Bitsery to serialize the objects in the geometry library. The context can be used only once per archive.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- context

		- The context where to register this information.

.. index:: pair: function; register_geometry_deserialize_pcontext
.. _doxid-namespacegeode_1a21eee3ab8ab2f094ad300c9755cd6a94:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void opengeode_geometry_api register_geometry_deserialize_pcontext(:ref:`PContext<doxid-namespacegeode_1a79da04720a9926e6212751b7e0d5b6c7>`& context)

Register all the information needed by Bitsery to deserialize the objects in the geometry library. The context can be used only once per archive.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- context

		- The context where to register this information.

.. index:: pair: function; point_point_distance
.. _doxid-namespacegeode_1a4580257fb6522eceb29536b03fb1c21a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	double point_point_distance(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point0,
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point1
		)

Compute the Euclidean distance between a two points

.. index:: pair: function; point_segment_distance
.. _doxid-namespacegeode_1aa93b0c934f3fb83dd110e44bedfd5a30:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::tuple<double, :ref:`Point<doxid-classgeode_1_1_point>`<dimension>> point_segment_distance(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`Segment<doxid-classgeode_1_1_segment>`<dimension>& segment
		)

Compute the smallest distance between a point and a segment



.. rubric:: Returns:

a tuple containing:

* the smallest distance.

* the closest point on the segment.

.. index:: pair: function; segment_segment_distance
.. _doxid-namespacegeode_1a74f738f4982f62937cd9640b8e5236f0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::tuple<double, :ref:`Point<doxid-classgeode_1_1_point>`<dimension>, :ref:`Point<doxid-classgeode_1_1_point>`<dimension>> segment_segment_distance(
		const :ref:`Segment<doxid-classgeode_1_1_segment>`<dimension>& segment0,
		const :ref:`Segment<doxid-classgeode_1_1_segment>`<dimension>& segment1
		)

Compute the smallest distance between two segments



.. rubric:: Returns:

a tuple containing:

* the smallest distance.

* the closest point on the first segment.

* the closest point on the second segment.

.. index:: pair: function; point_line_distance
.. _doxid-namespacegeode_1a0152cc4808d761c36b5a7f3d95a85644:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::tuple<double, :ref:`Point<doxid-classgeode_1_1_point>`<dimension>> point_line_distance(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`InfiniteLine<doxid-classgeode_1_1_infinite_line>`<dimension>& line
		)

Compute the smallest distance between a point and an infinite line



.. rubric:: Returns:

a tuple containing:

* the smallest distance.

* the closest point on the line.

.. index:: pair: function; point_line_signed_distance
.. _doxid-namespacegeode_1a75d0260bbbaced72944408a98c21b06f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::tuple<double, Point2D> opengeode_geometry_api point_line_signed_distance(
		const Point2D& point,
		const InfiniteLine2D& line
		)

Compute the smallest signed distance between a point and an infinite line in 2D



.. rubric:: Returns:

a tuple containing:

* the smallest signed distance.

* the closest point on the line.

.. index:: pair: function; point_triangle_distance
.. _doxid-namespacegeode_1a330049f15e84cc2f0d868038057142ec:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::tuple<double, :ref:`Point<doxid-classgeode_1_1_point>`<dimension>> point_triangle_distance(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`Triangle<doxid-classgeode_1_1_triangle>`<dimension>& triangle
		)

Compute the smallest distance between a point and a triangle



.. rubric:: Returns:

a tuple containing:

* the smallest distance.

* the closest point on the triangle.

.. index:: pair: function; point_triangle_signed_distance
.. _doxid-namespacegeode_1adde4afe0dd3cc2809cdd33d777602d21:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::tuple<double, Point3D> point_triangle_signed_distance(
		const Point3D& point,
		const Triangle3D& triangle
		)

Compute the signed distance between a point and a triangle the sign is given by the triangle normal (positive if in the same plane).



.. rubric:: Returns:

a tuple containing:

* the smallest distance.

* the closest point on the triangle.

.. index:: pair: function; point_tetrahedron_distance
.. _doxid-namespacegeode_1af009487e469e3c804555c5542334205e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::tuple<double, Point3D> opengeode_geometry_api point_tetrahedron_distance(
		const Point3D& point,
		const :ref:`Tetrahedron<doxid-classgeode_1_1_tetrahedron>`& tetra
		)

Compute the distance between a point and a tetrahedron



.. rubric:: Returns:

a tuple containing:

* the smallest distance.

* the nearest point on the tetrahedron.

.. index:: pair: function; point_plane_distance
.. _doxid-namespacegeode_1a51e4913dfa9e0460508a63d03bee9241:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::tuple<double, Point3D> opengeode_geometry_api point_plane_distance(
		const Point3D& point,
		const :ref:`Plane<doxid-classgeode_1_1_plane>`& plane
		)

Compute the distance between a point and a plane



.. rubric:: Returns:

a tuple containing:

* the smallest distance.

* the nearest point on the plane.

.. index:: pair: function; point_plane_signed_distance
.. _doxid-namespacegeode_1a4e3aa1f40ed1f1c1d11dd39240155949:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::tuple<double, Point3D> opengeode_geometry_api point_plane_signed_distance(
		const Point3D& point,
		const :ref:`Plane<doxid-classgeode_1_1_plane>`& plane
		)

Compute the signed distance between a point and a plane



.. rubric:: Returns:

a tuple containing:

* the signed distance (sign is given by the plane normal direction).

* the nearest point on the plane.

.. index:: pair: function; point_sphere_distance
.. _doxid-namespacegeode_1a0f501c5dbc2326ec774ef23df0304192:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::tuple<double, :ref:`Point<doxid-classgeode_1_1_point>`<dimension>> point_sphere_distance(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`Sphere<doxid-classgeode_1_1_sphere>`<dimension>& sphere
		)

Compute the smallest distance between a point and a sphere



.. rubric:: Returns:

a tuple containing:

* the smallest distance.

* the closest point on the sphere.

.. index:: pair: function; point_sphere_signed_distance
.. _doxid-namespacegeode_1a8c3f73b578501a0fea39ac5ff90c0ab6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::tuple<double, :ref:`Point<doxid-classgeode_1_1_point>`<dimension>> point_sphere_signed_distance(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`Sphere<doxid-classgeode_1_1_sphere>`<dimension>& sphere
		)

Compute the smallest signed distance between a point and a sphere the sign is positive outside the sphere, negative inside.



.. rubric:: Returns:

a tuple containing:

* the smallest signed distance.

* the closest point on the sphere.

.. index:: pair: function; point_ball_distance
.. _doxid-namespacegeode_1a669070168188e8e7388c893431858478:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::tuple<double, :ref:`Point<doxid-classgeode_1_1_point>`<dimension>> point_ball_distance(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`Ball<doxid-namespacegeode_1a5f85211114c18f5ec987940b9f2aac24>`<dimension>& sphere
		)

Compute the smallest distance between a point and a ball Result is always positive or null. If point is inside the ball, the returned distance is 0.



.. rubric:: Returns:

a tuple containing:

* the smallest distance.

* the closest point on the ball.

.. index:: pair: function; point_circle_distance
.. _doxid-namespacegeode_1abf9b58beecf7ff892fdf6d61abc6b159:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::tuple<double, Point3D> opengeode_geometry_api point_circle_distance(
		const Point3D& point,
		const :ref:`Circle<doxid-classgeode_1_1_circle>`& circle
		)

Compute the smallest distance between a point and a circle



.. rubric:: Returns:

a tuple containing:

* the smallest distance.

* the closest point on the circle.

.. index:: pair: function; point_circle_signed_distance
.. _doxid-namespacegeode_1a886d2b7f7076e9913b4e357e1f1f6dc2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::tuple<double, Point3D> opengeode_geometry_api point_circle_signed_distance(
		const Point3D& point,
		const :ref:`Circle<doxid-classgeode_1_1_circle>`& circle
		)

Compute the smallest signed distance between a point and a circle the sign is positive outside the circle, negative inside.



.. rubric:: Returns:

a tuple containing:

* the smallest signed distance.

* the closest point on the circle.

.. index:: pair: function; point_disk_distance
.. _doxid-namespacegeode_1a8f557d275dd00fc33ece3bd7b18d0b0b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::tuple<double, Point3D> opengeode_geometry_api point_disk_distance(
		const Point3D& point,
		const :ref:`Disk<doxid-namespacegeode_1adc63fa26776ccf0a89a29753d625d51a>`& disk
		)

Compute the smallest distance between a point and a disk Result is always positive or null. If point is inside the disk, the returned distance is 0.



.. rubric:: Returns:

a tuple containing:

* the smallest distance.

* the closest point on the disk.

.. index:: pair: function; line_plane_intersection
.. _doxid-namespacegeode_1aee987f4530e82f40e183d62793329588:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`IntersectionResult<doxid-structgeode_1_1_intersection_result>`<Point3D> opengeode_geometry_api line_plane_intersection(
		const InfiniteLine3D& line,
		const :ref:`Plane<doxid-classgeode_1_1_plane>`& plane
		)

Compute the intersection between a plane and an infinite line



.. rubric:: Returns:

an optional of the intersection.

.. index:: pair: function; line_sphere_intersection
.. _doxid-namespacegeode_1aa1614736eca38ee7ade9cf48c445a838:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	:ref:`IntersectionResult<doxid-structgeode_1_1_intersection_result>`<absl::InlinedVector<:ref:`Point<doxid-classgeode_1_1_point>`<dimension>, 2>> line_sphere_intersection(
		const :ref:`InfiniteLine<doxid-classgeode_1_1_infinite_line>`<dimension>& line,
		const :ref:`Sphere<doxid-classgeode_1_1_sphere>`<dimension>& sphere
		)

Compute the intersection(s) between a sphere and an infinite line



.. rubric:: Returns:

an optional of the intersection points.

.. index:: pair: function; segment_sphere_intersection
.. _doxid-namespacegeode_1a5d4565bc53220aad033ce4b621bedbcc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	:ref:`IntersectionResult<doxid-structgeode_1_1_intersection_result>`<absl::InlinedVector<:ref:`Point<doxid-classgeode_1_1_point>`<dimension>, 2>> segment_sphere_intersection(
		const :ref:`Segment<doxid-classgeode_1_1_segment>`<dimension>& segment,
		const :ref:`Sphere<doxid-classgeode_1_1_sphere>`<dimension>& sphere
		)

Compute the intersection(s) between a (n-1)-sphere and a segment in n-dimension space.



.. rubric:: Returns:

an optional of the intersection points.

.. index:: pair: function; segment_plane_intersection
.. _doxid-namespacegeode_1a87e9a7624c8ef017f1ab5b15233098be:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`IntersectionResult<doxid-structgeode_1_1_intersection_result>`<Point3D> opengeode_geometry_api segment_plane_intersection(
		const Segment3D& segment,
		const :ref:`Plane<doxid-classgeode_1_1_plane>`& plane
		)

Compute the intersection between a plane and a segment if the segment is included in the plane nothing is returned



.. rubric:: Returns:

an optional of the intersection point.

.. index:: pair: function; segment_triangle_intersection
.. _doxid-namespacegeode_1ab75f1881bceca236f77e47d62b9dcc01:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`IntersectionResult<doxid-structgeode_1_1_intersection_result>`<Point3D> opengeode_geometry_api segment_triangle_intersection(
		const Segment3D& segment,
		const Triangle3D& triangle
		)

Compute the intersection of a segment and a triangle if the segment is included in the triangle plane nothing is returned



.. rubric:: Returns:

an optional of the intersection point.

.. index:: pair: function; line_triangle_intersection
.. _doxid-namespacegeode_1a553db6531b4df84999c7160b5a161a40:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`IntersectionResult<doxid-structgeode_1_1_intersection_result>`<Point3D> opengeode_geometry_api line_triangle_intersection(
		const InfiniteLine3D& line,
		const Triangle3D& triangle
		)

Compute the intersection of a line and a triangle if the segment is included in the triangle plane nothing is returned



.. rubric:: Returns:

an optional of the intersection point.

.. index:: pair: function; line_line_intersection
.. _doxid-namespacegeode_1a2e36b8d57c8b213b02396aec98e90c5e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`IntersectionResult<doxid-structgeode_1_1_intersection_result>`<Point2D> opengeode_geometry_api line_line_intersection(
		const InfiniteLine2D& line0,
		const InfiniteLine2D& line1
		)

Compute the intersection between two infinite lines



.. rubric:: Returns:

an optional of the intersection point.

.. index:: pair: function; segment_segment_intersection
.. _doxid-namespacegeode_1af9801e4f75f5a7e32528a6102ddbf456:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`IntersectionResult<doxid-structgeode_1_1_intersection_result>`<Point2D> opengeode_geometry_api segment_segment_intersection(
		const Segment2D& segment0,
		const Segment2D& segment1
		)

Compute the intersection between two segments



.. rubric:: Returns:

an optional of the intersection point.

.. index:: pair: function; segment_line_intersection
.. _doxid-namespacegeode_1a6f5a9e0a2767316f0df3b282d12bcb34:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`IntersectionResult<doxid-structgeode_1_1_intersection_result>`<Point2D> opengeode_geometry_api segment_line_intersection(
		const Segment2D& segment,
		const InfiniteLine2D& line
		)

Compute the intersection between a segment and an infinite line



.. rubric:: Returns:

an optional of the intersection point.

.. index:: pair: function; segment_segment_intersection_detection
.. _doxid-namespacegeode_1a460dcb7ba62a6607f4d51a9619d0ba2a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`SegmentSegmentIntersection<doxid-namespacegeode_1ad08f71e1c9db568dd62df0bf066813b1>` opengeode_geometry_api segment_segment_intersection_detection(
		const Segment2D& segment0,
		const Segment2D& segment1
		)

Detect if there is an intersection between two 2D segments



.. rubric:: Returns:

the position of the intersection on the two segments. Returns outside-outside if there is no intersection or parallel-pallel if all points are colinear

.. index:: pair: function; colinear_segment_segment_intersection_detection
.. _doxid-namespacegeode_1a507fd4800d9a28ff1575e03903976c32:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`SegmentSegmentIntersection<doxid-namespacegeode_1ad08f71e1c9db568dd62df0bf066813b1>` opengeode_geometry_api colinear_segment_segment_intersection_detection(
		const Segment2D& segment0,
		const Segment2D& segment1
		)

Detect the configuration between two 2D colinear segments



.. rubric:: Returns:

the position of the intersection on the two segments. Returns parallel-pallel if there is segment overlap

.. index:: pair: function; segment_line_intersection_detection
.. _doxid-namespacegeode_1ab9b4edaece4e32bed2821b6a5d2c26f3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Position<doxid-namespacegeode_1a316ec3486ec794c86021f0fea71f54a7>` opengeode_geometry_api segment_line_intersection_detection(
		const Segment2D& segment,
		const InfiniteLine2D& line
		)

Detect if there is an intersection between a line and a segment



.. rubric:: Returns:

the position of the intersection on the segment. Returns outside if there is no intersection or all points are colinear

.. index:: pair: function; line_triangle_intersection_detection
.. _doxid-namespacegeode_1a0a53a86927336a530d5b109194cbc3bd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Position<doxid-namespacegeode_1a316ec3486ec794c86021f0fea71f54a7>` opengeode_geometry_api line_triangle_intersection_detection(
		const InfiniteLine3D& line,
		const Triangle3D& triangle
		)

Detect if there is an intersection between a line and a triangle



.. rubric:: Returns:

the position of the intersection on the triangle. Returns outside if there is no intersection or the line is coplanar with the triangle

.. index:: pair: function; segment_triangle_intersection_detection
.. _doxid-namespacegeode_1a6afb8c58f82cb8c5620f7b96253f2cab:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`SegmentTriangleIntersection<doxid-namespacegeode_1acbc58086feed61355d4235a09e6e6b80>` opengeode_geometry_api segment_triangle_intersection_detection(
		const Segment3D& segment,
		const Triangle3D& triangle
		)

Detect if there is an intersection between a segment and a triangle



.. rubric:: Returns:

the position of the intersection on the segment and on the triangle. Returns outside if there is no intersection or the segment is coplanar with the triangle

.. index:: pair: function; segment_plane_intersection_detection
.. _doxid-namespacegeode_1a464461ff0fdeb761109f414f5c1685cd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Position<doxid-namespacegeode_1a316ec3486ec794c86021f0fea71f54a7>` opengeode_geometry_api segment_plane_intersection_detection(
		const Segment3D& segment,
		const :ref:`Plane<doxid-classgeode_1_1_plane>`& plane
		)

Detect if there is an intersection between a segment and a plane



.. rubric:: Returns:

the position of the intersection on the segment. Returns outside if there is no intersection or the segment is coplanar with the plane

.. index:: pair: function; triangle_area
.. _doxid-namespacegeode_1ac9bae29e562e6285b6377475738e08bc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	double triangle_area(const :ref:`Triangle<doxid-classgeode_1_1_triangle>`<dimension>& triangle)

Compute the (positive) area of a triangle



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- triangle

		- :ref:`Triangle <doxid-classgeode_1_1_triangle>` to compute area

.. index:: pair: function; triangle_signed_area
.. _doxid-namespacegeode_1a7bcf51b8e17c92dc052b3c62c8abd1ab:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	double opengeode_geometry_api triangle_signed_area(const Triangle2D& triangle)

Compute the signed area of a triangle



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- triangle

		- :ref:`Triangle <doxid-classgeode_1_1_triangle>` to compute area returned area is positive if the triangle vertices are ordered counter-clockwise, negative if clockwise.

.. index:: pair: function; triangle_signed_area
.. _doxid-namespacegeode_1a0c0bcc660d0424ace824fa79dd83139f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	double opengeode_geometry_api triangle_signed_area(
		const Triangle3D& triangle,
		const Vector3D& direction
		)

Compute the signed area of a 3D triangle



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- triangle

		- :ref:`Triangle <doxid-classgeode_1_1_triangle>` to compute area

	*
		- direction

		- Direction used to determined the sign of returned area: positive if the triangle normal is in the same direction than direction, negative if the triangle normal is in the opposition direction.

.. index:: pair: function; tetrahedron_signed_volume
.. _doxid-namespacegeode_1a404927c1ae97f58099aaa973eccf6632:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	double opengeode_geometry_api tetrahedron_signed_volume(const :ref:`Tetrahedron<doxid-classgeode_1_1_tetrahedron>`& tetra)

Compute the signed volume of a tetrahedron

.. index:: pair: function; tetrahedron_volume
.. _doxid-namespacegeode_1a34045fd27d75a59e694a57686e35eaf0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	double opengeode_geometry_api tetrahedron_volume(const :ref:`Tetrahedron<doxid-classgeode_1_1_tetrahedron>`& tetra)

Compute the (positive) volume of a tetrahedron

.. index:: pair: function; perpendicular
.. _doxid-namespacegeode_1abf7d35d6f59c66989de52f35d6c6cae0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Vector2D opengeode_geometry_api perpendicular(const Vector2D& v)

Return a 2D vector perpendicular to the given one

.. index:: pair: function; dot_perpendicular
.. _doxid-namespacegeode_1a86b4ac219780962e02ecaf1becde9633:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	double opengeode_geometry_api dot_perpendicular(
		const Vector2D& v0,
		const Vector2D& v1
		)

Compute the dot product between a 2D vector ``v0`` and another 2D vector perpendicular to ``v1``.

.. index:: pair: function; point_side_to_segment
.. _doxid-namespacegeode_1a9dbc950e6ecafb4bf2d5336e5621e2b5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Side<doxid-namespacegeode_1a0805566e7d9eb8e31ef1d932837fdb1b>` opengeode_geometry_api point_side_to_segment(
		const Point2D& point,
		const Segment2D& segment
		)

Return the point side to a segment.

.. index:: pair: function; point_side_to_line
.. _doxid-namespacegeode_1a7bc64f6f20d2fc038571be279c7a72d7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Side<doxid-namespacegeode_1a0805566e7d9eb8e31ef1d932837fdb1b>` opengeode_geometry_api point_side_to_line(
		const Point2D& point,
		const InfiniteLine2D& line
		)

Return the point side to a line.

.. index:: pair: function; point_side_to_plane
.. _doxid-namespacegeode_1a1328f2ee832d2888551b89a5ce9d1db5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Side<doxid-namespacegeode_1a0805566e7d9eb8e31ef1d932837fdb1b>` opengeode_geometry_api point_side_to_plane(
		const Point3D& point,
		const :ref:`Plane<doxid-classgeode_1_1_plane>`& plane
		)

Return the point side to a plane.

.. index:: pair: function; point_side_to_triangle
.. _doxid-namespacegeode_1a86df49e62eca418b9f4a99666fba60b1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Side<doxid-namespacegeode_1a0805566e7d9eb8e31ef1d932837fdb1b>` opengeode_geometry_api point_side_to_triangle(
		const Point3D& point,
		const Triangle3D& triangle
		)

Return the point side to a 3D triangle.

.. index:: pair: function; point_segment_position
.. _doxid-namespacegeode_1a8e59e9b66e1c5c4167e62abee2b3bf2e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	:ref:`Position<doxid-namespacegeode_1a316ec3486ec794c86021f0fea71f54a7>` point_segment_position(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`Segment<doxid-classgeode_1_1_segment>`<dimension>& segment
		)

Return the position of a point on a segment: inside, outside or on segment vertex.

.. index:: pair: function; point_triangle_position
.. _doxid-namespacegeode_1ada03d7b63f307fc70de42337fd7d681d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	:ref:`Position<doxid-namespacegeode_1a316ec3486ec794c86021f0fea71f54a7>` point_triangle_position(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`Triangle<doxid-classgeode_1_1_triangle>`<dimension>& triangle
		)

Return the position of a point in a triangle: inside, outside, on a triangle vertex or an edge.

.. index:: pair: function; point_tetrahedron_position
.. _doxid-namespacegeode_1ac421783d2a4e52e55fa78d489e98c7df:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Position<doxid-namespacegeode_1a316ec3486ec794c86021f0fea71f54a7>` opengeode_geometry_api point_tetrahedron_position(
		const Point3D& point,
		const :ref:`Tetrahedron<doxid-classgeode_1_1_tetrahedron>`& tetra
		)

Return the position of a point in a tetrahedron: inside, outside, on a tetra vertex, an edge or a facet.

.. index:: pair: function; point_segment_projection
.. _doxid-namespacegeode_1a25b6b03e0454dc3a0c3b7816febec9ca:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	:ref:`Point<doxid-classgeode_1_1_point>`<dimension> point_segment_projection(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`Segment<doxid-classgeode_1_1_segment>`<dimension>& segment
		)

Return the projection of a point on a segment



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- point

		- the point to project

	*
		- segment

		- the segment

.. index:: pair: function; point_line_projection
.. _doxid-namespacegeode_1afb3cdab999cf5c78c24663bdee4d224d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	:ref:`Point<doxid-classgeode_1_1_point>`<dimension> point_line_projection(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`InfiniteLine<doxid-classgeode_1_1_infinite_line>`<dimension>& line
		)

Return the projection of a point on a line



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- point

		- the point to project

	*
		- line

		- the line

.. index:: pair: function; point_triangle_projection
.. _doxid-namespacegeode_1a3a26f982ece1cac2c9a2b7ec4f4667bf:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	:ref:`Point<doxid-classgeode_1_1_point>`<dimension> point_triangle_projection(
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point,
		const :ref:`Triangle<doxid-classgeode_1_1_triangle>`<dimension>& triangle
		)

Return the projection of a point on a triangle



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- point

		- the point to project

	*
		- triangle

		- the triangle

.. index:: pair: function; point_plane_projection
.. _doxid-namespacegeode_1a628b5744673a048807e8e3c71a97863c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Point3D opengeode_geometry_api point_plane_projection(
		const Point3D& point,
		const :ref:`Plane<doxid-classgeode_1_1_plane>`& plane
		)

Return the projection of a point on a plane



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- point

		- the point to project

	*
		- plane

		- the plane

.. index:: pair: function; rotate
.. _doxid-namespacegeode_1a7d29de54b64ca62f8e8b794ae0202f74:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Point3D opengeode_geometry_api rotate(
		const Point3D& point,
		const Vector3D& axis,
		double angle
		)

Rotate a Point3D by an angle around an axis



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- point

		- The point to rotate.

	*
		- axis

		- Axis for the rotation (not null but not necessary normalized).

	*
		- angle

		- Rotation angle expresses in radians.

.. index:: pair: function; tetrahedron_volume_sign
.. _doxid-namespacegeode_1ae8800d3c5c55212cf5ba5891153211c2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Sign<doxid-namespacegeode_1a0805566e7d9eb8e31ef1d932837fdb1b>` opengeode_geometry_api tetrahedron_volume_sign(const :ref:`Tetrahedron<doxid-classgeode_1_1_tetrahedron>`& tetra)

Return the sign of a tetrahedron volume.

.. index:: pair: function; triangle_area_sign
.. _doxid-namespacegeode_1a2d52fe60961fc54438647002602740e4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Sign<doxid-namespacegeode_1a0805566e7d9eb8e31ef1d932837fdb1b>` opengeode_geometry_api triangle_area_sign(const Triangle2D& triangle)

Return the sign of a 2D triangle area.

.. index:: pair: function; triangle_area_sign
.. _doxid-namespacegeode_1a5133c379fc646064c9aeb986d21551a5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Sign<doxid-namespacegeode_1a0805566e7d9eb8e31ef1d932837fdb1b>` opengeode_geometry_api triangle_area_sign(
		const Triangle3D& triangle,
		:ref:`local_index_t<doxid-namespacegeode_1aa4af2b9c3c63eb304286e812ba69a9a9>` axis
		)

Return the sign of a 3D triangle area aligned on X- Y- or Z-axis.

.. index:: pair: function; register_mesh_serialize_pcontext
.. _doxid-namespacegeode_1aa05925dcfcae1d0f42d06f0f9a8dfb8a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void opengeode_mesh_api register_mesh_serialize_pcontext(:ref:`PContext<doxid-namespacegeode_1a79da04720a9926e6212751b7e0d5b6c7>`& context)

Register all the information needed by Bitsery to serialize the objects in the mesh library. The context can be used only once per archive.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- context

		- The context where to register this information.

.. index:: pair: function; register_mesh_deserialize_pcontext
.. _doxid-namespacegeode_1ad554073e01b714099ca0e253bdeee8e3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void opengeode_mesh_api register_mesh_deserialize_pcontext(:ref:`PContext<doxid-namespacegeode_1a79da04720a9926e6212751b7e0d5b6c7>`& context)

Register all the information needed by Bitsery to deserialize the objects in the mesh library. The context can be used only once per archive.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- context

		- The context where to register this information.

.. index:: pair: function; load_edged_curve
.. _doxid-namespacegeode_1aa7842b652ce91298cb5af68de7348148:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::unique_ptr<:ref:`EdgedCurve<doxid-classgeode_1_1_edged_curve>`<dimension>> load_edged_curve(
		const :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`& impl,
		absl::string_view filename
		)

API function for loading an :ref:`EdgedCurve <doxid-classgeode_1_1_edged_curve>`. The adequate loader is called depending on the filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- impl

		- Data structure implementation.

	*
		- filename

		- Path to the file to load.

.. index:: pair: function; load_edged_curve
.. _doxid-namespacegeode_1ae0ac6f74f5a4eca322a13409eed48561:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::unique_ptr<:ref:`EdgedCurve<doxid-classgeode_1_1_edged_curve>`<dimension>> load_edged_curve(absl::string_view filename)

API function for loading an :ref:`EdgedCurve <doxid-classgeode_1_1_edged_curve>`. The adequate loader is called depending on the filename extension. Default data structure implémentation is used.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- filename

		- Path to the file to load.

.. index:: pair: function; save_edged_curve
.. _doxid-namespacegeode_1aba7ac11907d0a58ea7fc245965cd8b63:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	void save_edged_curve(
		const :ref:`EdgedCurve<doxid-classgeode_1_1_edged_curve>`<dimension>& edged_curve,
		absl::string_view filename
		)

API function for saving a :ref:`EdgedCurve <doxid-classgeode_1_1_edged_curve>`. The adequate saver is called depending on the given filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- edged_curve

		- :ref:`EdgedCurve <doxid-classgeode_1_1_edged_curve>` to save.

	*
		- filename

		- Path to the file where save the :ref:`EdgedCurve <doxid-classgeode_1_1_edged_curve>`.

.. index:: pair: function; load_graph
.. _doxid-namespacegeode_1aade7384ff1a5237cd20ad03e7bb36db3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::unique_ptr<:ref:`Graph<doxid-classgeode_1_1_graph>`> opengeode_mesh_api load_graph(
		const :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`& impl,
		absl::string_view filename
		)

API function for loading an :ref:`Graph <doxid-classgeode_1_1_graph>`. The adequate loader is called depending on the filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- impl

		- Data structure implementation.

	*
		- filename

		- Path to the file to load.

.. index:: pair: function; load_graph
.. _doxid-namespacegeode_1a90ea541741fdf3169e5e67c31b51648f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::unique_ptr<:ref:`Graph<doxid-classgeode_1_1_graph>`> opengeode_mesh_api load_graph(absl::string_view filename)

API function for loading an :ref:`Graph <doxid-classgeode_1_1_graph>`. The adequate loader is called depending on the filename extension. Default data structure implémentation is used.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- filename

		- Path to the file to load.

.. index:: pair: function; save_graph
.. _doxid-namespacegeode_1a7bfdf4be37e5f3d64db9c16d8a4c5a23:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void opengeode_mesh_api save_graph(
		const :ref:`Graph<doxid-classgeode_1_1_graph>`& graph,
		absl::string_view filename
		)

API function for saving a :ref:`Graph <doxid-classgeode_1_1_graph>`. The adequate saver is called depending on the given filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- graph

		- :ref:`Graph <doxid-classgeode_1_1_graph>` to save.

	*
		- filename

		- Path to the file where save the :ref:`Graph <doxid-classgeode_1_1_graph>`.

.. index:: pair: function; load_hybrid_solid
.. _doxid-namespacegeode_1a88d3b49d086cb5cbff847101dbbd98c1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::unique_ptr<:ref:`HybridSolid<doxid-classgeode_1_1_hybrid_solid>`<dimension>> load_hybrid_solid(
		const :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`& impl,
		absl::string_view filename
		)

API function for loading an :ref:`HybridSolid <doxid-classgeode_1_1_hybrid_solid>`. The adequate loader is called depending on the filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- impl

		- Data structure implementation.

	*
		- filename

		- Path to the file to load.

.. index:: pair: function; load_hybrid_solid
.. _doxid-namespacegeode_1a6be4f5843d0a729a7385d523471ed6b9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::unique_ptr<:ref:`HybridSolid<doxid-classgeode_1_1_hybrid_solid>`<dimension>> load_hybrid_solid(absl::string_view filename)

API function for loading an :ref:`HybridSolid <doxid-classgeode_1_1_hybrid_solid>`. The adequate loader is called depending on the filename extension. Default data structure implémentation is used.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- filename

		- Path to the file to load.

.. index:: pair: function; save_hybrid_solid
.. _doxid-namespacegeode_1af75d6f3d6e6dae0feef877910944ea74:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	void save_hybrid_solid(
		const :ref:`HybridSolid<doxid-classgeode_1_1_hybrid_solid>`<dimension>& hybrid_solid,
		absl::string_view filename
		)

API function for saving a :ref:`HybridSolid <doxid-classgeode_1_1_hybrid_solid>`. The adequate saver is called depending on the given filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- hybrid_solid

		- :ref:`HybridSolid <doxid-classgeode_1_1_hybrid_solid>` to save.

	*
		- filename

		- Path to the file where save the :ref:`HybridSolid <doxid-classgeode_1_1_hybrid_solid>`.

.. index:: pair: function; load_point_set
.. _doxid-namespacegeode_1aa4ae84c454aa519617fcae8cc910a892:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::unique_ptr<:ref:`PointSet<doxid-classgeode_1_1_point_set>`<dimension>> load_point_set(
		const :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`& impl,
		absl::string_view filename
		)

API function for loading an :ref:`PointSet <doxid-classgeode_1_1_point_set>`. The adequate loader is called depending on the filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- impl

		- Data structure implementation.

	*
		- filename

		- Path to the file to load.

.. index:: pair: function; load_point_set
.. _doxid-namespacegeode_1a896fe5023e9476ab90920a265bd9ad23:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::unique_ptr<:ref:`PointSet<doxid-classgeode_1_1_point_set>`<dimension>> load_point_set(absl::string_view filename)

API function for loading an :ref:`PointSet <doxid-classgeode_1_1_point_set>`. The adequate loader is called depending on the filename extension. Default data structure implémentation is used.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- filename

		- Path to the file to load.

.. index:: pair: function; save_point_set
.. _doxid-namespacegeode_1abfd3fc09c7d0b0ad37241beac4fe7eb5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	void save_point_set(
		const :ref:`PointSet<doxid-classgeode_1_1_point_set>`<dimension>& point_set,
		absl::string_view filename
		)

API function for saving a :ref:`PointSet <doxid-classgeode_1_1_point_set>`. The adequate saver is called depending on the given filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- point_set

		- :ref:`PointSet <doxid-classgeode_1_1_point_set>` to save.

	*
		- filename

		- Path to the file where save the :ref:`PointSet <doxid-classgeode_1_1_point_set>`.

.. index:: pair: function; load_polygonal_surface
.. _doxid-namespacegeode_1a9f525be3a6117cea2ae87c4bfa59ca38:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::unique_ptr<:ref:`PolygonalSurface<doxid-classgeode_1_1_polygonal_surface>`<dimension>> load_polygonal_surface(
		const :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`& impl,
		absl::string_view filename
		)

API function for loading an :ref:`PolygonalSurface <doxid-classgeode_1_1_polygonal_surface>`. The adequate loader is called depending on the filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- impl

		- Data structure implementation.

	*
		- filename

		- Path to the file to load.

.. index:: pair: function; load_polygonal_surface
.. _doxid-namespacegeode_1ad9542d68d1e1ad3db59aad9b478b1e06:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::unique_ptr<:ref:`PolygonalSurface<doxid-classgeode_1_1_polygonal_surface>`<dimension>> load_polygonal_surface(absl::string_view filename)

API function for loading an :ref:`PolygonalSurface <doxid-classgeode_1_1_polygonal_surface>`. The adequate loader is called depending on the filename extension. Default data structure implémentation is used.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- filename

		- Path to the file to load.

.. index:: pair: function; save_polygonal_surface
.. _doxid-namespacegeode_1af4ba3331fa0355d15f855fc1fd77b737:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	void save_polygonal_surface(
		const :ref:`PolygonalSurface<doxid-classgeode_1_1_polygonal_surface>`<dimension>& polygonal_surface,
		absl::string_view filename
		)

API function for saving a :ref:`PolygonalSurface <doxid-classgeode_1_1_polygonal_surface>`. The adequate saver is called depending on the given filename extension. const PolygonalSurface< dimension >& polygonal_surface,



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- edged_curve

		- :ref:`PolygonalSurface <doxid-classgeode_1_1_polygonal_surface>` to save.

	*
		- filename

		- Path to the file where save the :ref:`PolygonalSurface <doxid-classgeode_1_1_polygonal_surface>`.

.. index:: pair: function; load_polyhedral_solid
.. _doxid-namespacegeode_1a176fda392f50036143ecdeb1bfa12d16:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::unique_ptr<:ref:`PolyhedralSolid<doxid-classgeode_1_1_polyhedral_solid>`<dimension>> load_polyhedral_solid(
		const :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`& impl,
		absl::string_view filename
		)

API function for loading an :ref:`PolyhedralSolid <doxid-classgeode_1_1_polyhedral_solid>`. The adequate loader is called depending on the filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- impl

		- Data structure implementation.

	*
		- filename

		- Path to the file to load.

.. index:: pair: function; load_polyhedral_solid
.. _doxid-namespacegeode_1a82056bc821eca46dfd66810f500eebdb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::unique_ptr<:ref:`PolyhedralSolid<doxid-classgeode_1_1_polyhedral_solid>`<dimension>> load_polyhedral_solid(absl::string_view filename)

API function for loading an :ref:`PolyhedralSolid <doxid-classgeode_1_1_polyhedral_solid>`. The adequate loader is called depending on the filename extension. Default data structure implémentation is used.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- filename

		- Path to the file to load.

.. index:: pair: function; save_polyhedral_solid
.. _doxid-namespacegeode_1a21ca1aff84553e8332fd172dc651a521:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	void save_polyhedral_solid(
		const :ref:`PolyhedralSolid<doxid-classgeode_1_1_polyhedral_solid>`<dimension>& polyhedral_solid,
		absl::string_view filename
		)

API function for saving a :ref:`PolyhedralSolid <doxid-classgeode_1_1_polyhedral_solid>`. The adequate saver is called depending on the given filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- polyhedral_solid

		- :ref:`PolyhedralSolid <doxid-classgeode_1_1_polyhedral_solid>` to save.

	*
		- filename

		- Path to the file where save the :ref:`PolyhedralSolid <doxid-classgeode_1_1_polyhedral_solid>`.

.. index:: pair: function; load_regular_grid
.. _doxid-namespacegeode_1a54883c0d0f11a6d8377f9a7d2f6a581f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::unique_ptr<RegularGrid<dimension>> load_regular_grid(
		const :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`& impl,
		absl::string_view filename
		)

API function for loading an RegularGrid. The adequate loader is called depending on the filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- impl

		- Data structure implementation.

	*
		- filename

		- Path to the file to load.

.. index:: pair: function; load_regular_grid
.. _doxid-namespacegeode_1afcf1d96c3b37241ad459bc855980cc4a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::unique_ptr<RegularGrid<dimension>> load_regular_grid(absl::string_view filename)

API function for loading a RegularGrid. The adequate loader is called depending on the filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- filename

		- Path to the file to load.

.. index:: pair: function; save_regular_grid
.. _doxid-namespacegeode_1ad51a801008d7bedde89b06be6cfaa992:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	void save_regular_grid(
		const RegularGrid<dimension>& regular_grid,
		absl::string_view filename
		)

API function for saving a RegularGrid. The adequate saver is called depending on the given filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- regular_grid

		- RegularGrid to save.

	*
		- filename

		- Path to the file where save the RegularGrid.

.. index:: pair: function; load_tetrahedral_solid
.. _doxid-namespacegeode_1a14a941221d7d7185843588ef1796198e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::unique_ptr<:ref:`TetrahedralSolid<doxid-classgeode_1_1_tetrahedral_solid>`<dimension>> load_tetrahedral_solid(
		const :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`& impl,
		absl::string_view filename
		)

API function for loading an :ref:`TetrahedralSolid <doxid-classgeode_1_1_tetrahedral_solid>`. The adequate loader is called depending on the filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- impl

		- Data structure implementation.

	*
		- filename

		- Path to the file to load.

.. index:: pair: function; load_tetrahedral_solid
.. _doxid-namespacegeode_1a2e8813a261d4d7884f67f6e3e1497986:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::unique_ptr<:ref:`TetrahedralSolid<doxid-classgeode_1_1_tetrahedral_solid>`<dimension>> load_tetrahedral_solid(absl::string_view filename)

API function for loading an :ref:`TetrahedralSolid <doxid-classgeode_1_1_tetrahedral_solid>`. The adequate loader is called depending on the filename extension. Default data structure implémentation is used.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- filename

		- Path to the file to load.

.. index:: pair: function; save_tetrahedral_solid
.. _doxid-namespacegeode_1a46ada7c17eacb9951ed8577a12f3a852:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	void save_tetrahedral_solid(
		const :ref:`TetrahedralSolid<doxid-classgeode_1_1_tetrahedral_solid>`<dimension>& tetrahedral_solid,
		absl::string_view filename
		)

API function for saving a :ref:`TetrahedralSolid <doxid-classgeode_1_1_tetrahedral_solid>`. The adequate saver is called depending on the given filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- tetrahedral_solid

		- :ref:`TetrahedralSolid <doxid-classgeode_1_1_tetrahedral_solid>` to save.

	*
		- filename

		- Path to the file where save the :ref:`TetrahedralSolid <doxid-classgeode_1_1_tetrahedral_solid>`.

.. index:: pair: function; load_triangulated_surface
.. _doxid-namespacegeode_1a29dc01620754b28942d24f7427943e78:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::unique_ptr<:ref:`TriangulatedSurface<doxid-classgeode_1_1_triangulated_surface>`<dimension>> load_triangulated_surface(
		const :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`& impl,
		absl::string_view filename
		)

API function for loading an :ref:`TriangulatedSurface <doxid-classgeode_1_1_triangulated_surface>`. The adequate loader is called depending on the filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- impl

		- Data structure implementation.

	*
		- filename

		- Path to the file to load.

.. index:: pair: function; load_triangulated_surface
.. _doxid-namespacegeode_1a0aa2012312b150d9250b853482f223ef:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::unique_ptr<:ref:`TriangulatedSurface<doxid-classgeode_1_1_triangulated_surface>`<dimension>> load_triangulated_surface(absl::string_view filename)

API function for loading an :ref:`TriangulatedSurface <doxid-classgeode_1_1_triangulated_surface>`. The adequate loader is called depending on the filename extension. Default data structure implémentation is used.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- filename

		- Path to the file to load.

.. index:: pair: function; save_triangulated_surface
.. _doxid-namespacegeode_1aa80f5521075381d4ead39f194ac373e4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	void save_triangulated_surface(
		const :ref:`TriangulatedSurface<doxid-classgeode_1_1_triangulated_surface>`<dimension>& triangulated_surface,
		absl::string_view filename
		)

API function for saving a :ref:`TriangulatedSurface <doxid-classgeode_1_1_triangulated_surface>`. The adequate saver is called depending on the given filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- triangulated_surface

		- :ref:`TriangulatedSurface <doxid-classgeode_1_1_triangulated_surface>` to save.

	*
		- filename

		- Path to the file where save the :ref:`TriangulatedSurface <doxid-classgeode_1_1_triangulated_surface>`.

.. index:: pair: function; load_vertex_set
.. _doxid-namespacegeode_1a5b07f31ac96c4395bf09489f4f125720:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::unique_ptr<:ref:`VertexSet<doxid-classgeode_1_1_vertex_set>`> opengeode_mesh_api load_vertex_set(
		const :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`& impl,
		absl::string_view filename
		)

API function for loading an :ref:`VertexSet <doxid-classgeode_1_1_vertex_set>`. The adequate loader is called depending on the filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- impl

		- Data structure implementation.

	*
		- filename

		- Path to the file to load.

.. index:: pair: function; load_vertex_set
.. _doxid-namespacegeode_1a7e0090ed0a8517172d5ec8f1f9cf83b7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::unique_ptr<:ref:`VertexSet<doxid-classgeode_1_1_vertex_set>`> opengeode_mesh_api load_vertex_set(absl::string_view filename)

API function for loading an :ref:`VertexSet <doxid-classgeode_1_1_vertex_set>`. The adequate loader is called depending on the filename extension. Default data structure implémentation is used.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- filename

		- Path to the file to load.

.. index:: pair: function; save_vertex_set
.. _doxid-namespacegeode_1a94cc8bcb32cd71b66c2d6cb320e40921:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void opengeode_mesh_api save_vertex_set(
		const :ref:`VertexSet<doxid-classgeode_1_1_vertex_set>`& vertex_set,
		absl::string_view filename
		)

API function for saving a :ref:`VertexSet <doxid-classgeode_1_1_vertex_set>`. The adequate saver is called depending on the given filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- vertex_set

		- :ref:`VertexSet <doxid-classgeode_1_1_vertex_set>` to save.

	*
		- filename

		- Path to the file where save the :ref:`VertexSet <doxid-classgeode_1_1_vertex_set>`.

.. index:: pair: function; register_model_serialize_pcontext
.. _doxid-namespacegeode_1af2e947f37b4bf38da42682b7326b643e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void opengeode_model_api register_model_serialize_pcontext(:ref:`PContext<doxid-namespacegeode_1a79da04720a9926e6212751b7e0d5b6c7>`& context)

Register all the information needed by Bitsery to serialize the objects in the model library. The context can be used only once per archive.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- context

		- The context where to register this information.

.. index:: pair: function; register_model_deserialize_pcontext
.. _doxid-namespacegeode_1a3a37e49676aa52fa069edf58ad2e0c3b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void opengeode_model_api register_model_deserialize_pcontext(:ref:`PContext<doxid-namespacegeode_1a79da04720a9926e6212751b7e0d5b6c7>`& context)

Register all the information needed by Bitsery to deserialize the objects in the model library. The context can be used only once per archive.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- context

		- The context where to register this information.

.. index:: pair: function; load_brep
.. _doxid-namespacegeode_1aa6aae08635ec147db4348b2aa375b46d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`BRep<doxid-classgeode_1_1_b_rep>` opengeode_model_api load_brep(absl::string_view filename)

API function for loading a BoundaryRepresentation. The adequate loader is called depending on the filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- filename

		- Path to the file to load.



.. rubric:: Returns:

Loaded :ref:`BRep <doxid-classgeode_1_1_b_rep>`.

.. index:: pair: function; save_brep
.. _doxid-namespacegeode_1a5740f1154ca1ae97b38be95bdf0caa3c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void opengeode_model_api save_brep(const :ref:`BRep<doxid-classgeode_1_1_b_rep>`& brep, absl::string_view filename)

API function for saving a BoundaryRepresentation. The adequate saver is called depending on the given filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- brep

		- :ref:`BRep <doxid-classgeode_1_1_b_rep>` to save.

	*
		- filename

		- Path to the file where save the brep.

.. index:: pair: function; load_section
.. _doxid-namespacegeode_1a14fe29f519ee8cf81b5b9e7f651c203e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Section<doxid-classgeode_1_1_section>` opengeode_model_api load_section(absl::string_view filename)

API function for loading a :ref:`Section <doxid-classgeode_1_1_section>`. The adequate loader is called depending on the filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- filename

		- Path to the file to load.



.. rubric:: Returns:

Loaded :ref:`Section <doxid-classgeode_1_1_section>`.

.. index:: pair: function; save_section
.. _doxid-namespacegeode_1ae92f24302459ce1748811758a5f24f96:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void opengeode_model_api save_section(
		const :ref:`Section<doxid-classgeode_1_1_section>`& section,
		absl::string_view filename
		)

API function for saving a :ref:`Section <doxid-classgeode_1_1_section>`. The adequate saver is called depending on the given filename extension.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- section

		- :ref:`Section <doxid-classgeode_1_1_section>` to save.

	*
		- filename

		- Path to the file where save the section.

