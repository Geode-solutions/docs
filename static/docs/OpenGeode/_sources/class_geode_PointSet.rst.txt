.. index:: pair: class; geode::PointSet
.. _doxid-classgeode_1_1_point_set:

template class geode::PointSet
==============================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Interface class to represent a set of 2D or 3D points. :ref:`More...<details-classgeode_1_1_point_set>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <point_set.h>
	
	template <index_t dimension>
	class PointSet: public :ref:`geode::VertexSet<doxid-classgeode_1_1_vertex_set>`
	{
	public:
		// typedefs
	
		typedef :ref:`PointSetBuilder<doxid-classgeode_1_1_point_set_builder>`<dimension> :target:`Builder<doxid-classgeode_1_1_point_set_1a026c3630d8710c90da57d2532ff3e69f>`;

		// fields
	
		static constexpr auto :target:`dim<doxid-classgeode_1_1_point_set_1a905e9e9927ae42577e4e4a9775714245>` = dimension;

		// methods
	
		static std::unique_ptr<PointSet<dimension>> :ref:`create<doxid-classgeode_1_1_point_set_1a07dc124248af6ca45f32bd1bc7dcfd73>`();
		static std::unique_ptr<PointSet<dimension>> :ref:`create<doxid-classgeode_1_1_point_set_1a826dd0e1eaead54aa156a7417f37ad46>`(const :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`& impl);
		static :ref:`MeshType<doxid-namespacegeode_1a4a0dbbac82ed73238f90bb9b2e51db53>` :target:`type_name_static<doxid-classgeode_1_1_point_set_1a3306f5d9c44a135ea24f36192fd53bb3>`();
		std::unique_ptr<PointSet<dimension>> :target:`clone<doxid-classgeode_1_1_point_set_1ac4e200f55e1a637d9589016e815f22f4>`() const;
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& :target:`point<doxid-classgeode_1_1_point_set_1aa3ed43c031f8aa0415365cb1a0b67603>`(:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` vertex_id) const;
		:ref:`BoundingBox<doxid-classgeode_1_1_bounding_box>`<dimension> :ref:`bounding_box<doxid-classgeode_1_1_point_set_1a44c8a6f5ca12d7cc7bd3b0dd3b809d0b>`() const;
	};

	// direct descendants

	template <index_t dimension>
	class :ref:`OpenGeodePointSet<doxid-classgeode_1_1_open_geode_point_set>`;

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// typedefs
	
		typedef :ref:`VertexSetBuilder<doxid-classgeode_1_1_vertex_set_builder>` :ref:`Builder<doxid-classgeode_1_1_vertex_set_1ad63688e2a30d4c7cb5865df73012f9b4>`;

		// fields
	
		static constexpr auto :ref:`DEFAULT_NAME<doxid-classgeode_1_1_identifier_1ac97e8180509443914dde94fb59b338fa>` = "default_name";

		// methods
	
		const :ref:`uuid<doxid-structgeode_1_1uuid>`& :ref:`id<doxid-classgeode_1_1_identifier_1a32f0ba602aaca6856fc6858092326ab1>`() const;
		absl::string_view :ref:`name<doxid-classgeode_1_1_identifier_1a7be1aea6e7c78e4844040a6d972614a8>`() const;
		void :ref:`save_identifier<doxid-classgeode_1_1_identifier_1a32e167673aab3d16cdd19da604293288>`(absl::string_view directory) const;
		void :ref:`set_id<doxid-classgeode_1_1_identifier_1a8d2b8d1a63e26a5766ae89ed83e1a539>`(:ref:`uuid<doxid-structgeode_1_1uuid>` id, IdentifierKey);
		void :ref:`set_name<doxid-classgeode_1_1_identifier_1a99869829b2e1db630aee0a8a25d7fe33>`(absl::string_view name, IdentifierKey);
		void :ref:`load_identifier<doxid-classgeode_1_1_identifier_1a52e5c81028516f44a47b3fd6ca7211b7>`(absl::string_view directory, IdentifierKey);
		static std::unique_ptr<:ref:`VertexSet<doxid-classgeode_1_1_vertex_set>`> :ref:`create<doxid-classgeode_1_1_vertex_set_1a290e8167ed522d6c5cb70bae169cabcc>`();
		static std::unique_ptr<:ref:`VertexSet<doxid-classgeode_1_1_vertex_set>`> :ref:`create<doxid-classgeode_1_1_vertex_set_1a4cedcfab9f71d2cbcde7d049d0556d21>`(const :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`& impl);
		static :ref:`MeshType<doxid-namespacegeode_1a4a0dbbac82ed73238f90bb9b2e51db53>` :ref:`type_name_static<doxid-classgeode_1_1_vertex_set_1adde63eb22b6564fd2ffd20bb374c3996>`();
		std::unique_ptr<:ref:`VertexSet<doxid-classgeode_1_1_vertex_set>`> :ref:`clone<doxid-classgeode_1_1_vertex_set_1a59f8cdf17a798e4746e3b90baa8be080>`() const;
		virtual absl::string_view :ref:`native_extension<doxid-classgeode_1_1_vertex_set_1adee799d7c11a4401041b9da48fcbd86a>`() const = 0;
		:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` :ref:`nb_vertices<doxid-classgeode_1_1_vertex_set_1a54faa6fb3f4a9086c44452058dc3919e>`() const;
		:ref:`AttributeManager<doxid-classgeode_1_1_attribute_manager>`& :ref:`vertex_attribute_manager<doxid-classgeode_1_1_vertex_set_1aee0082194a8fb2660fb187687de79b2d>`() const;
		virtual :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>` :ref:`impl_name<doxid-classgeode_1_1_vertex_set_1a27db2667d140cc8f6645531788765815>`() const = 0;
		virtual :ref:`MeshType<doxid-namespacegeode_1a4a0dbbac82ed73238f90bb9b2e51db53>` :ref:`type_name<doxid-classgeode_1_1_vertex_set_1ae19dce429c1353a4616424fa9c1076e1>`() const = 0;

.. _details-classgeode_1_1_point_set:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Interface class to represent a set of 2D or 3D points. A point is a vertex associated to spatial coordinates

Methods
-------

.. index:: pair: function; create
.. _doxid-classgeode_1_1_point_set_1a07dc124248af6ca45f32bd1bc7dcfd73:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static std::unique_ptr<PointSet<dimension>> create()

Create a new :ref:`PointSet <doxid-classgeode_1_1_point_set>` using default data structure.

.. index:: pair: function; create
.. _doxid-classgeode_1_1_point_set_1a826dd0e1eaead54aa156a7417f37ad46:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static std::unique_ptr<PointSet<dimension>> create(const :ref:`MeshImpl<doxid-namespacegeode_1a4acdb225332b912b395b0d238a21eb10>`& impl)

Create a new :ref:`PointSet <doxid-classgeode_1_1_point_set>` using a specified data structure.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- impl

		- Data structure implementation

.. index:: pair: function; bounding_box
.. _doxid-classgeode_1_1_point_set_1a44c8a6f5ca12d7cc7bd3b0dd3b809d0b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`BoundingBox<doxid-classgeode_1_1_bounding_box>`<dimension> bounding_box() const

Compute the bounding box from mesh vertices

