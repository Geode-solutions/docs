.. index:: pair: namespace; geode::detail
.. _doxid-namespacegeode_1_1detail:

namespace geode::detail
=======================

.. toctree::
	:hidden:

	class_geode_detail_ComponentsStorage.rst
	class_geode_detail_EdgesImpl.rst
	class_geode_detail_FacetEdgesImpl.rst
	class_geode_detail_FacetStorage.rst
	class_geode_detail_MeshStorage.rst
	class_geode_detail_PointsImpl.rst
	class_geode_detail_PointsViewImpl.rst
	class_geode_detail_SolidMeshViewImpl.rst
	class_geode_detail_SurfaceMeshViewImpl.rst
	class_geode_detail_UuidToIndex.rst
	class_geode_detail_VertexCycle.rst




.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	namespace detail {

	// typedefs

	typedef :ref:`ModelCopyMapping::Mapping<doxid-classgeode_1_1_model_copy_mapping_1a2d0b4129e3ddabacb1e0759bbfb4d65c>` :target:`Mapping<doxid-namespacegeode_1_1detail_1a6d2355911e396d6c746fdf0843caf3a0>`;

	// classes

	template <typename Component>
	class :ref:`ComponentsStorage<doxid-classgeode_1_1detail_1_1_components_storage>`;

	class :ref:`EdgesImpl<doxid-classgeode_1_1detail_1_1_edges_impl>`;

	template <index_t dimension>
	class :ref:`FacetEdgesImpl<doxid-classgeode_1_1detail_1_1_facet_edges_impl>`;

	template <typename VertexContainer>
	class :ref:`FacetStorage<doxid-classgeode_1_1detail_1_1_facet_storage>`;

	template <typename Mesh>
	class :ref:`MeshStorage<doxid-classgeode_1_1detail_1_1_mesh_storage>`;

	template <index_t dimension>
	class :ref:`PointsImpl<doxid-classgeode_1_1detail_1_1_points_impl>`;

	template <index_t dimension, typename Mesh>
	class :ref:`PointsViewImpl<doxid-classgeode_1_1detail_1_1_points_view_impl>`;

	template <index_t dimension>
	class :ref:`SolidMeshViewImpl<doxid-classgeode_1_1detail_1_1_solid_mesh_view_impl>`;

	template <index_t dimension>
	class :ref:`SurfaceMeshViewImpl<doxid-classgeode_1_1detail_1_1_surface_mesh_view_impl>`;

	class :ref:`UuidToIndex<doxid-classgeode_1_1detail_1_1_uuid_to_index>`;

	template <typename Container>
	class :ref:`VertexCycle<doxid-classgeode_1_1detail_1_1_vertex_cycle>`;

	// global variables

	static constexpr std::array<std::array<:ref:`geode::local_index_t<doxid-namespacegeode_1aa4af2b9c3c63eb304286e812ba69a9a9>`, 3>, 4> :target:`tetrahedron_facet_vertices<doxid-namespacegeode_1_1detail_1aacb41daae58ca0fa195c1853f1b09b5d>` { { { 1, 3, 2 }, { 0, 2, 3 }, { 3, 1, 0 },                 { 0, 1, 2 } } };
	static constexpr std::array<std::array<:ref:`geode::local_index_t<doxid-namespacegeode_1aa4af2b9c3c63eb304286e812ba69a9a9>`, 2>, 6> :target:`tetrahedron_edge_vertices<doxid-namespacegeode_1_1detail_1add7598fd43e5034e6e77f674d9549ad4>` { { { 0, 1 }, { 0, 2 }, { 0, 3 }, { 1, 2 },                 { 1, 3 }, { 2, 3 } } };
	static constexpr std::array<std::array<:ref:`geode::local_index_t<doxid-namespacegeode_1aa4af2b9c3c63eb304286e812ba69a9a9>`, 4>, 6> :target:`hexahedron_facet_vertices<doxid-namespacegeode_1_1detail_1abf12ff103c7582b56934c84a2a20ff74>` { { { 0, 1, 2, 3 }, { 4, 7, 6, 5 },                 { 0, 4, 5, 1 }, { 2, 6, 7, 3 }, { 1, 5, 6, 2 },                 { 0, 3, 7, 4 } } };
	static constexpr std::array<std::array<:ref:`geode::local_index_t<doxid-namespacegeode_1aa4af2b9c3c63eb304286e812ba69a9a9>`, 2>, 12> :target:`hexahedron_edge_vertices<doxid-namespacegeode_1_1detail_1a10efee30430b64e9f7bf12bc7301a184>` { { { 0, 1 }, { 1, 2 }, { 2, 3 }, { 3, 0 },                 { 4, 5 }, { 5, 6 }, { 6, 7 }, { 7, 4 }, { 0, 4 }, { 1, 5 },                 { 2, 6 }, { 3, 7 } } };
	static const std::array<std::vector<:ref:`geode::local_index_t<doxid-namespacegeode_1aa4af2b9c3c63eb304286e812ba69a9a9>`>, 5> :target:`prism_facet_vertices<doxid-namespacegeode_1_1detail_1a77fd094253d7346e406d14978724c1b8>` { { { 0, 1, 2 }, { 3, 5, 4 }, { 0, 3, 4, 1 },                 { 1, 4, 5, 2 }, { 0, 2, 5, 3 } } };
	static constexpr std::array<std::array<:ref:`geode::local_index_t<doxid-namespacegeode_1aa4af2b9c3c63eb304286e812ba69a9a9>`, 2>, 9> :target:`prism_edge_vertices<doxid-namespacegeode_1_1detail_1afc6c2dd561eebfef093c6e528ac457e6>` { { { 0, 1 }, { 1, 2 }, { 2, 0 }, { 3, 4 },                 { 4, 5 }, { 5, 3 }, { 0, 3 }, { 1, 4 }, { 2, 5 } } };
	static const std::array<std::vector<:ref:`geode::local_index_t<doxid-namespacegeode_1aa4af2b9c3c63eb304286e812ba69a9a9>`>, 5> :target:`pyramid_facet_vertices<doxid-namespacegeode_1_1detail_1ac9591673c726e2a1204f86e099947d9f>` { { { 0, 1, 2, 3 }, { 0, 4, 1 }, { 1, 4, 2 },                 { 2, 4, 3 }, { 0, 3, 4 } } };
	static constexpr std::array<std::array<:ref:`geode::local_index_t<doxid-namespacegeode_1aa4af2b9c3c63eb304286e812ba69a9a9>`, 2>, 8> :target:`pyramid_edge_vertices<doxid-namespacegeode_1_1detail_1a16111543f7fd79e890f0fe960f7d3b12>` { { { 0, 1 }, { 1, 2 }, { 2, 3 }, { 3, 0 },                 { 0, 4 }, { 1, 4 }, { 2, 4 }, { 3, 4 } } };

	// global functions

	template <typename Serializer>
	void :target:`register_basic_pcontext<doxid-namespacegeode_1_1detail_1a8648101a87baa0975d8f9ccf34abb183>`(:ref:`PContext<doxid-namespacegeode_1a79da04720a9926e6212751b7e0d5b6c7>`& context);

	std::vector<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`> :target:`mapping_after_deletion<doxid-namespacegeode_1_1detail_1a90890e796e3fc5c2e28539ac82272d6c>`(const std::vector<bool>& to_delete);

	template <typename Serializer>
	void :target:`register_geometry_pcontext<doxid-namespacegeode_1_1detail_1aef91870a0b7782c65a3aa06b974a4270>`(:ref:`PContext<doxid-namespacegeode_1a79da04720a9926e6212751b7e0d5b6c7>`& context);

	template <typename Container>
	void :target:`rotate<doxid-namespacegeode_1_1detail_1afc9fe5a2d2089d4b9a5585c6b06aa0eb>`(Container& vertices);

	void :target:`rotate<doxid-namespacegeode_1_1detail_1a164616505cb543b1e9f47c8230001bdc>`(std::array<:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>`, 2>& vertices);

	template <typename H, typename Container>
	H :target:`AbslHashValue<doxid-namespacegeode_1_1detail_1a9ac1ec233c59cb29488d95fa5a307f2b>`(
		H h,
		const :ref:`VertexCycle<doxid-classgeode_1_1detail_1_1_vertex_cycle>`<Container>& m
		);

	template <typename Serializer>
	void :target:`register_model_pcontext<doxid-namespacegeode_1_1detail_1aabe609223c623a9e6fbad122d1949d3f>`(:ref:`PContext<doxid-namespacegeode_1a79da04720a9926e6212751b7e0d5b6c7>`& context);

	template <typename Range>
	:ref:`index_t<doxid-namespacegeode_1a128f6686f72f4c3ef6c04172aacb7f05>` :target:`count_relationships<doxid-namespacegeode_1_1detail_1a3922ed9d6481362fb802c3a6bcbfe712>`(const :ref:`Range<doxid-namespacegeode_1af2b42e3794d9eb6a1abf901029f56c5e>`& range);

	template <typename ModelFrom, typename ModelTo, typename BuilderTo>
	:ref:`Mapping<doxid-namespacegeode_1_1detail_1a6d2355911e396d6c746fdf0843caf3a0>` :target:`copy_corner_components<doxid-namespacegeode_1_1detail_1aaa63507ad5adbd85c85f5899e694087c>`(
		const ModelFrom& from,
		const ModelTo& to,
		BuilderTo& builder_to
		);

	template <typename ModelFrom, typename ModelTo, typename BuilderTo>
	:ref:`Mapping<doxid-namespacegeode_1_1detail_1a6d2355911e396d6c746fdf0843caf3a0>` :target:`copy_line_components<doxid-namespacegeode_1_1detail_1a4dff5a59d71b79b432ad89b665bc9020>`(
		const ModelFrom& from,
		const ModelTo& to,
		BuilderTo& builder_to
		);

	template <typename ModelFrom, typename ModelTo, typename BuilderTo>
	:ref:`Mapping<doxid-namespacegeode_1_1detail_1a6d2355911e396d6c746fdf0843caf3a0>` :target:`copy_surface_components<doxid-namespacegeode_1_1detail_1a9e00e77352d569b7d4118c4a0c3bb85a>`(
		const ModelFrom& from,
		const ModelTo& to,
		BuilderTo& builder_to
		);

	template <typename ModelFrom, typename ModelTo, typename BuilderTo>
	:ref:`Mapping<doxid-namespacegeode_1_1detail_1a6d2355911e396d6c746fdf0843caf3a0>` :target:`copy_block_components<doxid-namespacegeode_1_1detail_1a4f39e7bcd6c2710d589b4270538b51f9>`(
		const ModelFrom& from,
		const ModelTo& to,
		BuilderTo& builder_to
		);

	template <typename Model, typename BuilderTo>
	:ref:`Mapping<doxid-namespacegeode_1_1detail_1a6d2355911e396d6c746fdf0843caf3a0>` :target:`copy_model_boundary_components<doxid-namespacegeode_1_1detail_1a37efd9128fecff2a59ad00a6f8e0ee0f>`(
		const Model& from,
		BuilderTo& builder_to
		);

	template <typename ModelFrom, typename ModelTo, typename BuilderTo>
	void :target:`copy_corner_geometry<doxid-namespacegeode_1_1detail_1a74ec6762986e1501a41bcd718f49e50a>`(
		const ModelFrom& from,
		const ModelTo& to,
		BuilderTo& builder_to,
		const :ref:`Mapping<doxid-namespacegeode_1_1detail_1a6d2355911e396d6c746fdf0843caf3a0>`& corners
		);

	template <typename ModelFrom, typename ModelTo, typename BuilderTo>
	void :target:`copy_line_geometry<doxid-namespacegeode_1_1detail_1a8b7deb86b3f9c0eff5dae18597f0f873>`(
		const ModelFrom& from,
		const ModelTo& to,
		BuilderTo& builder_to,
		const :ref:`Mapping<doxid-namespacegeode_1_1detail_1a6d2355911e396d6c746fdf0843caf3a0>`& lines
		);

	template <typename ModelFrom, typename ModelTo, typename BuilderTo>
	void :target:`copy_surface_geometry<doxid-namespacegeode_1_1detail_1a5866d768b5c277e3e3d8e5917481a956>`(
		const ModelFrom& from,
		const ModelTo& to,
		BuilderTo& builder_to,
		const :ref:`Mapping<doxid-namespacegeode_1_1detail_1a6d2355911e396d6c746fdf0843caf3a0>`& surfaces
		);

	template <typename ModelFrom, typename ModelTo, typename BuilderTo>
	void :target:`copy_block_geometry<doxid-namespacegeode_1_1detail_1ae7885a7336ae0b29c1f107adf0445d9e>`(
		const ModelFrom& from,
		const ModelTo& to,
		BuilderTo& builder_to,
		const :ref:`Mapping<doxid-namespacegeode_1_1detail_1a6d2355911e396d6c746fdf0843caf3a0>`& blocks
		);

	template <typename Model, typename BuilderTo>
	void :target:`copy_vertex_identifier_components<doxid-namespacegeode_1_1detail_1a44f723e9a2c8032cf687163d87be9b3c>`(
		const Model& from,
		BuilderTo& builder_to,
		const :ref:`ComponentType<doxid-namespacegeode_1a21470130d8cd560c7be98c9e4207e526>`& type,
		const :ref:`Mapping<doxid-namespacegeode_1_1detail_1a6d2355911e396d6c746fdf0843caf3a0>`& mapping
		);

	} // namespace detail
