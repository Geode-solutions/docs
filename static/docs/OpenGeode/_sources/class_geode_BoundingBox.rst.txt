.. index:: pair: class; geode::BoundingBox
.. _doxid-classgeode_1_1_bounding_box:

template class geode::BoundingBox
=================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Bounding box implemented for 2D and 3D points. :ref:`More...<details-classgeode_1_1_bounding_box>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <bounding_box.h>
	
	template <index_t dimension>
	class BoundingBox
	{
	public:
		// construction
	
		:target:`BoundingBox<doxid-classgeode_1_1_bounding_box_1aa21de0de5e303073891e631d1d13d8d6>`();
		:target:`BoundingBox<doxid-classgeode_1_1_bounding_box_1a7d78edf02cd77cc5b959223cd5ed5a74>`(const BoundingBox& other);
		:target:`BoundingBox<doxid-classgeode_1_1_bounding_box_1ab4a7ae0d283da73b7642aba161b7cc27>`(BoundingBox&& other);

		// methods
	
		BoundingBox& :target:`operator =<doxid-classgeode_1_1_bounding_box_1a62af8bd08c52ca2016915f1bf82ce817>` (const BoundingBox& other);
		BoundingBox& :target:`operator =<doxid-classgeode_1_1_bounding_box_1a0fabc63a1a18e5ec431315e6ffabc87f>` (BoundingBox&& other);
		void :target:`add_box<doxid-classgeode_1_1_bounding_box_1aa01ebddaebe0cb00ee4ce9af103910b1>`(const BoundingBox<dimension>& box);
		void :target:`add_point<doxid-classgeode_1_1_bounding_box_1ad2e23377b88d730ec18711bff7ea9229>`(const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point);
		bool :target:`contains<doxid-classgeode_1_1_bounding_box_1abcbb35034e2afb57a7ffa0709c26696d>`(const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& point) const;
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& :target:`min<doxid-classgeode_1_1_bounding_box_1a1ab26b4a928e378a2aa74d5a28662b25>`() const;
		const :ref:`Point<doxid-classgeode_1_1_point>`<dimension>& :target:`max<doxid-classgeode_1_1_bounding_box_1a7a8a6e89ae1dfc3c4ccf76faa17ee565>`() const;
		:ref:`Point<doxid-classgeode_1_1_point>`<dimension> :target:`center<doxid-classgeode_1_1_bounding_box_1ae6392363b653cab919587bdc001c7ce8>`() const;
		bool :ref:`boxes_overlap<doxid-classgeode_1_1_bounding_box_1ac3088b09c2df451ba441e0cb92b30659>`(const BoundingBox<dimension>& box) const;
		BoundingBox<dimension> :ref:`box_union<doxid-classgeode_1_1_bounding_box_1a4e55460a59b991b3f2b3dfc58e63c52a>`(const BoundingBox<dimension>& box) const;
		std::tuple<bool, BoundingBox<dimension>> :ref:`box_intersection<doxid-classgeode_1_1_bounding_box_1ac37523c65b4b542f49475949cbcb3779>`(const BoundingBox<dimension>& box) const;
	};
.. _details-classgeode_1_1_bounding_box:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Bounding box implemented for 2D and 3D points.

Methods
-------

.. index:: pair: function; boxes_overlap
.. _doxid-classgeode_1_1_bounding_box_1ac3088b09c2df451ba441e0cb92b30659:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool boxes_overlap(const BoundingBox<dimension>& box) const

Check if another :ref:`BoundingBox <doxid-classgeode_1_1_bounding_box>` overlaps this one.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- box

		- The other :ref:`BoundingBox <doxid-classgeode_1_1_bounding_box>` to test



.. rubric:: Returns:

true if there is an overlap

.. index:: pair: function; box_union
.. _doxid-classgeode_1_1_bounding_box_1a4e55460a59b991b3f2b3dfc58e63c52a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	BoundingBox<dimension> box_union(const BoundingBox<dimension>& box) const

Compute the union with another :ref:`BoundingBox <doxid-classgeode_1_1_bounding_box>`



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- box

		- The other :ref:`BoundingBox <doxid-classgeode_1_1_bounding_box>` to use



.. rubric:: Returns:

The :ref:`BoundingBox <doxid-classgeode_1_1_bounding_box>` representing the union of the two other boxes.

.. index:: pair: function; box_intersection
.. _doxid-classgeode_1_1_bounding_box_1ac37523c65b4b542f49475949cbcb3779:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::tuple<bool, BoundingBox<dimension>> box_intersection(const BoundingBox<dimension>& box) const

Compute the intersection with another :ref:`BoundingBox <doxid-classgeode_1_1_bounding_box>`



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- box

		- The other :ref:`BoundingBox <doxid-classgeode_1_1_bounding_box>` to use



.. rubric:: Returns:

1) true is there is an intersection, 2) The :ref:`BoundingBox <doxid-classgeode_1_1_bounding_box>` representing the intersection of the two other boxes.

