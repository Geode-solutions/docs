.. index:: pair: struct; geode::SurfaceMovePointValidities
.. _doxid-structgeode_1_1_surface_move_point_validities:

template struct geode::SurfaceMovePointValidities
=================================================

.. toctree::
	:hidden:

Overview
~~~~~~~~




.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <information.h>
	
	template <index_t dimension>
	struct SurfaceMovePointValidities
	{
		// typedefs
	
		typedef absl::flat_hash_map<uuid, std::vector<:ref:`Invalidity<doxid-structgeode_1_1_invalidity>`<index_t, :ref:`SurfaceMovePointValidity<doxid-structgeode_1_1_surface_move_point_validity>`<dimension>>>> :ref:`MeshInvalidities<doxid-structgeode_1_1_surface_move_point_validities_1ac61d281362aa7f07a1a1a7530a877b0a>`;

		// fields
	
		:ref:`MeshInvalidities<doxid-structgeode_1_1_surface_move_point_validities_1ac61d281362aa7f07a1a1a7530a877b0a>` :target:`mesh_invalidities<doxid-structgeode_1_1_surface_move_point_validities_1a78f5d8244c7c89f66aaa311a974aa0c8>` {};
	};
.. _details-structgeode_1_1_surface_move_point_validities:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~



Typedefs
--------

.. index:: pair: typedef; MeshInvalidities
.. _doxid-structgeode_1_1_surface_move_point_validities_1ac61d281362aa7f07a1a1a7530a877b0a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef absl::flat_hash_map<uuid, std::vector<:ref:`Invalidity<doxid-structgeode_1_1_invalidity>`<index_t, :ref:`SurfaceMovePointValidity<doxid-structgeode_1_1_surface_move_point_validity>`<dimension>>>> MeshInvalidities

Information on how the meshes become invalid or not.

