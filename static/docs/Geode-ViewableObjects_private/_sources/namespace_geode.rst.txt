.. index:: pair: namespace; geode
.. _doxid-namespacegeode:

namespace geode
===============

.. toctree::
	:hidden:

Overview
~~~~~~~~




.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	namespace geode {

	// typedefs

	typedef ModuleLicenseChecker<ViewableObjects> :target:`ViewableObjectsLicenseChecker<doxid-namespacegeode_1a3c3e41d7ba56cb7d058fc0778c68d089>`;

	// global variables

	static constexpr char :target:`ViewableObjects<doxid-namespacegeode_1a0709375d14717bafc3fb0f081842dbf9>`[] = "ViewableObjects";

	// global functions

	std::string geode_viewableobjects_conversion_api :ref:`save_viewable_brep<doxid-namespacegeode_1a7064294cd5522a6fdada86bb3618d9e1>`(
		const BRep& brep,
		absl::string_view filename_without_extension
		);

	absl::string_view geode_viewableobjects_conversion_api :target:`brep_viewable_extension<doxid-namespacegeode_1ae260e8d6abec49377b8031ebf7f6e5bc>`();

	:target:`OPENGEODE_LIBRARY<doxid-namespacegeode_1acc1341ca739e90709751e3417e9189c3>`(
		geode_viewableobjects_conversion_api,
		ViewableObjectsConversion
		);

	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1ab37389a784cc08889088d057d6745c8e>`(EdgedCurve);

	template <index_t dimension>
	std::string :ref:`save_viewable_edged_curve<doxid-namespacegeode_1a3c7ef9032f92f75de1cd8b4986892cd4>`(
		const EdgedCurve<dimension>& edged_curve,
		absl::string_view filename_without_extension
		);

	absl::string_view geode_viewableobjects_conversion_api :target:`edged_curve_viewable_extension<doxid-namespacegeode_1a965218e3fa1f9143d11297fd8e7dbba7>`();
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a1da5adee14f91deff17a0b855b2c8e84>`(HybridSolid);

	template <index_t dimension>
	std::string :ref:`save_viewable_hybrid_solid<doxid-namespacegeode_1a61e4b46005fbacfbefbce49ff6dc6501>`(
		const HybridSolid<dimension>& hybrid_solid,
		absl::string_view filename_without_extension
		);

	absl::string_view geode_viewableobjects_conversion_api :target:`hybrid_solid_viewable_extension<doxid-namespacegeode_1ab71ab4b53e8dc3556fce7173791b2c82>`();
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a55897b30a3ff5e25684f4268a974caad>`(PointSet);

	template <index_t dimension>
	std::string :ref:`save_viewable_point_set<doxid-namespacegeode_1a01e7d6ce6056d0d3a0f9e6a93820cd46>`(
		const PointSet<dimension>& point_set,
		absl::string_view filename_without_extension
		);

	absl::string_view geode_viewableobjects_conversion_api :target:`point_set_viewable_extension<doxid-namespacegeode_1a0866448a8a02acbfc1957dacc25465dd>`();
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1aa326268026b80210a023b9d2edec059d>`(PolygonalSurface);

	template <index_t dimension>
	std::string :ref:`save_viewable_polygonal_surface<doxid-namespacegeode_1acced4f5f7f37d93a3f4c6381b43c4bdc>`(
		const PolygonalSurface<dimension>& polygonal_surface,
		absl::string_view filename_without_extension
		);

	absl::string_view geode_viewableobjects_conversion_api :target:`polygonal_surface_viewable_extension<doxid-namespacegeode_1a6f4783f9844acbbdebe35d1c4d2fa92b>`();
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a1e8e55e5371b72b9963704762267ff26>`(PolyhedralSolid);

	template <index_t dimension>
	std::string :ref:`save_viewable_polyhedral_solid<doxid-namespacegeode_1a55dd7bfbbf4748c53e4cb2e1a49d22e0>`(
		const PolyhedralSolid<dimension>& polyhedral_solid,
		absl::string_view filename_without_extension
		);

	absl::string_view geode_viewableobjects_conversion_api :target:`polyhedral_solid_viewable_extension<doxid-namespacegeode_1a55da274fff3c6e00b607ea3ee74cd305>`();
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1aca4385eb3d676a070003e6270f6472ab>`(RegularGrid);

	template <index_t dimension>
	std::string :ref:`save_viewable_regular_grid<doxid-namespacegeode_1aac96b946c787e59f19939443d425fad1>`(
		const RegularGrid<dimension>& regular_grid,
		absl::string_view filename_without_extension
		);

	absl::string_view geode_viewableobjects_conversion_api :target:`regular_grid_viewable_extension<doxid-namespacegeode_1adebf63125e786579179e016c662f0654>`();

	std::string geode_viewableobjects_conversion_api :ref:`save_viewable_section<doxid-namespacegeode_1a4f5ccbafb705888663990eeb2f059539>`(
		const Section& section,
		absl::string_view filename_without_extension
		);

	absl::string_view geode_viewableobjects_conversion_api :target:`section_viewable_extension<doxid-namespacegeode_1a2d976479737f8b54ee17f06d0dd3797e>`();
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1a3b691d4711522d638d7d8f1b087e597a>`(TetrahedralSolid);

	template <index_t dimension>
	std::string :ref:`save_viewable_tetrahedral_solid<doxid-namespacegeode_1a6950083b4b55b8a479cce7e081e19dbd>`(
		const TetrahedralSolid<dimension>& tetrahedral_solid,
		absl::string_view filename_without_extension
		);

	absl::string_view geode_viewableobjects_conversion_api :target:`tetrahedral_solid_viewable_extension<doxid-namespacegeode_1ac14b0680143b02740852526b963df709>`();
	:target:`FORWARD_DECLARATION_DIMENSION_CLASS<doxid-namespacegeode_1aca0fde735cff4e277ede564650324fd0>`(TriangulatedSurface);

	template <index_t dimension>
	std::string :ref:`save_viewable_triangulated_surface<doxid-namespacegeode_1a69103141949b89fc2eb65fdb1337ad25>`(
		const TriangulatedSurface<dimension>& triangulated_surface,
		absl::string_view filename_without_extension
		);

	absl::string_view geode_viewableobjects_conversion_api :target:`triangulated_surface_viewable_extension<doxid-namespacegeode_1a9cde15a37eb1ea3ce838f08797ef991d>`();
	:target:`OPENGEODE_LIBRARY<doxid-namespacegeode_1a4ecf6fa216cde1cec2b7f5067b9a305e>`(geode_viewableobjects_qem_proxy_api, ViewableObjectsQEMProxy);
	bool geode_viewableobjects_qem_proxy_api :target:`simplify<doxid-namespacegeode_1abee83a62e8f878996b46484d71332508>`(geode::TriangulatedSurface3D& mesh);

	} // namespace geode
.. _details-namespacegeode:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~



Global Functions
----------------

.. index:: pair: function; save_viewable_brep
.. _doxid-namespacegeode_1a7064294cd5522a6fdada86bb3618d9e1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::string geode_viewableobjects_conversion_api save_viewable_brep(
		const BRep& brep,
		absl::string_view filename_without_extension
		)

Save the Data in viewable file format (e.g. VTK format)



.. rubric:: Returns:

the name of th newly created file

.. index:: pair: function; save_viewable_edged_curve
.. _doxid-namespacegeode_1a3c7ef9032f92f75de1cd8b4986892cd4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::string save_viewable_edged_curve(
		const EdgedCurve<dimension>& edged_curve,
		absl::string_view filename_without_extension
		)

Save the Data in viewable file format (e.g. VTK format)



.. rubric:: Returns:

the name of th newly created file

.. index:: pair: function; save_viewable_hybrid_solid
.. _doxid-namespacegeode_1a61e4b46005fbacfbefbce49ff6dc6501:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::string save_viewable_hybrid_solid(
		const HybridSolid<dimension>& hybrid_solid,
		absl::string_view filename_without_extension
		)

Save the Data in viewable file format (e.g. VTK format)



.. rubric:: Returns:

the name of th newly created file

.. index:: pair: function; save_viewable_point_set
.. _doxid-namespacegeode_1a01e7d6ce6056d0d3a0f9e6a93820cd46:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::string save_viewable_point_set(
		const PointSet<dimension>& point_set,
		absl::string_view filename_without_extension
		)

Save the Data in viewable file format (e.g. VTK format)



.. rubric:: Returns:

the name of th newly created file

.. index:: pair: function; save_viewable_polygonal_surface
.. _doxid-namespacegeode_1acced4f5f7f37d93a3f4c6381b43c4bdc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::string save_viewable_polygonal_surface(
		const PolygonalSurface<dimension>& polygonal_surface,
		absl::string_view filename_without_extension
		)

Save the Data in viewable file format (e.g. VTK format)



.. rubric:: Returns:

the name of th newly created file

.. index:: pair: function; save_viewable_polyhedral_solid
.. _doxid-namespacegeode_1a55dd7bfbbf4748c53e4cb2e1a49d22e0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::string save_viewable_polyhedral_solid(
		const PolyhedralSolid<dimension>& polyhedral_solid,
		absl::string_view filename_without_extension
		)

Save the Data in viewable file format (e.g. VTK format)



.. rubric:: Returns:

the name of th newly created file

.. index:: pair: function; save_viewable_regular_grid
.. _doxid-namespacegeode_1aac96b946c787e59f19939443d425fad1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::string save_viewable_regular_grid(
		const RegularGrid<dimension>& regular_grid,
		absl::string_view filename_without_extension
		)

Save the Data in viewable file format (e.g. VTK format)



.. rubric:: Returns:

the name of th newly created file

.. index:: pair: function; save_viewable_section
.. _doxid-namespacegeode_1a4f5ccbafb705888663990eeb2f059539:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::string geode_viewableobjects_conversion_api save_viewable_section(
		const Section& section,
		absl::string_view filename_without_extension
		)

Save the Data in viewable file format (e.g. VTK format)



.. rubric:: Returns:

the name of th newly created file

.. index:: pair: function; save_viewable_tetrahedral_solid
.. _doxid-namespacegeode_1a6950083b4b55b8a479cce7e081e19dbd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::string save_viewable_tetrahedral_solid(
		const TetrahedralSolid<dimension>& tetrahedral_solid,
		absl::string_view filename_without_extension
		)

Save the Data in viewable file format (e.g. VTK format)



.. rubric:: Returns:

the name of th newly created file

.. index:: pair: function; save_viewable_triangulated_surface
.. _doxid-namespacegeode_1a69103141949b89fc2eb65fdb1337ad25:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <index_t dimension>
	std::string save_viewable_triangulated_surface(
		const TriangulatedSurface<dimension>& triangulated_surface,
		absl::string_view filename_without_extension
		)

Save the Data in viewable file format (e.g. VTK format)



.. rubric:: Returns:

the name of th newly created file

